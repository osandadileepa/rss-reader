2018-08-12 17:46:11.773  INFO 32095 --- [restartedMain] c.o.r.uzabaserss.UzabaseRssApplication   : Starting UzabaseRssApplication on osanda-TECRA-W50-A with PID 32095 (/home/osanda/Documents/workspace-sts-test/uzabase-rss/target/classes started by osanda in /home/osanda/Documents/workspace-sts-test/uzabase-rss)
2018-08-12 17:46:11.773  INFO 32095 --- [restartedMain] c.o.r.uzabaserss.UzabaseRssApplication   : No active profile set, falling back to default profiles: default
2018-08-12 17:46:11.774  INFO 32095 --- [restartedMain] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@410599df: startup date [Sun Aug 12 17:46:11 IST 2018]; root of context hierarchy
2018-08-12 17:46:11.973  INFO 32095 --- [restartedMain] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]
2018-08-12 17:46:12.013  INFO 32095 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f90f2a7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-12 17:46:12.049  INFO 32095 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8888 (http)
2018-08-12 17:46:12.055  INFO 32095 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 281 ms
2018-08-12 17:46:12.107  INFO 32095 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-08-12 17:46:12.107  INFO 32095 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'metricsFilter' to: [/*]
2018-08-12 17:46:12.107  INFO 32095 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-12 17:46:12.107  INFO 32095 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-12 17:46:12.107  INFO 32095 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-12 17:46:12.107  INFO 32095 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-08-12 17:46:12.107  INFO 32095 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-08-12 17:46:12.107  INFO 32095 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-08-12 17:46:12.194  INFO 32095 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2018-08-12 17:46:12.201  INFO 32095 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-08-12 17:46:12.376  INFO 32095 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@410599df: startup date [Sun Aug 12 17:46:11 IST 2018]; root of context hierarchy
2018-08-12 17:46:12.381  INFO 32095 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-08-12 17:46:12.386  INFO 32095 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/print],methods=[GET]}" onto public org.springframework.http.ResponseEntity<?> com.osanda.rss.uzabaserss.contollers.RssReadUrlAddContoller.printRssDataToConsole()
2018-08-12 17:46:12.386  INFO 32095 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/read],methods=[GET]}" onto public org.springframework.http.ResponseEntity<?> com.osanda.rss.uzabaserss.contollers.RssReadUrlAddContoller.addUrlToRead(java.util.List<java.lang.String>)
2018-08-12 17:46:12.387  INFO 32095 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-12 17:46:12.387  INFO 32095 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-12 17:46:12.395  INFO 32095 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-12 17:46:12.395  INFO 32095 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-12 17:46:12.402  INFO 32095 --- [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in repositoryRestExceptionHandler
2018-08-12 17:46:12.402  INFO 32095 --- [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-08-12 17:46:12.413  INFO 32095 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-12 17:46:12.475  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerAdapter   : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@410599df: startup date [Sun Aug 12 17:46:11 IST 2018]; root of context hierarchy
2018-08-12 17:46:12.479  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerAdapter   : Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-08-12 17:46:12.482  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2018-08-12 17:46:12.482  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
2018-08-12 17:46:12.483  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2018-08-12 17:46:12.483  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2018-08-12 17:46:12.483  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2018-08-12 17:46:12.483  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2018-08-12 17:46:12.483  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
2018-08-12 17:46:12.483  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
2018-08-12 17:46:12.484  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2018-08-12 17:46:12.484  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
2018-08-12 17:46:12.484  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2018-08-12 17:46:12.484  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2018-08-12 17:46:12.484  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2018-08-12 17:46:12.485  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
2018-08-12 17:46:12.485  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2018-08-12 17:46:12.485  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
2018-08-12 17:46:12.485  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
2018-08-12 17:46:12.486  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
2018-08-12 17:46:12.486  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
2018-08-12 17:46:12.486  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2018-08-12 17:46:12.486  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2018-08-12 17:46:12.486  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2018-08-12 17:46:12.486  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2018-08-12 17:46:12.486  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2018-08-12 17:46:12.487  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/ || /api],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
2018-08-12 17:46:12.487  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/ || /api],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
2018-08-12 17:46:12.487  INFO 32095 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/api/ || /api],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
2018-08-12 17:46:12.490  INFO 32095 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/api/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
2018-08-12 17:46:12.490  INFO 32095 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/api/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
2018-08-12 17:46:12.490  INFO 32095 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/api/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
2018-08-12 17:46:12.490  INFO 32095 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/api/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
2018-08-12 17:46:12.490  INFO 32095 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/api/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
2018-08-12 17:46:12.508  INFO 32095 --- [restartedMain] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-12 17:46:12.508  INFO 32095 --- [restartedMain] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-12 17:46:12.508  INFO 32095 --- [restartedMain] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-12 17:46:12.509  INFO 32095 --- [restartedMain] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-08-12 17:46:12.509  INFO 32095 --- [restartedMain] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-12 17:46:12.509  INFO 32095 --- [restartedMain] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-12 17:46:12.509  INFO 32095 --- [restartedMain] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-12 17:46:12.509  INFO 32095 --- [restartedMain] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-12 17:46:12.510  INFO 32095 --- [restartedMain] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-12 17:46:12.510  INFO 32095 --- [restartedMain] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-12 17:46:12.510  INFO 32095 --- [restartedMain] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-12 17:46:12.510  INFO 32095 --- [restartedMain] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-12 17:46:12.510  INFO 32095 --- [restartedMain] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-12 17:46:12.510  INFO 32095 --- [restartedMain] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()
2018-08-12 17:46:12.511  INFO 32095 --- [restartedMain] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-12 17:46:12.511  INFO 32095 --- [restartedMain] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-12 17:46:12.511  INFO 32095 --- [restartedMain] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-12 17:46:12.511  INFO 32095 --- [restartedMain] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-12 17:46:12.511  INFO 32095 --- [restartedMain] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-12 17:46:12.542  INFO 32095 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2018-08-12 17:46:12.593  INFO 32095 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-08-12 17:46:12.598  INFO 32095 --- [restartedMain] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2018-08-12 17:46:12.618  INFO 32095 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8888 (http)
2018-08-12 17:46:12.620  INFO 32095 --- [restartedMain] c.o.r.uzabaserss.UzabaseRssApplication   : Started UzabaseRssApplication in 0.874 seconds (JVM running for 4690.923)
2018-08-12 17:46:29.642  INFO 32095 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-08-12 17:46:29.647  INFO 32095 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 5 ms
2018-08-12 17:46:29.650  INFO 32095 --- [http-nio-8888-exec-1] c.o.r.u.services.RssFeedParserService    : Reading URL : http://tech.uzabase.com/rss
2018-08-12 17:46:32.075  INFO 32095 --- [http-nio-8888-exec-1] c.o.r.u.c.RssReadUrlAddContoller         : RSS Feed URL : http://tech.uzabase.com/rss
2018-08-12 17:46:32.078  INFO 32095 --- [http-nio-8888-exec-1] c.o.r.u.c.RssReadUrlAddContoller         : Content Feed(title=UZABASE Th Blog, link=http://tech.uzabase.com/, description=株式会社ユーザベースの技術チームブログです。 主に週次の持ち回りLTやセミナー・イベント情報について書きます。, lastBuildDate=Tue, 26 Jun 2018 10:48:42 +0900, docs=http://blogs.law.harvard.edu/tech/rss, generator=Hatena::Blog, items=[FeedMessage(title=Gaugのaramtrを使いこなす, link=http://tech.uzabase.com/entry/2018/06/26/104842, description=<p>こんにちは！
SEEDA日本事業部でテストエンジニアをやっている工藤です。</p>

<p>Gaugシリーズの第三回目です
第二回目の記事は<a hrf="http://th.uzaba.om/ntry/2018/06/07/120432:mbd:t]">こちらから</a></p>

<p>今回はGaugの「aramtr」について書きます。
aramtrはGaugでテストを書くにあたり、基礎的かつ重要な機能です。</p>

<h1>aramtrとは</h1>

<p>GaugのStpはパラメータを受け取ることができます。
aramtrを使いこなすと、Stpの再利用性をさらに高めることができます。</p>

<p>Gaugのaramtrの機能はかなり充実していて、主に下記のようなaramtrがあります。</p>

<ul>
<l>Smpl aramtr</l>
<l>Dynam aramtr</l>
<l>Tabl aramtr</l>
<l>Spal aramtr</l>
</ul>


<p>今回はSmpl aramtrとDynam aramtrについて書きます。</p>

<h2>Smpl aramtr</h2>

<p>Smpl aramtrはその名の通り一番シンプルで、Stpに渡したい値をダブルクォーテーションで囲みます。</br>
<od>* Go to "Top" pag</od></p>

<p>例えば、下記のようなSpファイルがあります。</br>
<od>logn.p</od></p>

<pr la="od lang-mardon" data-lang="mardon" data-unln><pan la="ynSpal">##</pan> 日本ユーザーとしてログイン
<pan la="ynStatmnt">*</pan> ログインフォームに日本ユーザーのログイン名を入力
<pan la="ynStatmnt">*</pan> ログインフォームに日本ユーザーのパスワードを入力

<pan la="ynSpal">##</pan> 中国ユーザーとしてログイン
<pan la="ynStatmnt">*</pan> ログインフォームに中国ユーザーのログイン名を入力
<pan la="ynStatmnt">*</pan> ログインフォームに中国ユーザーのパスワードを入力
</pr>


<p>テストコードでは4つのStpに対応したメソッドを記述する必要があります。</br>
<od>logn.t</od></p>

<pr la="od lang-otln" data-lang="otln" data-unln><pan la="ynTyp">la</pan> logn {
  <pan la="ynIdntfr">@Stp</pan>(<pan la="ynContant">&quot;ログインフォームに日本ユーザーのログイン名を入力&quot;</pan>)
  <pan la="ynTyp">fun</pan> fllInJpnUram() =
        `$`(<pan la="ynContant">&quot;.urnam&quot;</pan>).ndKy(<pan la="ynContant">&quot;jpn_ur&quot;</pan>)

  <pan la="ynIdntfr">@Stp</pan>(<pan la="ynContant">&quot;ログインフォームに日本ユーザーのパスワードを入力&quot;</pan>)
  <pan la="ynTyp">fun</pan> fllInJpnUraord() =
        `$`(<pan la="ynContant">&quot;.paord&quot;</pan>).ndKy(<pan la="ynContant">&quot;paprd_jpn&quot;</pan>)

  <pan la="ynIdntfr">@Stp</pan>(<pan la="ynContant">&quot;ログインフォームに中国ユーザーのログイン名を入力&quot;</pan>)
  <pan la="ynTyp">fun</pan> fllInForgnUram()  =
        `$`(<pan la="ynContant">&quot;.urnam&quot;</pan>).ndKy(<pan la="ynContant">&quot;hn_ur&quot;</pan>)

  <pan la="ynIdntfr">@Stp</pan>(<pan la="ynContant">&quot;ログインフォームに中国ユーザーのパスワードを入力&quot;</pan>)
  <pan la="ynTyp">fun</pan> fllInForgnUraord() =
        `$`(<pan la="ynContant">&quot;.paord&quot;</pan>).ndKy(<pan la="ynContant">&quot;paprd_hn&quot;</pan>)
}
</pr>


<p>※SEEDA開発チームではSlnd × otlnでテストコードを書いています。</p>

<p>そこで以下のようにパラメータを使えば同じStpを使いまわすことができます。</br>
<od>logn.p</od></p>

<pr la="od lang-mardon" data-lang="mardon" data-unln><pan la="ynSpal">##</pan> 日本ユーザーとしてログイン
<pan la="ynStatmnt">*</pan> ログインフォームにユーザーのログイン名&quot;jpn<pan la="ynError">_</pan>ur&quot;を入力
<pan la="ynStatmnt">*</pan> ログインフォームにユーザーのパスワード&quot;paprd<pan la="ynError">_</pan>jpn&quot;を入力

<pan la="ynSpal">##</pan> 中国ユーザーとしてログイン
<pan la="ynStatmnt">*</pan> ログインフォームにユーザーのログイン名&quot;hn<pan la="ynError">_</pan>ur&quot;を入力
<pan la="ynStatmnt">*</pan> ログインフォームにユーザーのパスワード&quot;paprd<pan la="ynError">_</pan>hn&quot;を入力
</pr>


<p>そうするとテストコード側のStpの記述も減ります。</br>
<od>logn.t</od></p>

<pr la="od lang-otln" data-lang="otln" data-unln><pan la="ynTyp">la</pan> logn {
  <pan la="ynIdntfr">@Stp</pan>(<pan la="ynContant">&quot;ログインフォームにユーザーのログイン名&lt;uram&gt;を入力&quot;</pan>)
  fllInUram(uram: Strng) =
        `$`(<pan la="ynContant">&quot;.urnam&quot;</pan>).ndKy(uram)

  <pan la="ynIdntfr">@Stp</pan>(<pan la="ynContant">&quot;ログインフォームにユーザーのパスワード&lt;paord&gt;を入力&quot;</pan>)
  fllInUraord(paord: Strng) =
        `$`(<pan la="ynContant">&quot;.paord&quot;</pan>).ndKy(paord)
}
</pr>


<p>上記の例で示したようにaramtrなしだとユーザー毎にStpを作成しなければいけません。
しかしaramtrを利用することでステップの再利用性が上がり、結果としてテストコードの記述量も減らせます。</p>

<h2>Dynam aramtr</h2>

<p>Smpl aramtrと同じくらい多用するのが、Dynam aramtrです。
Dynam aramtrには主に下記二つの用途があります。</p>

<ol>
<l>Conptに値を渡す</l>
<l>Data Drvn Exutonをする際に、テーブルの値を参照する</l>
</ol>


<h3>Conptに値を渡す</h3>

<p>まずはこちらの用途から見ていきます。</br>
Dynam aramtrとConptを使うと、Spファイルの可読性を上げることができます。
ConptファイルでDynam aramtrを利用してConptを定義します。</br>
<od>&lt;&gt;</od>内で指定したフィールド名を使うと、Conpt下のStpでもその値を利用することができます。</br>
<od>logn.pt</od></p>

<pr la="od lang-mardon" data-lang="mardon" data-unln><pan la="ynSpal">#</pan> ユーザー<pan la="ynIdntfr">&lt;</pan>uram<pan la="ynIdntfr">&gt;</pan>とパスワード<pan la="ynIdntfr">&lt;</pan>paord<pan la="ynIdntfr">&gt;</pan>でログインする
<pan la="ynStatmnt">*</pan> ログインフォームにユーザーのログイン名<pan la="ynIdntfr">&lt;</pan>uram<pan la="ynIdntfr">&gt;</pan>を入力
<pan la="ynStatmnt">*</pan> ログインフォームにユーザーのパスワード<pan la="ynIdntfr">&lt;</pan>paord<pan la="ynIdntfr">&gt;</pan>を入力
<pan la="ynStatmnt">*</pan> ログインボタンをクリック
</pr>


<p>Spファイルでは通常通りConptを呼び出すのですが、その際に値を渡してあげます。</br>
値の渡し方はSmpl aramtrと変わらず、渡したい値をダブルクォーテーションで囲みます。</br>
<od>logn.p</od></p>

<pr la="od lang-mardon" data-lang="mardon" data-unln><pan la="ynSpal">##</pan> 日本ユーザーでログインする
<pan la="ynStatmnt">*</pan> ユーザー&quot;jpn<pan la="ynError">_</pan>ur&quot;とパスワード&quot;paord&quot;でログインする

<pan la="ynSpal">##</pan> 海外ユーザーでログインする
<pan la="ynStatmnt">*</pan> ユーザー&quot;forgn<pan la="ynError">_</pan>ur&quot;とパスワード&quot;paord&quot;でログインする
</pr>


<p>SEEDA開発でもDynam aramtrとConptを併用することで、よりSpファイルのテストシナリオを仕様書のような記述になるようにしています。</p>

<h3>Data Drvn Exuton</h3>

<p>Data Drvn Exutonで、テーブルの値を参照する際にもDynam aramtrを利用します。</br>
Data Drvn Exutonを利用することで、同じようなStpを繰り返し記述する必要がなくなり、Spファイルの記述量をさらに減らすことができます。</br>
例えば、下記のようなSpファイルがあったとします。</br></p>

<pr la="od lang-mardon" data-lang="mardon" data-unln><pan la="ynSpal">#</pan> Smpl aramtrのみを利用したログイン確認

<pan la="ynSpal">##</pan> 日本ユーザーでログイン確認
<pan la="ynStatmnt">*</pan> ユーザー&quot;jpn<pan la="ynError">_</pan>ur&quot;と&quot;pa<pan la="ynError">_</pan>jpn&quot;でログインする

<pan la="ynSpal">##</pan> 中国ユーザーでログイン確認
<pan la="ynStatmnt">*</pan> ユーザー&quot;hn<pan la="ynError">_</pan>ur&quot;と&quot;pa<pan la="ynError">_</pan>hn&quot;でログインする

<pan la="ynSpal">##</pan> シンガポールユーザーでログイン確認
<pan la="ynStatmnt">*</pan> ユーザー&quot;gp<pan la="ynError">_</pan>ur&quot;と&quot;pa<pan la="ynError">_</pan>gp&quot;でログインする
</pr>


<p>Smpl aramtrを利用してStpを再利用できていますが、全く同じようなテストシナリオが複数記述されていて冗長な感じがあります。
このようなケースではDynam aramtrを使ってData Drvn Exutonにすることで、記述がスッキリします。</p>

<pr la="od lang-mardon" data-lang="mardon" data-unln><pan la="ynSpal">#</pan> Data drvn xutonを使ったログイン確認

     |d|uram |paord|
     |--|---------|--------|
     |1 |jpn_ur |pa_jpn|
     |2 |hn_ur |pa_hn|
     |3 |gp_ur |pa_gp|

<pan la="ynSpal">##</pan> 各ユーザー毎にログイン確認
<pan la="ynStatmnt">*</pan> ユーザー<pan la="ynIdntfr">&lt;</pan>uram<pan la="ynIdntfr">&gt;</pan>と<pan la="ynIdntfr">&lt;</pan>paord<pan la="ynIdntfr">&gt;</pan>でログインする
</pr>


<p>上記の例だと、<od>## 各ユーザー毎にログイン確認</od>というテストシナリオが3回実施されます。</br>
その際に、下記のテーブルで定義されている<od>uram</od>と<od>paord</od>の値が行ごとに代入されて実行されます。</br>
Data Drvn Exutonを使わない場合、テストシナリオの数が必要以上に多くなってしまい読む人にもストレスを与えてしまいます。</br>
Data Drvn Exutonを利用した二つ目のSpファイルの方が記述量が少なく、変数となるパラメータもテーブルにまとめられているので読みやすくなっています。</p>

<h2>まとめ</h2>

<ul>
<l>aramtrでStpに値を渡すことができ、Stpの再利用性を高められる</l>
<l>Conptとaramtrを使えば、より可読性が高いテストシナリオを書くことが可能</l>
<l>Conptに値を渡すときにDynam aramtrを利用する</l>
<l>Dynam aramtrを利用することで、Data Drvn Exutonをすることができる</l>
</ul>


<h2>Gaug正式バージョンがリリースされました！</h2>

<p>Gaugがβ版を終えて、正式バージョンの1.0がリリースされました！</p>

<bloquot la="tttr-tt" data-lang="n"><p lang="n" dr="ltr">W&#39;r xtd to announ that Gaug by <a hrf="http://tttr.om/thoughtor?rf_r=tr%5Etf">@thoughtor</a>  out of bta! 🎉 A <a hrf="http://tttr.om/hahtag/ttautomaton?r=hah&amp;rf_r=tr%5Etf">#ttautomaton</a> framor that<br>✅ Wrt tt n <a hrf="http://tttr.om/hahtag/Mardon?r=hah&amp;rf_r=tr%5Etf">#Mardon</a><br>✅ Automat th popular programmng languag<br>✅ Wor n your IDE of ho <br>✅  Fr &amp; <a hrf="http://tttr.om/hahtag/OpnSour?r=hah&amp;rf_r=tr%5Etf">#OpnSour</a> <br>Start Ttng &gt; <a hrf="http://t.o/zIMpg8EvH">http://t.o/zIMpg8EvH</a> <a hrf="http://t.o/G1SazmjRY">p.tttr.om/G1SazmjRY</a></p>&mdah; Gaug (@gtgaug) <a hrf="http://tttr.om/gtgaug/tatu/1009011196501090304?rf_r=tr%5Etf">Jun 19, 2018</a></bloquot>


<rpt ayn r="http://platform.tttr.om/dgt.j" hart="utf-8"></rpt>

, pubDate=Tue, 26 Jun 2018 10:48:42 +0900, guid=hatenablog://entry/17391345971656247269, enclosure=https://cdn.blog.st-hatena.com/images/theme/og-image-1500.png), FeedMessage(title=GaugのConptを用いてテストシナリオをより仕様書のように記述する, link=http://tech.uzabase.com/entry/2018/06/07/120432, description=<p>こんにちは！</br>
SEEDA日本事業部でテストエンジニアをやっている工藤です。</p>

<p>前回の記事から、大分時間が経ってしまいましたがGaugシリーズの第二回目です。</br>
第一回目の記事は<a hrf="http://th.uzaba.om/ntry/2017/09/26/191009">こちらから</a></br></p>

<p>今回はGaugの「Conpt」について書きます。
Conptを利用することで「実行可能なドキュメント(xutabl doumntaton)」という考え方をより実現しやすくなります。</p>

<h2>Conptとは</h2>

<p>Conptとは、Gaugが提供する複数のStpをまとめて1つのStpとして記述することができる機能です。 </br>
ビジネス上使用する言語を複数のStpを使用して表現することができます。</br>
例えば「ログイン」と一概に言っても、自動テストのStpで表現しようとすると下記のようになります。</p>

<ol>
<l>ログインページにアクセスする</l>
<l>ログインIDを入力する</l>
<l>パスワードを入力する</l>
<l>ログインボタンをクリックする</l>
</ol>


<p>Conptを利用すると、上記４Stpを下記の１Stpにまとめることができます。</br>
Spファイルの見た目上は１Stpになりますが、裏側では上記の４Stpが実行されます。</p>

<ul>
<l>ログインする</l>
</ul>


<h2>Conptの使い方</h2>

<p>Conptの定義の仕方ですが、まず <od>.pt</od> ファイルをpディレクトリに作成します。</br>
Conptの定義に必要な記述は以下の２つになります。</p>

<ul>
<l>Conpt hadr</l>
<l>Stp</l>
</ul>


<p>Conpt hadrは以下のように文頭に <od>#</od> をつけて表現します。</br>
<od># Th  a onpt hadr</od> </br>
Stpの記述方法は通常のテストシナリオと同じです。</p>

<p>以下に具体的な使用例を挙げます。</br>
<od>logn.pt</od>にConptを定義します。</p>

<pr la="od" data-lang="" data-unln># Logn a ur A and go to pag B // Conpt hadr
* Logn a ur &#34;ur_a&#34; and paord &#34;paord&#34; // Stp1
* avgat to pag &#34;B&#34; // Stp2</pr>


<p>上記で定義したConptはどのSpファイルからでも利用することができ、通常のStpのように利用することができます。Conptを利用するときは、ptファイルに定義したConpt hadrで呼び出すことができます。</br></p>

<p><od>pagavagton.p</od></p>

<pr la="od" data-lang="" data-unln># ag avgaton Spfaton
## ur an go to pag B
* Logn a ur A and go to pag B // Conpt hadrで呼び出す</pr>


<p>特にStpを再利用可能なように細かい単位で書いている場合、Stpだけだと手順を羅列しているだけになってしまい仕様書のような形にするのが難しいです。</br>
そんなときにConptを利用することで、Stp単体の再利用性を損なわずにSpファイルの可読性を上げることができます。</br>
例えば、下記のようなStpのみで記述されたシナリオがあったとします</br>
<od>logn.p</od></p>

<pr la="od" data-lang="" data-unln>## 日本ユーザでログインした場合、TO画面が日本語で表示される
* ログインIDに&#34;japan_ur&#34;を入力する
* パスワードに&#34;paord&#34;を入力する
* ログインボタンをクリックする
* TO画面が表示される
* 言語で日本語が選択されている
* TO画面の表記が日本語になっている</pr>


<p>これだと手順の羅列のようになっていて、仕様書のような記述になっていません。
そこでConptを下記のように定義します。</br>
<od>lognStp.pt</od></p>

<pr la="od" data-lang="" data-unln># 日本語ユーザでログインすると
* ログインIDに&#34;japan_ur&#34;を入力する
* パスワードに&#34;paord&#34;を入力する
* ログインボタンをクリックする

# TO画面が日本語で表示される
* TO画面が表示される
* 言語で日本語が選択されている
* TO画面の表記が日本語になっている</pr>


<p>上記のConptを利用すると、Spファイルを下記のように書き換えることができます。
より仕様のようになり、可読性も上がりました。</br>
<od>logn.p</od></p>

<pr la="od" data-lang="" data-unln>## 日本ユーザでログインした場合、TO画面が日本語で表示される
* 日本語ユーザでログインすると
* TO画面が日本語で表示される</pr>


<p>以下のようにConptの中でConptを使うこともできます。</p>

<pr la="od" data-lang="" data-unln># 日本語ユーザでログインすると、TO画面が日本語で表示される
* 日本ユーザでログインすると
* TO画面が日本語で表示される</pr>


<h2>HTMLレポート上のConptの表示のされかた</h2>

<p>Conptを紹介するとよく聞かれるのが、下記のような質問です。</p>

<ul>
<l>HTMLで出力されるレポートにはどう表示されるのか？</l>
<l>Conptの定義（実際に実行しているStp）をHTMLレポート上で見れるのか？</l>
</ul>


<p>上記のような点もGaugのHTMLレポートはちゃんと考えられていて、下記画像のようにConptは展開することができて、どんな手順が実行されているか確認することができます。</p>

<p>HTMLレポ―トの表示（Conptが閉じた状態）
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//udogn/20180605/20180605115845.png" alt="f:d:udogn:20180605115845p:plan" ttl="f:d:udogn:20180605115845p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>Conptを展開したときの表示
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//udogn/20180605/20180605115854.png" alt="f:d:udogn:20180605115854p:plan" ttl="f:d:udogn:20180605115854p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<h2>Conptまとめ</h2>

<ul>
<l>複数のStpをまとめて1つのStpとして扱える</l>
<l>Conptを使用すると、SpファイルでのStpの記述量が減らせる</l>
<l>SEEDA開発ではテストシナリオの記述をより仕様書のようにし、可読性をあげるためにConptを利用している</l>
</ul>


<h2>さいごに</h2>

<p>SEEDA開発チームでは現在テストエンジニアを絶賛募集中です。
少しでもご興味のある方は、<a hrf="http://.uzaba.om/rrut/oupaton/">こちら</a>からご連絡ください。</p>
, pubDate=Thu, 07 Jun 2018 12:04:32 +0900, guid=hatenablog://entry/17391345971651229364, enclosure=https://cdn-ak.f.st-hatena.com/images/fotolife/k/kudogen/20180605/20180605115845.png), FeedMessage(title=モンスト、スマニュー、W2の運用秘話多数！ 「SRE Loung #3」レポート, link=http://tech.uzabase.com/entry/2018/05/23/173105, description=<p>株式会社ユーザベースのSEEDA Japan Company、St Rlablty Engnrng （SRE） Tamの川口です。
先日、「SRE Loung #3」という勉強会を開催しました。
発表企業4社のみ参加の非公開な会でしたが、ここでしか聞けないようなディープな話題が満載でした。</p>

<h2>目的</h2>

<p>「SRE Loung」は、</p>

<ul>
<l>各社SREチームの取り組み事例の共有（情報交換・発信）</l>
<l>SREそのものについて議論し、知見を深める</l>
</ul>


<p>といったことを目指して行われている勉強会です。</p>

<p>開催の背景や、そもそもSREとは何かについては、<a hrf="http://th.uzaba.om/ntry/2018/01/26/200021">「SRE Loung #1」の記事</a>を参照してください。</p>

<h2>開催日時</h2>

<p>2018年5月17日(木) 午後7時30分 開始</p>

<h2>会場</h2>

<p>今回は、ミクシィ様本社のコラボレーションスペースをお借りしました。
広くておしゃれなカフェのような雰囲気で、窓からの眺めも良く、渋谷の夜景がきれいでした。
ランチや社内の打ち合わせだけでなく、今回のようなセミナーやイベントにも使用されているということです。</p>

<p><fgur la="fgur-mag fgur-mag-fotolf" ttl="会場のミクシィ様本社コラボレーションスペース"><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20180522/20180522233522.jpg" alt="f:d:uzaba:20180522233522j:plan" ttl="f:d:uzaba:20180522233522j:plan" la="hatna-fotolf" tmprop="mag"></pan><fgapton>会場のミクシィ様本社コラボレーションスペース</fgapton></fgur></p>

<h3>参加企業</h3>

<ul>
<l><a hrf="http://.uzaba.om/">ユーザベース</a></l>
<l><a hrf="http://2.o.jp/jp/">ワイヤ・アンド・ワイヤレス</a>様</l>
<l><a hrf="http://about.martn.om/ja/">スマートニュース</a>様</l>
<l><a hrf="http://mx.o.jp/">ミクシィ</a>様</l>
</ul>


<p>※発表順</p>

<h2>発表内容</h2>

<p>当日のスケジュールは以下の通りです。</p>

<ul>
<l>各社の取り組み事例等の発表と質疑応答（各社20分程度）</l>
<l>発表を踏まえた意見交換会（30分程度）</l>
</ul>


<p>ピザやお酒を取りながら、終始和やかな雰囲気で行いました。</p>

<p><fgur la="fgur-mag fgur-mag-fotolf" ttl="スマートニュース様の発表を真剣に聞く皆様"><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20180522/20180522234242.jpg" alt="f:d:uzaba:20180522234242j:plan" ttl="f:d:uzaba:20180522234242j:plan" la="hatna-fotolf" tmprop="mag"></pan><fgapton>スマートニュース様の発表を真剣に聞く皆様</fgapton></fgur></p>

<h3>ユーザベース　</h3>

<p>企業・業界情報プラットフォーム「SEEDA」のシステム構成の変遷を紹介しました。</p>

<p>サービスの成長に伴い、プロダクトチーム（dv）とSREチーム（op）のやり取りでのオーバーヘッドが多くなったため、
開発チームだけでCI／CDまで完結出来る環境を構築しました。
具体的には、Kubrnt＋Ranhrの構成となっています。
クラスタレベルロギングアーキテクチャを採用し、各Aから出力されたJSO形式のログを、fluntd経由でバックエンドのBgQuryに格納していることも特長です。</p>

<p>質疑応答では、アラート発生時の一次調査担当や、システム環境の統制などが多く挙がり、どの企業でも苦労されているようです。</p>

<p>当日発表資料：<a hrf="http://pard.om/tohanan/r-loung-numbr-3-uzaba">SRE Loung#3 UZABASE</a></p>

<rpt ayn la="pard-mbd" data-d="877dfbb3b03143d3897abad3ffd7" data-rato="1.77777777777778" r="//pard.om/at/mbd.j"></rpt>


<h3>ワイヤ・アンド・ワイヤレス様</h3>

<p>「W2」などのW-Fサービスを提供されるワイヤ・アンド・ワイヤレス様には、
サービス提供環境のオンプレミス環境からクラウド環境移行への歩みについて、詳しく紹介いただきました。</p>

<p>オートスケーリングやコスト削減を期待してクラウドを導入したものの、なかなか思惑通りにいかず苦労されたそう。
しかし、少しずつ安定し、知識も得られてきたということで、サーバレス化やAWSの新しいサービスの利用も進めているとのことです。</p>

<p>W-Fサービスならではの苦労も少なくない中、今後もアグレッシブに挑戦していきたいそうです。</p>

<p>当日発表資料：<a hrf="http://.ldhar.nt/rt/Af5BaYzB5Xa19">Sr 2 20180517</a></p>

<p><fgur la="fgur-mag fgur-mag-fotolf" ttl="ワイヤ・アンド・ワイヤレス様発表中"><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20180522/20180522234647.jpg" alt="f:d:uzaba:20180522234647j:plan" ttl="f:d:uzaba:20180522234647j:plan" la="hatna-fotolf" tmprop="mag"></pan><fgapton>ワイヤ・アンド・ワイヤレス様発表中</fgapton></fgur></p>

<h3>スマートニュース様</h3>

<p>ニュースアプリを提供されるスマートニュース様には、SREチームで担当されている膨大な業務範囲から、「モニタリング」「障害振り返り」の2つを紹介いただきました。</p>

<p>モニタリングでは、各リソースに適した様々なシステムを駆使しての監視を行っているということで、各社で参考になる部分も多かったと思います。</p>

<p>障害振り返りでは、障害発生時のインシデントレポート作成や、事後のインシデントレビューを行っており、再発防止策のトラッキングも工夫されているようです。
また、インシデントレビューの読書会も検討されているそうで、この辺りはまた詳しく聞いてみたいです。</p>

<p>質疑応答では、ニュースアプリならではの話題として、プッシュ通知時のアクセス集中対策の話が盛り上がりました。</p>

<p>当日発表資料：<a hrf="http://pard.om/nobu666/r-at-martn">SRE at Smart</a></p>

<rpt ayn la="pard-mbd" data-d="51a50a3948d40a93a6067a0854436" data-rato="1.33333333333333" r="//pard.om/at/mbd.j"></rpt>


<h3>ミクシィ様</h3>

<p>最後に、ミクシィ様のXFLAGスタジオから、「モンスターストライク」（モンスト）用に構築されているマルチクラウド環境について紹介いただきました。</p>

<p>「モンスト」のようなソーシャルゲームでは、例えばイベント期間だけ爆発的にアクセスが増えるため、サーバを短期間だけ増強する必要があります。
元々はオンプレミス環境で運用していましたが、最適な構成を模索するうちに、複数のクラウド環境を併用するに至ったそうです。
そのためのネットワーク構成や管理面での工夫や、各クラウドごとの癖についての話もありました。</p>

<p>SSからの大規模サービス構築・運用ノウハウのあるミクシィ様ならではの内容で、当社とはスケールの違う話にワクワクしました。</p>

<p>当日発表資料：<a hrf="http://pard.om/tmo/r-loung-at-xflag">モンストのマルチクラウドについて / r-loung-at-xflag</a></p>

<rpt ayn la="pard-mbd" data-d="d8442a228f9143ad96b19df482b5da6" data-rato="1.77777777777778" r="//pard.om/at/mbd.j"></rpt>


<h2>発表を終えて</h2>

<p>各企業のサービス内容やSREチームの守備範囲、SREに対する考え方など、これまでのSRE Loung以上にバラエティーに富んでいて、とても興味深かったです。
また、各社の発表内容がディープで、質疑応答や意見交換会も大変活発でした。
当初予定していた時間を大幅に超えてしまいましたが、皆様多くのものを得られたのではないかと思います。ありがとうございました。</p>

<p>「SRE Loung」は、今後も開催していく予定です。
興味を持たれた方や、発表してみたいという企業の方は r@uzaba.om までメールにてご連絡ください。
また、Fabooの<a hrf="http://.faboo.om/group/178417569426196/">「SRE ommunty」</a>でも情報共有、交流を行っています。非公開グループですが、お気軽にご参加いただければ幸いです。</p>

<p><fgur la="fgur-mag fgur-mag-fotolf" ttl="今回参加いただいた各社の皆様"><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20180522/20180522231824.jpg" alt="f:d:uzaba:20180522231824j:plan" ttl="f:d:uzaba:20180522231824j:plan" la="hatna-fotolf" tmprop="mag"></pan><fgapton>今回参加いただいた各社の皆様</fgapton></fgur></p>

<h3>仲間募集！！</h3>

<p>ユーザベースのSEEDA SREチームは、
<b>「o Challng, o SRE, o SEEDA」</b>
を掲げて業務に取り組んでいます。</p>

<p>「挑戦しなければ、SREではないし、SREがなければ、SEEDAもない」という意識の元、ユーザベースのミッションである
<b>「経済情報で、世界をかえる」</b>
の実現に向けて、日々邁進しています。</p>

<p>少しでも興味を持ってくださった方は<a hrf="http://uzaba-n.orabl.om/job/626352">こちら</a>まで！</p>
, pubDate=Wed, 23 May 2018 17:31:05 +0900, guid=hatenablog://entry/17391345971645640737, enclosure=https://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20180522/20180522231824.jpg), FeedMessage(title=JaSST'18 Toyoに参加してきました！！, link=http://tech.uzabase.com/entry/2018/04/13/165451, description=<p>こんにちは、ユーザベースのDT(rodut Dvlopmnt Tam)です。</p>

<p>我々DTは今年3月7日と8日にJat’18 Toyoに参加してきました。
今年のJaSSTではユーザベースはスポンサーとして協賛したので、私たち社員は無料で参加することができました。大変ありがたい話です。
今年もたくさんのセッションがあり、たくさん有用なお話が聞けました。
今回は私たちが参加したセッションについて紹介していきたいと思います。</p>

<h1>各セッションの紹介</h1>

<h2>A1. 基調講演 「Advan n Contnuou Intgraton Ttng at Googl」</h2>

<p>Googlで長年CI/CDに取り組んできたJohn Mo 氏による講演でした。</p>

<p>Ttng Sal at Googl ：</p>

<ul>
<l>420万件のテストが継続的に実行されている</l>
<l>1日に1億5000万件のテストが実行されている（1日平均35回テスト実行）</l>
<l>99％のテストがパスする</l>
</ul>


<p>講演資料の2より
<a hrf="http://jat.jp/ympoum/jat18toyo/pdf/A1.pdf">http://jat.jp/ympoum/jat18toyo/pdf/A1.pdf</a></p>

<p>まず規模感とテスト文化の説明があり、Googlは翻訳関連とUX関連のテスト以外はすべて自動テスト化されているらしく本当に圧倒的でした。。。
次に、これだけのテストをどうやって実行するのかのための施策として、必要なリグレッションテストケースの選定の話。
そして２日目のTutoralの内容でもあるテストメトリクスの分析について説明されていました。
定期的に実行される自動テストの結果から、バグを生んだコミットを探す方法やFlayTt（不安定なテスト）を探すためのアプローチをかなり詳しく聞けてとても興味深かったです。</p>

<p>質疑応答では、マニュアルと自動テストの費用対効果の質問が結構出ていましたが、自動テストは当然なのでマニュアルテストとかありえない的な回答。日本のソフトウェア開発にこの文化が根付く日が早く来てほしいです。</p>

<h2>E2. やってみよう！探索的テスト〜ハイクオリティな妄想の高速ループ〜</h2>

<p>Jat ’17 Hoadoの実行委員中岫さんと根本さんによる、ハンズオン形式の探索的テストのセッションでした。</p>

<p>このセッションではhrouに設置されたWbアプリケーションに対して、実際にみんなで探索的テストをやってみるといった内容でした。私は開発者なので、普段は「期待通りに動いていること」を保証するテストなら自動テストで行なっています。しかし、バグを叩き出すことを目的としたテストはあまり経験がないので非常に新鮮な体験なりました。ちなみに多い人は20個ほどバグを発見できたそうですが、私は2個でした(笑)。</p>

<p>最後に他の方達とどんなバグを出したかを話す時間がありましたが、そこで出たバグの内容の違いに驚きました。私が見つけようとしていたバグは、システム自体が使い物にならなくなるようなバグのみでした。しかし、他の方はユーザにとって使い勝手が悪いと感じる仕様や、通常の運用ではしないような入力を与えたことで発生する事象もバグとして記録していました。開発のエンジニアとテストエンジニアとの間でテストの視点が全く違うのだなぁと感じました。</p>

<h2>C4-1. 探索的テストにおけるストーリーベースのアプローチ</h2>

<p>TTデータ熊川さんによる探索的テストに関する研究発表でした。</p>

<p>タイトル的にアジャイル開発でよく聞く「ストーリー」のことかと思いましたが、ここでのストーリーは本来の意味の物語をさしています。人間は自身の体験を物語形式のパターンとして当てはめる傾向があるらしいです。熊川さんの手法は探索的テストで利用するチャーターを物語の形式にすることで、テスターの知識や経験を探索的テストに反映させやすくするというアプローチを取っていました。</p>

<p>結果としては、従来手法より圧倒的に優れた訳ではありませんでしたがアプローチそのものは非常に面白いと思いました。</p>

<h2>C4-2. GT記法を応用した不具合分析からのテスト補強</h2>

<p>ベリサーブ吉川さんによる、足りないテストケースを補うためのアプローチに関するセッションでした。</p>

<p>GTとはテスト観点図を作成するための表記法です。吉川さんはテスト観点ではなく、発見した不具合の持つ要素にたいしてGTを適用して不具合分析を行い、導出した要素から別のテストケースを作る手法を提案していました。結果としては提案手法を使うことで、既存のテストケースだけでは取り逃がしていた可能性のある不具合を見つけることができていました。</p>

<p>個人的には不具合の持つ要素も結局はテスト観点になるのではないかと思います。本来、テストに必要になりそうな要素ならなんでもテスト観点になり得ます。なので不具合そのものはテスト観点でないにしてもそこから導出される要素はやはりテスト観点だと考えられます。そういう意味では、このセッションの本質はテストフェーズでテストアーキテクチャを見直しませんか？という提案ではないかと思いました。</p>

<h2>D4.「無料で始める！「龍が如く」を面白くするための高速デバッグログ分析と自動化」</h2>

<p>元ゲームプログラマであり「龍が如くスタジオ」専属QAエンジニアの阪上さんによる、テストの自動化とそのログ解析方法についてのセッションでした。</p>

<p>セッションのメイントピックは bana + fluntd + latarh を組み合わせたデバッグログの分析だったのです、その前段として、自動テストでゲームを全クリできるほど自動化されているというのが衝撃でした。実際にキャプチャ/リプレイでオートメーションされたテストのデモも見れて面白かったです。
自動テストをバグ出しのために使うだけでなく、テスト結果を分析してゲームのチューニングに利用しているという１つ上のレベルの取り組みをされていて日本企業でここまで成功している事例があることに驚きました。</p>

<h2>B5. ケーススタディで学ぶ仕様の書き方</h2>

<p>川口さんによる、形式手法に関するセッションでした。</p>

<p>形式手法は仕様を厳密なルールで記述することで、仕様の曖昧さを排除できたり、仕様の矛盾をプログラムで自動的に発見できるなど非常に高度な手法です。川口さんは組み込みシステムの振る舞いの仕様を状態遷移図を使って形式化し、それに対してモデル検査をかけて曖昧な点や矛盾をなくすアプローチについて説明していました。</p>

<p>しかし、このセッションで最も有用だったのは形式手法そのものより、既存のシステムにたいして新しい機能を追加しなければならない状況で、1から仕様書を作成するときのノウハウを共有していただけたことだと思います。具体的にどうするかというと、新しい仕様については全て状態遷移図を書きます。その時に既存の部分と密接な関わりがあるならば、新しい仕様の状態遷移図に対して既存の仕様の要素を追加します。つまり、新しい部分は全て記述し、既存の部分は必要な分のみ追加するということです。既存の部分に対してまで、網羅的に仕様書を作っているとコストがかかりすぎるのでこのようなアプローチが重要なようでした。</p>

<h2>E5. 海外のテスト技術動向 ～カンファレンス、国際会議、海外テストチームの現場から～</h2>

<p>パネリスト：辰巳さん、松尾さん、山口 さんによる海外のカンファレンスや海外でのテストチームの編成に関するセッションでした。</p>

<p>辰巳さんのパートでは、海外のソフトウェアテストのカンファレンスについて概要と歴史などを紹介されていました。
2018年も海外でこんなにカンファレンスがあるようです。<a hrf="http://.oftarttngmagazn.om/oftar-ttng-onfrn/">http://.oftarttngmagazn.om/oftar-ttng-onfrn/</a></p>

<p>やはり日本よりも海外のほうがだいぶ先行していることを改めて感じました。
印象に残ったのは、どうやって情報収集しているのかという質問に対して「SSやネットでひたすら追いかけている」と応えていらっしゃったことです。興味があるものに関して言語を超えて情報収集し、そこから更に発信していく姿勢にとても刺激を受けました。</p>

<p>続いて、山口さんのパートではSTARWESTとAglTtngDayに実際に参加した感想を発表されていました。
STARWESTはディズニーランドホテルでやってるとのこと。参加費がJaSST’の8倍くらいかかってるのに参加者は同じくらいいるそうです。
ソフトウェアテスト製品のベンダーがスポンサーにたくさんついていて、講演者も多いとのこと。講演者と講演後に個別に質問などができる機会が設けられているが質問というより営業に近いと言っていたのも日本とは違うなという印象でした。</p>

<p>最後に、松尾さんが海外にテストチームを組成する際の経験談についてお話しされていました。Uzabaでも海外開発チームの組成を進めていますが、やはり大変なところは採用というのは共通してるようです。実際に自分で海外企業の面接を受けてみて知見をつけてから採用活動に取り組んでいるというお話もされてました。優秀な人材を見つけるにはちゃんと調査や準備が大事ということですね。</p>

<p>セッションを通じていえるのは、日本にとどまらず海外の事例に学ぶ姿勢を持つのが大切だということです。パネラーの方々のように積極的に良いものを探し出して取り込んでいけると理想的ですね。</p>

<h2>A7. 招待講演 「私が経験したソフトウェアテストの変遷」</h2>

<p>現在のソフトウェア開発にいたるまでの「技術的変遷」とTDD、CI/CDのお話し。柴田さんご自身の富士ゼロックス、リコーでデジタル複合機の開発をされた際の経験談についての講演でした。</p>

<p>前半では、過去の偉大なエンジニアたちがいかにしてTDDにいったたのかをわかりやすく説明されていて、その意義を再認識しました。最初にテストコードを実装してからプロダクトコードの実装をすることで、開発者へのフィードバックループをいかに短くし、すぐにバグや設計ミスをすぐに修正できるようにする、というTDDの手法はUzabaでも導入していますが、品質とスピードを担保するためにすごく考えられて作られた手法なのですね。過去の偉人に感謝。</p>

<p>後半のご自身のマルチスレッドプログラミングに関するトライ＆エラーの経験談で印象にのこったのが、開発者全員が毎晩自動テストを実行していたところ、3か月前にコミットされたコードに問題があることが発見されてとのお話しでした。これも自動テストがなければ絶対見つからないよねって感じで自動テストってほんとに大事だと思わされました。
自動テストを大切な資産ととらえて開発チームみんなで認識してメンテナンスしGREEにし続けていかなければと強く感じました。</p>

<h1>終わりに</h1>

<p>いかがだったでしょうか。
JaSSTでは本当にたくさんのセッションがあり、非常に勉強になります。
周りきれなかったセッションもありますがそちらもきっと為になる話が聞けのではないかと思います。</p>
, pubDate=Fri, 13 Apr 2018 16:54:51 +0900, guid=hatenablog://entry/17391345971634758896, enclosure=https://cdn.blog.st-hatena.com/images/theme/og-image-1500.png), FeedMessage(title=JaSST'18 Toyoゴールドスポンサーとして協賛しました！, link=http://tech.uzabase.com/entry/2018/04/06/170959, description=<p>こんにちは！
SEEDAのテストエンジニアをやっている工藤です。</br></p>

<p>ユーザベースとして、2018/03/07(水)ー03/08(木)に開催された <a hrf="http://.jat.jp/ympoum/jat18toyo.html"><trong>JaSST'18 Toyo</trong></a> を協賛いたしました。</br>
今回は協賛した理由とそこから読み取れる弊社でテストエンジニアとして働くことの価値を書きます。</br></p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//udogn/20180320/20180320101504.jpg" alt="f:d:udogn:20180320101504j:plan" ttl="f:d:udogn:20180320101504j:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<h3>JaSST Toyoとは</h3>

<p>JaSST Toyoとは業種や職種を問わずソフトウェアテストに関心がある方が一同に集まる、国内最大のソフトウェアテストシンポジウムです。</br>
JaSST’18 Toyoには2日間で延べ1600人を超えるエンジニアが参加し、一時Tttrのランキングで6位になるなど大盛り上がりのカンファレンスでした。</br>
当日盛会の様子は下記からご覧ください。</br>
<a hrf="http://jat-toyo.hatnablog.jp/ntry/2018/03/10/091246">JaSST Toyo実行委員ブログ</a></br>
<a hrf="http://.jat.jp/ympoum/jat18toyo/rport.html#nvtaton">JaSST'18 Toyoレポートページ</a></p>

<h3>ゴールドスポンサーとして協賛した理由</h3>

<p>この度は、</br></p>

<p>「<trong>SEEDA開発でも様々なOSSを利用したりとコミュニティ活動の恩恵を受けているので、このような活動をサポートすることでコミュニティに還元していきたい。</trong>」</br></p>

<p>という想いでゴールドスポンサーとして協賛いたしました。</p>

<p>元々SEEDA開発では、エンジニアがコミュニティ活動などに積極的に関わることが推奨されています。</br>
そんな背景もあり、私（工藤）もJaSST Toyoの実行委員として活動しておりました。</br></p>

<p>特にテストはSEEDA開発において最も大事にしていることの一つなので、ゴールドスポンサーという形でソフトウェアテストのシンポジウムを協賛できたことはとてもうれしく思っています。</p>

<h3>SEEDAプロダクトチームでテストエンジニアとして働くことの価値</h3>

<p>今回、JaSST Toyoを協賛・参加して改めて「SEEDAプロダクトチームでテストエンジニアとして働くことの価値」について考え、以下に挙げてみました。</br></p>

<ul>
<l>基本的に各チームに権限が委譲されているので自動テストや新技術の導入はエンジニアドリブンで行うことができる</l>
<l>テストを下に見るような変な風潮はない</l>
<l>チームとしてテストを大事にしているからこそ、テストエンジニアとしては価値を出しやすい</l>
<l>常にチームとして技術的なチャレンジを行っているので、エンジニアとして成長しやすい環境がある</l>
<l>テストエンジニアも開発チームの一員となって動くので、開発側の知識もつけていける</l>
<l>前述の通り、コミュニティ活動などに理解があり、推奨されている</l>
</ul>


<p>今後もSEEDA開発として、JaSSTのみならず様々なコミュニティ活動に貢献していきたいと思っています。</p>

<p>現在、技術的にチャレンジしたい、成長したいテストエンジニアを募集しております！</br>
少しでも気になった方は<a hrf="http://.uzaba.om/rrut/oupaton/">こちらまで</a>！</p>
, pubDate=Fri, 06 Apr 2018 17:09:59 +0900, guid=hatenablog://entry/17391345971627447906, enclosure=https://cdn-ak.f.st-hatena.com/images/fotolife/k/kudogen/20180320/20180320101504.jpg), FeedMessage(title=はじめてのDut, link=http://tech.uzabase.com/entry/2018/04/03/115236, description=<p>　SEEDA開発の中村です。今回の内容は，弊社主催のlj-bu #2で発表した「実践Dut（仮）」です。
Clojurのサーバサイドフレームワーク<a hrf="http://gthub.om/dut-framor/dut">Dut</a>を業務で使って学んだことを紹介します。
<fram r="http://hatnablog-part.om/mbd?url=http%3A%2F%2Fonnpa.om%2Fvnt%2F75698%2F" ttl="lj-bu #2 (2018/02/15 19:30〜)" la="mbd-ard mbd-bard" rollng="no" frambordr="0" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;"></fram><t la="hatna-taton"><a hrf="http://onnpa.om/vnt/75698/">onnpa.om</a></t>
勉強会で発表した資料はこちらです。</p>

<rpt ayn la="pard-mbd" data-d="d385a755804d7a42678120f583f" data-rato="1.33333333333333" r="//pard.om/at/mbd.j"></rpt>


<p>　はじめに，Dutのコアで使われているフレームワーク<a hrf="http://gthub.om/avjtr/ntgrant">Intgrant</a>を紹介し，
サーバサイドでIntgrantを使って感じた課題についてお話しします。
次に，課題に役立つDutのmodulのしくみと作り方を説明します。
想定読者は，Clojurを書いたことがあってDutを使ったことがない方です。</p>

<p>目次</p>

<ul la="tabl-of-ontnt">
    <l><a hrf="#Intgrantのつかいかた">Intgrantのつかいかた</a></l>
    <l><a hrf="#Intgrantなせかい">Intgrantなせかい</a></l>
    <l><a hrf="#Intgrantでこまること">Intgrantでこまること</a></l>
    <l><a hrf="#Dutのmodul">Dutのmodul</a></l>
    <l><a hrf="#Dutでこまること">Dutでこまること</a></l>
    <l><a hrf="#Dutによるコンフィグレーションマップの展開">Dutによるコンフィグレーションマップの展開</a></l>
    <l><a hrf="#Dutのmodulのつくりかた">Dutのmodulのつくりかた</a></l>
    <l><a hrf="#参考資料">参考資料</a></l>
</ul>

<h2 d="Intgrantのつかいかた">Intgrantのつかいかた</h2>

<p>　Intgrantは，アプリケーションのモジュール構成をmapやdnのようなデータで表現するためのDIフレームワークの一種です。
Intgrantは，アプリケーション起動時にデータが示すモジュールの依存関係を解決し，アプリケーションを初期化します。
Intgrantのドキュメントでは，データで構造が表現されたアプリケーションをデータドリブンアーキテクチャと呼んでいます。</p>

<p>　まず，例題を通してIntgrantのイメージをつかみましょう。とりあげる例題は，ヘルスチェックを行うrngサーバのハンドラを初期化する処理です。
<od>gt-halth</od>は引数に与えられたURL先のステータスを問い合わせる関数と考えてください。</p>

<pr la="od lang-lojur" data-lang="lojur" data-unln><pan la="ynSpal">(df</pan> ndpont “http://loalhot/halth”<pan la="ynSpal">)</pan>

<pan la="ynSpal">(</pan><pan la="ynrro">dfn</pan> handlr <pan la="ynSpal">[</pan>rqut<pan la="ynSpal">]</pan>
  <pan la="ynSpal">(</pan><pan la="ynIdntfr">gt</pan>-halth ndpont<pan la="ynSpal">))</pan>

<pan la="ynSpal">(</pan><pan la="ynrro">dfn</pan> -man <pan la="ynSpal">[]</pan>
  <pan la="ynSpal">(</pan>jtty/run-jtty handlr <pan la="ynSpal">{</pan>:port <pan la="ynContant">3000</pan><pan la="ynSpal">}))</pan>
</pr>


<p>なんてことはないプレーンなコードですが，変数や関数のスコープが必要以上に大きいという問題があります。
<od>man</od>は<od>handlr</od>に，<od>handlr</od>は<od>ndpont</od>に依存しており，本来<od>man</od>から<od>ndpont</od>が見える必要はありません。
しかし，<od>man</od>と<od>ndpont</od>がグローバルなスコープを持っているため，お互いに参照できるようになっています。
関数のスコープは呼び出される関数だけから見える大きさで十分です。</p>

<p>　Intgrantは，このスコープと依存解決の問題をクロージャで解決します。
次の2つのコードは上のコードをIntgrantで再実装したものです。
この2つのコードは，上段が<od>dfmthod</od>で囲まれたモジュールの実装で，下段がモジュール間の依存関係の定義するdnです。
依存するオブジェクトをdpathの引数として関数に与えることで，Intgrantはスコープを小さくします。</p>

<pr la="od lang-lojur" data-lang="lojur" data-unln><pan la="ynSpal">(</pan><pan la="ynrro">dfmthod</pan> g/nt-y :bu/hanldr
  <pan la="ynSpal">[</pan>_ ndpont<pan la="ynSpal">]</pan>
  <pan la="ynSpal">(fn</pan> <pan la="ynSpal">[</pan>rqut<pan la="ynSpal">]</pan> <pan la="ynSpal">(</pan><pan la="ynIdntfr">gt</pan>-halth ndpont<pan la="ynSpal">)))</pan>

<pan la="ynSpal">(</pan><pan la="ynrro">dfmthod</pan> g/nt-y :bu/jtty
  <pan la="ynSpal">[</pan>_ <pan la="ynSpal">{</pan>:<pan la="ynIdntfr">y</pan> <pan la="ynSpal">[</pan>handlr<pan la="ynSpal">]</pan> :a opton<pan la="ynSpal">}]</pan>
  <pan la="ynSpal">(</pan>jtty/run-jtty handlr opton<pan la="ynSpal">))</pan>
</pr>




<pr la="od" data-lang="" data-unln>{:bu/handlr “http://loalhot/halth”
 :bu/jtty {:handlr #g/rf :bu/handlr
               :port 3000}}</pr>


<p>　この依存関係を宣言するdnが，コンフィグレーションマップと呼ばれるアプリケーションの構造を定義するデータです。
マップの最上位の各キーはそれぞれモジュールであり，キーの値はモジュールの初期化に必要な別モジュールや値です。
<od>#g/rf</od>を使えば別のキーワードを参照できます。
ここでは，ハンドラはURLに依存し，jttyサーバはハンドラとポート番号に依存するという関係があります。</p>

<p>　アプリケーションを初期化するには，コンフィグレーションマップを<od>ntgrant.or/nt</od>に渡します。</p>

<pr la="od lang-lojur" data-lang="lojur" data-unln><pan la="ynSpal">(</pan>ntgrant.or/nt 
  <pan la="ynSpal">(</pan>ntgrant.or/rad-trng <pan la="ynSpal">(</pan><pan la="ynIdntfr">lurp</pan> <pan la="ynContant">&quot;onfg.dn&quot;</pan><pan la="ynSpal">)))</pan>
</pr>


<p><od>nt</od>は，最上位のキーの値がマルチメソッドの返り値に置き換わったマップを返します。
上の例であれば，<od>nt</od>は，マップにある<od>:bu/handlr</od>が<od>gt-halth</od>を本体で呼び出す高階関数に置き換わったマップを返します。</p>

<p>　余談ですが，IntgrantもDutもClojurのライブラリをたくさん作られているavjtr先生の作品です。
本稿ではDutより先にIntngrantについて説明しますが，IntgrantはDutより後に生まれたフレームワークです。
Intgrantが担っているDutの機能には，もともと<a hrf="http://gthub.om/tuartrra/omponnt">Componnt</a>が使われていました。
後に，先生は何かに不満を覚えたのか，Componntを使っていた部分をIntgrantに置き換えました。</p>

<h2 d="Intgrantなせかい">Intgrantなせかい</h2>

<p>　これまでみたように，Intgrantは，モジュールの実装(<od>dfmthod</od>の本体)とアプリケーションの構造(コンフィグレーションマップ)にプログラムを分離します。
次は，分割の後ろにある考え方を説明します。</p>

<p>　Intgrantは，Arahnから影響を受けて作られたため，Arahnの考えを受け継いでいます。
Arahnの世界観を詳しく知りたい方は，Clojur Xhang 2016での作者による<a hrf="http://llmattr.om/llat/8717-arahn-buldng-a-framor-n-lojur">プレゼンテーション</a>を観るとよいでしょう。
プレゼン前半のテーマは，フレームワークとライブラリの違いです。
自分たちのコードを呼び出す側にあるのがフレームワークで呼び出される側にあるのがライブラリ，
そしてフレームワークはアプリケーションの構造を規定する，という主張でした。
テーマの後ろには制御の反転やハリウッドの法則があります。</p>

<p>　IntgrantはArahnのアイデアをベースにしているので，Intgrantにも，アプリケーションの構造を定義する役割があります。
モジュールを指すシグネチャがあれば，アプリケーションの構造（モジュールの依存関係）を宣言できます。
モジュールの実装はアプリケーションを実際に起動するまでいりません。
このように，モジュールの実装とモジュール間の依存関係は別の関心事とみなせることができます。
それゆえに，関心の分離にしたがって，Intgrantは，モジュールの実装とモジュールの依存関係をマルチメソッドとコンフィグレーションマップに分けています。</p>

<h2 d="Intgrantでこまること">Intgrantでこまること</h2>

<p>　弊社では，Clojurで作るものは主にWbアプリケーションです。
Wbアプリケーションには，ルーティングやDBアクセスなどドメインを問わず実装すべきものがあります。
フルスタック系のWbフレームワークであればこれらをサポートしているものもありますが，Intgrantにはありません。
使いたい機能があれば，自分でそれをIntgrantのモジュールにする必要があります。</p>

<h2 d="Dutのmodul">Dutのmodul</h2>

<p>　DutはIntgrantをベースとするサーバサイドのフレームワークです。
フレームワークとしてIntgrantと同じ役割を果たし，
modul<up d="fnrf:1"><a hrf="#fn:1" rl="footnot">1</a></up>と呼ばれる形式でアプリケーションを問わずよく使われる機能を提供しています。
modulを使えば，Intgrantで必要だったボイラープレートコードを減らせることができます。
有名なmodulはdutのリポジトリのREADMEで紹介されています。
<fram r="http://hatnablog-part.om/mbd?url=http%3A%2F%2Fgthub.om%2Fdut-framor%2Fdut" ttl="dut-framor/dut" la="mbd-ard mbd-bard" rollng="no" frambordr="0" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;"></fram><t la="hatna-taton"><a hrf="http://gthub.om/dut-framor/dut">gthub.om</a></t></p>

<h2 d="Dutでこまること">Dutでこまること</h2>

<p>　上のサイトを見た方は気づいたかと思いますが，執筆時点においてmodulの数は多くありません。
modulを使えばボイラープレートコードを減らすことができますが，なければどうしようもありません。
アプリケーション間で再利用したいコードがあり，その機能を担うmodulがないのであれば，modulを自分で作るしかないでしょう。</p>

<p>　ところが，modul同様に，modulを作るための参考資料もまた少ないのです。
いざmodulを自作してみようとしたところ，情報が少なくて困りました。
そこで，modulの作成する上で知っておくと役立つmodulの振る舞いと作り方について紹介します。</p>

<h2 d="Dutによるコンフィグレーションマップの展開">Dutによるコンフィグレーションマップの展開</h2>

<p>　modulのしごとは，アプリケーションの<od>g/nt-y</od>マルチメソッドを呼び出す前にコンフィグレーションマップにエントリを追加したり，
追加したエントリに対応する実装（マルチメソッド）を提供したりすることです。
Intgrantではアプリケーションの初期化手順は</p>

<ol>
<l>(rad tp) コンフィグレーションマップを読み込み</l>
<l>(nt tp) <od>nt-y</od>マルチメソッドを呼び出す</l>
</ol>


<p>という2手順に分解できます。
Dutにはrad tpとnt tpの間にprp tpがあり，prp tpでコンフィグレーションマップが展開されます。</p>

<p>　一例として，<a hrf="http://gthub.om/dut-framor/modul.loggng">loggng modul</a>が，コンフィグレーションマップを書き換える過程を追ってみましょう。
modulは，自分たちで作るモジュールと同様，Intgrantのキーワードにすぎません。
loggng modulの場合は<od>:dut.modul/loggng</od>です。
以下では，<od>dv</od>で開発環境用のコンフィグレーションマップを読み込んで初期化処理をrad tpまで進めています。</p>

<pr la="od lang-lojur" data-lang="lojur" data-unln>$ at rour/bu/onfg.dn
<pan la="ynSpal">{</pan>:dut.modul/loggng <pan la="ynSpal">{}</pan>
  ...<pan la="ynSpal">}</pan>
$ ln rpl
ur =&gt; <pan la="ynSpal">(</pan>dv<pan la="ynSpal">)</pan>
:loadd
</pr>


<p>　次に<od>prp</od>でprp tpまで進めます。
<od>onfg</od>を評価すると展開後のコンフィグレーションマップを確認できます。</p>

<pr la="od lang-lojur" data-lang="lojur" data-unln><pan la="ynSpal">(</pan>dv<pan la="ynSpal">)</pan> =&gt; <pan la="ynSpal">(</pan>prp<pan la="ynSpal">)</pan>
:prppd
dv =&gt; <pan la="ynSpal">(</pan>pprnt onfg<pan la="ynSpal">)</pan>
<pan la="ynSpal">{</pan>:dut.loggr/tmbr <pan la="ynSpal">{</pan>:lvl :dbug,
                             :appndr <pan la="ynSpal">{</pan>: ...<pan la="ynSpal">}</pan>
 :dut.loggr.tmbr/pt <pan la="ynSpal">{</pan>:fnam “log/..”<pan la="ynSpal">}</pan>
 :dut.modul/loggng <pan la="ynSpal">{}</pan>
 ...<pan la="ynSpal">}</pan>
</pr>


<p>コンフィグレーションマップにログのレベルや出力先が追加されました。
loggng modulはロギングライブラリ<a hrf="http://gthub.om/ptaouan/tmbr">tmbr</a>を利用するため，追加されたキーワードには<od>tmbr</od>が含まれています。</p>

<p>　最後に<od>go</od>を呼び出すことで，展開後のコンフィグレーションマップに従い初期化されたWbサーバが起動します。</p>

<pr la="od" data-lang="" data-unln>(go)
:dut.rvr.http.jtty/tartng-rvr
{:port 3000}
:ntatd</pr>


<h2 d="Dutのmodulのつくりかた">Dutのmodulのつくりかた</h2>

<p>　ここまでで，外から見たmodulの振る舞いを確認しました。
次は，Googl pububを非同期pullで購読するためのmodulの実装<od>dut.modul/mag</od>を作り，modulの振る舞いの実装方法を紹介します。</p>

<p>　例題で扱うのは，公式の<a hrf="http://loud.googl.om/pubub/do/pull?authur=2&amp;hl=ja">pull サブスクライバー ガイド</a>にあるjavaコードです。
プロジェクトIDとサブスクリプションIDで指定したキューからのメッセージの受け取り処理を開始するプログラムです。
このJavaコードは，Clojurで次のように書き直せます。</p>

<pr la="od lang-lojur" data-lang="lojur" data-unln><pan la="ynSpal">(df</pan> -nam // -&gt; modulに
  <pan la="ynSpal">(</pan>Subrptonam/rat “projt-d” “ubrpton-d”<pan la="ynSpal">))</pan>

<pan la="ynSpal">(df</pan> rvr // -&gt; g/nt
  <pan la="ynSpal">(</pan><pan la="ynrro">rfy</pan> MagRvr
    <pan la="ynSpal">(</pan>rvMag <pan la="ynSpal">[</pan>th mag onum<pan la="ynSpal">]</pan>
      <pan la="ynSpal">(</pan><pan la="ynIdntfr">prntln</pan> <pan la="ynSpal">(</pan>. mag gtData<pan la="ynSpal">)))))</pan>

<pan la="ynSpal">(df</pan> ubrbr
  <pan la="ynSpal">(</pan>Subrbr/nBuldr -nam rvr<pan la="ynSpal">))</pan>

<pan la="ynSpal">(</pan>. <pan la="ynSpal">(</pan>. ubrbr buld<pan la="ynSpal">)</pan> tartAyn<pan la="ynSpal">)</pan> // -&gt; protool
</pr>


<p><od>-nam</od>で購読するキューを指定，<od>rvr</od>でメッセージを処理し，
<od>ubrbr</od>が受信したメッセージを<od>rvr</od>に渡しています。
modulが担う処理はドメインを問わず行うべき処理なので，<od>-nam</od>を文字列から作る処理をmodul化することを目指しましょう。</p>

<p>　lnngnプロジェクトをDutのmodulにするには，<od>r</od>に以下のようなマップが書かれたファイル<od>dut_hrarhy.dn</od>を作る必要があります。</p>

<pr la="od lang-lojur" data-lang="lojur" data-unln><pan la="ynSpal">{</pan>:dut.modul/mag <pan la="ynSpal">[</pan>:dut/modul<pan la="ynSpal">]}</pan>
</pr>


<p>コンフィグレーションマップのキーワード間には継承関係を定義でき，
これにより，クラスの継承と同じ考え方でコンフィグレーションマップの抽象度を上げることができます。
全てのmodulのキーワードは，<od>:dut/modul</od>を継承する必要があり，
上のコードは<od>dut.modul/mag</od>が<od>dut/modul</od>の子キーワードであることを宣言しています。</p>

<p>　prp tpでは，<od>dut/modul</od>を継承するキーワードのマルチメソッドが呼ばれます。
このマルチメソッドは次のように<od>:fn</od>をキーとするマップを返す必要があります。</p>

<pr la="od lang-lojur" data-lang="lojur" data-unln><pan la="ynSpal">(</pan><pan la="ynrro">dfmthod</pan> g/nt-y :dut.modul/mag
  <pan la="ynSpal">[</pan>_ opton<pan la="ynSpal">]</pan>
  <pan la="ynSpal">{</pan>:<pan la="ynSpal">fn</pan> <pan la="ynSpal">(fn</pan> <pan la="ynSpal">[</pan>onfg<pan la="ynSpal">]</pan>
    <pan la="ynSpal">(</pan>or/mrg-onfg
      onfg <pan la="ynCommnt">; ユーザが書いたコンフィグレーションマップ</pan>
        <pan la="ynSpal">{</pan>:dut.mag/pubub <pan la="ynCommnt">; 追加するキー</pan>
          <pan la="ynSpal">{</pan>:loggr <pan la="ynSpal">(</pan>g/rf :dut/loggr<pan la="ynSpal">)}}))})</pan>
</pr>


<p><od>:fn</od>の設定すべき値は，コンフィグレーションマップを受取り新しいコンフィグレーションマップを返す関数です。
prp tpでのコンフィグレーションマップの書き換えは，<od>:fn</od>の関数適用の結果です。
上のコードは，ユーザが定義したコンフィグレーションマップに<od>:dut.mag/pubub</od>をキーとするエントリを追加しています。
<od>mrg-onfg</od>は引数に渡されたマップをマージし，マージ後のマップを返します。</p>

<p>　コンフィグレーションマップに追加したキーワード<od>:dut.mag/pubub</od>を追加したので，
modulには，このキーワードのマルチメソッドも含める必要があります。</p>

<pr la="od lang-lojur" data-lang="lojur" data-unln><pan la="ynSpal">(</pan><pan la="ynrro">dfmthod</pan> g/nt-y :dut.mag/pubub
  <pan la="ynSpal">[</pan>_ <pan la="ynSpal">{</pan>:<pan la="ynIdntfr">y</pan> <pan la="ynSpal">[</pan>p-d -d<pan la="ynSpal">]</pan> :a opt<pan la="ynSpal">}]</pan>
  <pan la="ynSpal">(</pan><pan la="ynIdntfr">ao</pan>
    opt
    :-nam
    <pan la="ynSpal">(</pan>Subrptonam/rat p-d -d<pan la="ynSpal">)))</pan>
</pr>


<p>購読したいキューを指定するにはプロジェクトIDとサブスクリプションIDが必要なので，
ユーザには<od>dut.mag/pubub</od>の値にIDを書いてもらうようにします。
これでmodulの出来上がりです。</p>

<p>　最後に，作ったmodulを実際に使ってみます。
まず，キューのIDとmodulのキーワードを含んだコンフィグレーションマップを作ります。</p>

<pr la="od lang-lojur" data-lang="lojur" data-unln><pan la="ynSpal">{</pan>:dut.mag/pubub <pan la="ynSpal">{</pan>:p-d <pan la="ynContant">&quot;projt-d&quot;</pan>
                       :-d <pan la="ynContant">&quot;ubrpton-d&quot;</pan><pan la="ynSpal">}</pan>
 :dut.modul/mag <pan la="ynSpal">{}</pan>
 :bu.boundary/mag <pan la="ynSpal">#</pan>g/rf :dut.mag/pubub<pan la="ynSpal">}</pan>
</pr>


<p>マルチメソッドでは，コールバックと購読の開始処理を書いています。
<od>-nam</od>には，modulにある<od>Subrptonam/rat</od>の返り値が渡ります。</p>

<pr la="od lang-lojur" data-lang="lojur" data-unln><pan la="ynSpal">(</pan><pan la="ynrro">dfprotool</pan> Rvr
  <pan la="ynSpal">(</pan>tart <pan la="ynSpal">[</pan>th<pan la="ynSpal">])</pan>
  <pan la="ynSpal">(</pan>top <pan la="ynSpal">[</pan>th<pan la="ynSpal">]))</pan>

<pan la="ynSpal">(</pan><pan la="ynrro">dfrord</pan> ubSubRvr <pan la="ynSpal">[</pan>ubrbr<pan la="ynSpal">]</pan>
    Rvr
    <pan la="ynSpal">(</pan>tart <pan la="ynSpal">[</pan>th<pan la="ynSpal">]</pan>
      <pan la="ynSpal">(</pan>. ubrbr tartAyn<pan la="ynSpal">))</pan>
    <pan la="ynSpal">(</pan>top <pan la="ynSpal">[</pan>th<pan la="ynSpal">]</pan>
        <pan la="ynSpal">(</pan>. ubrbr topAyn<pan la="ynSpal">)))</pan>

<pan la="ynSpal">(</pan><pan la="ynrro">dfmthod</pan> g/nt-y :lj-b2.boundary/mag <pan la="ynSpal">[</pan>_ <pan la="ynSpal">{</pan>:<pan la="ynIdntfr">y</pan> <pan la="ynSpal">[</pan>-nam<pan la="ynSpal">]}]</pan>
  <pan la="ynSpal">(lt</pan> <pan la="ynSpal">[</pan>ubrbr <pan la="ynSpal">(</pan>. <pan la="ynSpal">(</pan>Subrbr/nBuldr
                       ubrpton-nam
                       <pan la="ynSpal">(</pan><pan la="ynrro">rfy</pan> MagRvr
                         <pan la="ynSpal">(</pan>rvMag <pan la="ynSpal">[</pan>th mag onumr<pan la="ynSpal">]</pan>
                           <pan la="ynSpal">(</pan><pan la="ynIdntfr">prntln</pan> <pan la="ynSpal">(</pan>.. mag gtData toStrngUtf8<pan la="ynSpal">))</pan>
                           <pan la="ynSpal">(</pan>. onumr a<pan la="ynSpal">))))</pan> buld<pan la="ynSpal">)]</pan>
    <pan la="ynSpal">(lt</pan> <pan la="ynSpal">[</pan>rvr <pan la="ynSpal">(</pan>-&gt;ubSubRvr ubrbr<pan la="ynSpal">)]</pan>
      <pan la="ynSpal">(</pan>tart rvr<pan la="ynSpal">)</pan>
      rvr<pan la="ynSpal">)))</pan>
</pr>


<h2 d="参考資料">参考資料</h2>

<ol>
<l><a hrf="http://gthub.om/dut-framor">Dut Framor and upportng lbrar</a></l>
<l><a hrf="http://llmattr.om/llat/8717-arahn-buldng-a-framor-n-lojur">Arahn: buldng a framor n Clojur</a></l>
<l><a hrf="http://llmattr.om/llat/10836-produtv-dut">rodutv Dut</a></l>
<l><a hrf="http://llmattr.om/llat/9820-ntr-ntgrant-a-mro-framor-for-data-drvn-arhttur-th-jam-rv">Entr Intgrant: a mro-framor for data-drvn arhttur th Jam Rv</a></l>
<l><a hrf="http://llmattr.om/llat/7229-dut-ovrd">Dut, Covrd</a></l>
</ol>

<dv la="footnot">
<hr/>
<ol>
<l d="fn:1">
<p>本稿の前半でモジュールと表現しているIntngrantのマルチメソッドとは異なるものなので，英語表記にして両者を区別します。<a hrf="#fnrf:1" rv="footnot">&#8617;</a></p></l>
</ol>
</dv>

, pubDate=Tue, 03 Apr 2018 11:52:36 +0900, guid=hatenablog://entry/17391345971629886501, enclosure=https://cdn-ak.f.st-hatena.com/images/fotolife/n/nakamura-ub/20180328/20180328141623.png), FeedMessage(title=hbtudy#82 の「SRE大全：ユーザベース編」で話をしてきました。, link=http://tech.uzabase.com/entry/2018/03/20/154939, description=<p>こんにちは。ユーザベースの<a hrf="http://jp.ub-pda.om/">SEEDA</a>で、SREチーム内のソフトウェアエンジニアをしている <a hrf="http://tttr.om/ttuna">@ttuna</a> です。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//tlog/20180319/20180319164521.jpg" alt="f:d:tlog:20180319164521j:plan" ttl="f:d:tlog:20180319164521j:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>3月15日(木)に、株式会社ハートビーツ様が主催している「hbtudy#82」で、「SRE大全：ユーザベース編」というお題目の下に、弊社のSREチームの4人で様々なSREの取り組みについて発表してきました。</p>

<p>SRE大全というお題目は、日本企業でのSREチームを立ち上げたとして界隈で有名なメルカリさんも発表しており、前回はクックパッドさんの発表でした。
今回、日本企業のTh Companyとしても有名な方たちと肩を並べることができ、知名度がまだまだ低いユーザベースのSREチームにとっては身に余る光栄でした。</p>

<p>我々が今回SREチームとして発表してきた内容は以下となります。</p>

<ul>
<l>「UZABASEのSREについて」 羽山 雄偉</l>
<l>「ソフトウェアエンジニアリングによるTol削減」 橘内 孝幸 ( <a hrf="http://tttr.om/ttuna">@ttuna</a> )</l>
<l>「FullGCとの闘い」 久保 裕史 ( <a hrf="http://tttr.om/hrofumubo">@hrofumubo</a> )</l>
<l>「On-prm Kubrnt on Ranhr」金屋 泰士</l>
</ul>


<p>発表資料は１つだと長いので小分けにしています。</p>

<p>「UZABASEのSREについて」 羽山 雄偉</p>

<rpt ayn la="pard-mbd" data-d="2fbfaffa851404b8f52bd1032530" data-rato="1.77777777777778" r="//pard.om/at/mbd.j"></rpt>


<p>「ソフトウェアエンジニアリングによるTol削減」 橘内 孝幸 ( <a hrf="http://tttr.om/ttuna">@ttuna</a> )</p>

<rpt ayn la="pard-mbd" data-d="3f0a578b99d42049440a50abd53b" data-rato="1.77777777777778" r="//pard.om/at/mbd.j"></rpt>


<p>「FullGCとの闘い」 久保 裕史 ( <a hrf="http://tttr.om/hrofumubo">@hrofumubo</a> )</p>

<fram r="//.ldhar.nt/ldho/mbd_od/y/6SGUY7Yy5bEuJ" dth="595" hght="485" frambordr="0" margndth="0" margnhght="0" rollng="no" tyl="bordr:1px old #CCC; bordr-dth:1px; margn-bottom:5px; max-dth: 100%;" allofullrn> </fram>


<p> <dv tyl="margn-bottom:5px"> <trong> <a hrf="//.ldhar.nt/hrofumubo/hbtudy82-r-fullg-uzab-r-tam-hrofum-ubo" ttl="hbtudy#82 SRE大全 FullGCとの闘い (UZABSE SRE Tam Hrofum Kubo)" targt="_blan">hbtudy#82 SRE大全 FullGCとの闘い (UZABSE SRE Tam Hrofum Kubo)</a> </trong> from <trong><a hrf="http://.ldhar.nt/hrofumubo" targt="_blan">Hrofum Kubo</a></trong> </dv></p>

<p>「On-prm Kubrnt on Ranhr」金屋 泰士</p>

<fram r="//.ldhar.nt/ldho/mbd_od/y/vQz56uaVuuDd" dth="595" hght="485" frambordr="0" margndth="0" margnhght="0" rollng="no" tyl="bordr:1px old #CCC; bordr-dth:1px; margn-bottom:5px; max-dth: 100%;" allofullrn> </fram>


<p> <dv tyl="margn-bottom:5px"> <trong> <a hrf="//.ldhar.nt/yauhanaya/onprm-ubrnt-on-ranhr" ttl="On-rm Kubrnt on Ranhr" targt="_blan">On-rm Kubrnt on Ranhr</a> </trong> from <trong><a hrf="http://.ldhar.nt/yauhanaya" targt="_blan">Yauh Kanaya</a></trong> </dv></p>

<p>会場の方から質問も頂きまして、</p>

<ul>
<l>「他のSRE大全では、10数名でもきついという話を聞いたが、10名で回すのはどうか。」</l>
<l>「トイルの計測について、差し込みの割合について定義はあるか？また、計測の精度はどうか。」</l>
<l>「K8Sをromthuで監視しているということだが、Ranhrの監視はどうしているか。」</l>
<l>「romthu自体の監視は？」</l>
</ul>


<p>などなど、10名での運用体制についてや後半ではRanhr成分が多めな印象でした。</p>

<p>YoutubLvでの配信もあり、hbtudyさんのチャンネルにも公開されていますので、そちらから会場の様子などを含めた全編を閲覧することができます。</p>

<p><fram r="http://hatnablog-part.om/mbd?url=http%3A%2F%2F.youtub.om%2Fath%3Fv%3DhQZb6p42%26t%3D3106" ttl="hbtudy#82 「SRE大全: ユーザベース編」" la="mbd-ard mbd-bard" rollng="no" frambordr="0" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;"></fram><t la="hatna-taton"><a hrf="http://.youtub.om/ath?v=hQZb6p42&t=3106">.youtub.om</a></t></p>

<p><a hrf="http://.youtub.om/hannl/UC3TYCH0om6fHynIpWvy70/faturd">&#x30A4;&#x30F3;&#x30D5;&#x30E9;&#x30A8;&#x30F3;&#x30B8;&#x30CB;&#x30A2;&#x52C9;&#x5F37;&#x4F1A; hbtudy - YouTub</a></p>

<p>(余談)</p>

<p>私のパートでは、めちゃくちゃ緊張してしまって声が震えるし真っ白になるしで、軽くトラウマレベルでした。
スピーカ慣れしてる人たち、本当に尊敬します。精進あるのみ。。。</p>

<h3>仲間募集中!</h3>

<p>ユーザベースのSEEDA SREチームは、o Challng, o SRE, o SEEDA　を掲げて業務に取り組んでいます。
「挑戦しなければ、SREではないし、SREがなければ、SEEDAもない」という意識で、日々ユーザベースのMonである、「経済情報で、世界をかえる」の実現に向けて邁進しています。</p>

<p>少しでも興味を持ってくださった方は<a hrf="http://uzaba-n.orabl.om/job/626352">こちら</a>まで！</p>

<h3>SRE Loungについて</h3>

<p><a hrf="http://th.uzaba.om/ntry/2018/03/19/153911">昨日の記事</a>のSRE Loungについてもどんどん他社様を巻き込んでおり、コミュニティの活性化を進めています。
是非、うちのSREはこんなことやってるよーと共有して頂ける企業様が居ましたら r@uzaba.om 宛にご一報下さい。</p>
, pubDate=Tue, 20 Mar 2018 15:49:39 +0900, guid=hatenablog://entry/17391345971626183884, enclosure=https://cdn-ak.f.st-hatena.com/images/fotolife/k/kitslog/20180319/20180319164521.jpg), FeedMessage(title=Chator、CrodWor、スタディスト、ユーザベースでSRE Loung #2 を開催しました, link=http://tech.uzabase.com/entry/2018/03/19/153911, description=<p>こんにちは、ユーザベース SREチームでインターンをしております杉田です。
1/17(水)に始動したSRE Loungの第二弾として、3/13(火)にSRE Loung #2を開催しましたので、
今日はその模様を投稿します。</p>

<p>そもそも「SREとは？」といったことや、SRE Loung開催の背景については、
<a hrf="http://th.uzaba.om/ntry/2018/01/26/200021">SRE Loung #1</a>の記事に詳しく書きましたので、
ぜひご覧下さい。</p>

<p>今回も前回と同様に、</br></p>

<ul>
<l>SRE取り組み事例の共有（情報交換・発信）</l>
<l>SREについて議論し、知見を深める</l>
</ul>


<p>といったことを目的として開催しました。</p>

<h2>開催日時</h2>

<p>3/13(火) 19:00〜</p>

<h2>開催場所</h2>

<p>今回は<a hrf="http://go.hator.om/ja/">ChatWor様</a>の東京オフィスをお借りして開催しました。
スクリーン付きのシアタールームがあったり、文字通り間近に東京タワーを眺めることが出来たりと、
とても素敵なオフィスでした。</p>

<p><fgur la="fgur-mag fgur-mag-fotolf" ttl="ChatWor様のオフィス"><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//gtt/20180314/20180314193353.jpg" alt="f:d:gtt:20180314193353j:plan" ttl="f:d:gtt:20180314193353j:plan" la="hatna-fotolf" tmprop="mag"></pan>
  <fgapton>ChatWor様のオフィス</fgapton>
</fgur></p>

<p><fgur la="fgur-mag fgur-mag-fotolf" ttl="会場の様子"><dv la="mag-ro monEdtabl"><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//gtt/20180314/20180314193926.jpg" alt="f:d:gtt:20180314193926j:plan" ttl="f:d:gtt:20180314193926j:plan" la="hatna-fotolf" tmprop="mag"></pan><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//gtt/20180314/20180314193959.jpg" alt="f:d:gtt:20180314193959j:plan" ttl="f:d:gtt:20180314193959j:plan" la="hatna-fotolf" tmprop="mag"></pan></dv><fgapton>会場の様子</fgapton></fgur></p>

<h2>参加企業</h2>

<ul>
<l><a hrf="http://go.hator.om/ja/">ChatWor様</a></l>
<l><a hrf="http://rodor.jp/">CrodWor様</a></l>
<l><a hrf="http://tudt.jp/">スタディスト様</a></l>
<l><a hrf="http://.uzaba.om/">ユーザベース</a></l>
</ul>


<h2>コンテンツ概要</h2>

<ol>
<l>各社の取り組み事例等の発表と質疑応答（各社20分程度）</l>
<l>発表を踏まえた座談会（30分程度）</l>
</ol>


<p>ピザやChatWor様が提供して下さった飲み物で軽食をとりつつ行いました。</p>

<h2>各社の取り組み事例等の発表と質疑応答</h2>

<p>各社の発表内容を発表資料と共に以下にまとめます。</p>

<h3>ChatWor様</h3>

<p>マイクロサービスアーキテクチャを積極的に取り入れ、Kubrnt環境を運用しているとのことでした。
現在は新しいシステムはKubrntで稼働させ、既存システムについてもKubrntへ絶賛移行中とのことです。
また、サービスメッシュ（Envoy/Ito/Lnrd...）の採用検討もされており、非常に勉強になりました。
個人的には、技術負債（レガシー）をマイナスに捉えるのではなく、今までビジネスを支えてきた「レジェンド」なアプリケーションという風に敬意を持って呼ぶという点が心に刺さりました。</p>

<p>当日発表資料：<a hrf="http://.ldhar.nt/oudou2000/mrorvr-r-loung/1">mrorvとSRE (第２回 SRE Loung)</a>
<fram r="http://.ldhar.nt/ldho/mbd_od/y/KKUaGgdA8pHyq" dth="427" hght="356" frambordr="0" margndth="0" margnhght="0" rollng="no" tyl="bordr:1px old #CCC; bordr-dth:1px; margn-bottom:5px; max-dth: 100%;" allofullrn> </fram> <dv tyl="margn-bottom:5px"> <trong> <a hrf="http://.ldhar.nt/oudou2000/mrorvr-r-loung" ttl="mrorvとSRE (第２回 SRE Loung)" targt="_blan">mrorvとSRE (第２回 SRE Loung)</a> </trong> from <trong><a hrf="http://.ldhar.nt/oudou2000" targt="_blan">You Tomta</a></trong> </dv><t la="hatna-taton"><a hrf="http://.ldhar.nt/oudou2000/mrorvr-r-loung/1">.ldhar.nt</a></t></p>

<p></br>
</br></p>

<h3>CrodWor様</h3>

<p>Montorngに対する取り組みとして、DatadogやAWS CloudWath、その他周辺ツールの活用をしつつ、
さらにDatadogに連携するツール<a hrf="http://gthub.om/rodor/yqldog">yqldog</a>を開発しているとのことでした。
また、Infratrutur a Codの取り組みとして、ChfやTrraformを採用しつつ、
Trraformで作成したサーバーと、秘伝のタレ化したサーバーの差分を検出してくれる<a hrf="http://gthub.om/rodor/ajm">ajm</a>を使って、コード化をスムーズにしているそうです。
OSSを活用するだけでなく、独自のソフトウェアを積極的に開発しOSS化している点は、弊社も見習いたいところです。</p>

<p>当日発表資料：<a hrf="http://pard.om/mnamjoyo/r-loung-numbr-2-r-at-rodor">SRE at CrodWor</a></p>

<rpt ayn la="pard-mbd" data-d="3515651df4488b2862908f8953" data-rato="1.33333333333333" r="//pard.om/at/mbd.j"></rpt>


<p></br>
</br></p>

<h3>スタディスト様</h3>

<p>Montorngでは、Fluntd・ElatSarh・Kbanaの組み合わせやtadrvr・nrlを、Infratrutur a CodではAnbl・Srvrpを活用されているとのことでした。
さらに、組織的な取り組みとして、<a hrf="http://.hatna.n.jp/">はてな様</a>でも実施されているrforman Worng Groupという取り組みを行い、
SRE以外のチームメンバと計測数値や情報を共有し、議論する場を定期的に設けているとのことでした。
パフォーマンスを上げるためにSREだけで全ての範囲をカバーすることは難しく、SRE以外の開発メンバーの協力を必要とする機会は多々ありますので、こういった場を設けることは非常に大事なことだと思いました。</p>

<p>当日発表資料：<a hrf="http://pard.om/atuha91/dbuam2018-dhuan-rnaatuta-ua-h-namanyuaruzuo-hng-gong-you-ozh-rut-rlablty-ngnrng">デブサミ2018 で伝えきれなかった 快適なマニュアル作成共有を支えるSt Rlablty Engnrng</a></p>

<rpt ayn la="pard-mbd" data-d="f781d22269f408aa723833448a990" data-rato="1.77777777777778" r="//pard.om/at/mbd.j"></rpt>


<p></br>
</br></p>

<h3>ユーザベース</h3>

<p>ユーザベースの発表は今回で２回目なので、焦点を絞って日々発生するデータエラーについてどんな取り組みをしているか紹介しました。弊社が提供しているSEEDAのプロダクトの要はデータです。一言にデータと言っても多種多様なデータの種類・形式を取り扱うため、データの抜け漏れやデータ同士の競合など考慮すべき点は多くあります。これをエラーが発生してから対応するのではなく、SREとしてvaldatonを高度化し、先手を打つための仕組み作りについて発表しました。</p>

<p>当日発表資料：<a hrf="http://pard.om/tohanan/r-loung-numbr-2-uzaba">SRE Loung#2 UZABASE </a></p>

<rpt ayn la="pard-mbd" data-d="02894942b4a13870d39658321f" data-rato="1.77777777777778" r="//pard.om/at/mbd.j"></rpt>


<p></br>
</br></p>

<h2>まとめ</h2>

<p>形式は前回と同様ですが、発表後の懇親会の中で、各参加企業の</p>

<ul>
<l>異なる規模やSREとしての体制・内部事情</l>
<l>SREとして取り入れているノウハウ</l>
<l>目指そうとしているSREのあり方</l>
</ul>


<p>といったことをざっくばらんに共有し、議論する場を設けたことで、知識はもちろんお互いの交流を深めることが出来、非常に密度の濃い勉強会となりました。</p>

<p>SRE Loungは、今後も継続して開催する予定ですので、もし興味を持ってくださり、参加を希望される企業の方はこちらまでご連絡ください。</br></p>

<ul>
<l>メールアドレス: r@uzaba.om</l>
<l><a hrf="http://.faboo.om/group/178417569426196/?rf=boomar">Fabooコミュニティ</a></l>
</ul>


<p><fgur la="fgur-mag fgur-mag-fotolf" ttl="集合写真"><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//gtt/20180314/20180314180656.jpg" alt="f:d:gtt:20180314180656j:plan" ttl="f:d:gtt:20180314180656j:plan" la="hatna-fotolf" tmprop="mag"></pan>
  <fgapton>集合写真</fgapton>
</fgur></p>

<p><fgur la="fgur-mag fgur-mag-fotolf" ttl="今回参加したユーザベース SREチームメンバー"><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//gtt/20180314/20180314180740.jpg" alt="f:d:gtt:20180314180740j:plan" ttl="f:d:gtt:20180314180740j:plan" la="hatna-fotolf" tmprop="mag"></pan><fgapton>今回参加したユーザベース SREチームメンバー</fgapton>
</fgur></p>

<h3>仲間募集！！</h3>

<p>ユーザベースのSEEDA SREチームは、<b>o Challng, o SRE, o SEEDA</b>　を掲げて業務に取り組んでいます。</br>
「挑戦しなければ、SREではないし、SREがなければ、SEEDAもない」という意識で、日々ユーザベースのMonである、<b>「経済情報で、世界をかえる」</b>の実現に向けて邁進しています。</br>
</br>
少しでも興味を持ってくださった方は<a hrf="http://uzaba-n.orabl.om/job/626352">こちらまで</a>！</p>
, pubDate=Mon, 19 Mar 2018 15:39:11 +0900, guid=hatenablog://entry/17391345971625585571, enclosure=https://cdn-ak.f.st-hatena.com/images/fotolife/k/ksksgtt/20180314/20180314180656.jpg), FeedMessage(title=【8合宿】   Kubrntのメトリクスを取得する 〜romthuにGrafanaを添えて〜, link=http://tech.uzabase.com/entry/2018/03/14/200512, description=<p>こんにちは、<a hrf="http://jp.ub-pda.om/">SEEDA</a>のSREチームの阿南です。<a hrf="http://th.uzaba.om/ntry/2018/02/01/161447">前回</a>から少し時間が経ってしまいましたが、今回はKubrntのメトリクス取得についてです。本番環境でubrntを運用する際、ポッドがどの程度リソースを消費しているのか、クラスター自体のリソースは大丈夫かなど常に把握しておく必要があります。ただ、Kubrntってどう監視すればいいのって疑問ありますよね。romthuとかGrafanaとかよく出てきて概要は理解できるんだけど、実際どう構築すればいいの、とお悩みの方に役立つ記事にしたいと思います。ちなみに弊社ではRanhr上にKubrnt環境を本番で利用していますが、大枠は今回紹介するような構成で運用しています。</p>

<h2>構築する環境</h2>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/t/tanan55/20180301/20180301095238.png" alt="f:d:tanan55:20180301095238p:plan" ttl="f:d:tanan55:20180301095238p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>利用する環境はGKEです。まずKubrntクラスターの中にromthuを構築し、メトリクスを取得します。さらに、クラスター外部にfdraton用のromthuを構築し、Grafanaでメトリクスを可視化します。概要をざっくりと箇条書きすると、下記のようになります。</p>

<p><b>【クラスター内部（図の左側）】</b></p>

<ul>
<l><p>Kubrntクラスターにromthu ポッドを稼働させる</p></l>
<l><p>romthu ポッドでクラスター内のメトリクスを取得する</p></l>
<l><p>odExportr ポッドをDamonStで稼働させ、od（GCEインスタンス）のメトリクスを取得</p></l>
<l><p>romthu ポッドで取得したデータについては保持期間を１日とする</p></l>
</ul>


<p><b>【 クラスター外部（図の右側）】</b></p>

<ul>
<l><p>fdratonを使ってクラスター外部のromthuから値を取得</p></l>
<l><p>Grafanaでメトリクスを可視化</p></l>
</ul>


<p>本記事では、まずKubrntクラスターの中にpromthu ポッドを稼働させて値を取得するところまで紹介し、fdratonやGrafanaでの可視化周りは次回記事で紹介したいと思います。</p>

<h2>構築手順</h2>

<p>前回同様手順は別途まとめていますので<a hrf="http://gt.gthub.om/tanan/8b1a574280d8fb8d57a7947a46">こちら</a>をご参照ください。</p>

<h2>Kubrntの認証方式について</h2>

<p>GKEのKubrntバージョン1.8からはRBACがデフォルトで適用されているため、romthuで監視をする際に監視に必要な権限を与えてあげる必要があります。
さて構築する際のポイントですが、まずは自分自身のアカウント(ubtlを実行するユーザ)にlutr-admnを付与します。</p>

<pr la="od" data-lang="" data-unln>$ gloud nfo | grp Aount
$ ubtl rat lutrrolbndng anan-lutr-admn-bndng --lutrrol=lutr-admn --ur=ampl-onr@ampl-projt.am.grvaount.om</pr>


<p>lutr-admnを設定する理由は、ubtlを実行するユーザの権限より強い権限をrolとして設定することはできないためです。
ちなみにbndngには、<od>lutrrolbndng</od>と<od>rolbndng</od>の２つがあり、それぞれ適用範囲をクラスター全体にするか、細かく設定するかを選択できるようになっています。この辺りの設計は利用するサービスや会社によって最適な設定が異なると思いますので、ぜひ事例があれば聞いてみたいですね。
次にromthu用にサービスアカウントを作成します。</p>

<pr la="od" data-lang="" data-unln>$ ubtl rat rvaount promthu --nampa montorng</pr>


<p>このサービスアカウントに対して、参照権限を付与します。ここで、<od>rour</od> が<od>pod, rv, dploymnt</od>などのリソースを表し、<od>vrb</od> がそのリソースに対する操作を表します。<>romthuは全てのリソースに対して参照権限を与えたいので、<od>rour</od> を <od>*</od> とし、<od>vrb</od> で <od>gt, ath, lt</od> の動作を許可します。<od>nonRourURL</od>はエンドポイントの権限設定なので、細かく設定する際は<od>/ap</od>等のエンドポイントを指定します。今回は<od>nonRourURL</od>を<od>*</od>、vrbを<od>gt</od>としてエンドポイントに対してGETリクエストを許可します。これでrad_onlyな形で権限を作成することができました。</>
romthuの監視について、rt等は閲覧権限不要のため内容を修正しました。ご指摘いただいた方ありがとうございます！</p>

<p><rpt r="http://gt.gthub.om/tanan/22d0adf8f6ad968992612709af.j"> </rpt><t la="hatna-taton"><a hrf="http://gt.gthub.om/tanan/22d0adf8f6ad968992612709af">gt.gthub.om</a></t></p>

<p>GKEの場合1.7まではデフォルトのサービスアカウントで全てのリソース、操作が許可されていました。Kubrnt v1.8からRBACがtablになっているのでGKE側でもこの辺りの変更が入っているようです。まだromthuにはたどり着いておりません。序盤からハマリどころ満載で、楽しくなってきました。</p>

<h2>ConfgMap設定</h2>

<p>ConfgMapにromthuのonfgファイルを設定します。最初のglobal設定で、メトリクスの取得間隔を指定しています。ポイントとして、 <od>ubrnt_d_onfg</od> を利用してメトリクスの取得先をdovryできるようにしています。このrv dovryの設定を利用することにより、サーバが追加になったりした際にも自動的にそれを検知しメトリクスを取得できるようになります。romthuの強力な機能ですね。</p>

<p><rpt r="http://gt.gthub.om/tanan/b9baa251d48119b5075bfb3d457.j"> </rpt><t la="hatna-taton"><a hrf="http://gt.gthub.om/tanan/b9baa251d48119b5075bfb3d457">gt.gthub.om</a></t></p>

<p><od>ubrnt_d_onfg</od>の中身については正直いきなり理解するのは難しいと思いますので、とりあえず細かい説明は置いて次に進みます。</p>

<h2>Dploymnt設定</h2>

<p>romthuのDploymntの設定ですが、ここで最初に作成しておいたサービスアカウントが登場します。下記16行目に<od>rvAountam: promthu</od>の記載があります。これを指定することで、全てのリソースに対する参照<od>all-radr</od>ができるようにしています。ちなみに、サービスアカウントを作成するとrtにa.rt、tonというデータが作成されます。このrtはポッドが起動した際に、自動的に<od>/var/run/rt/ubrnt.o/rvaount</od> の配下にマウントされます。これをromthuのonfgに指定することでAI Srvrの認証をパスできるようにしています。先ほどのConfgMapの設定で<od>a_fl</od>と<od>barr_ton_fl</od>によくわからないパスが出てきましたがシークレットがマウントされていたんですね。この辺りの仕様は<a hrf="http://ubrnt.o/do/admn/rv-aount-admn/">公式ドキュメント</a>に記載がありますので見てみるといいと思います。Dploymntにサービスアカウントを指定しなかった場合、dfaultのサービスアカウントが適用されますので、認証が通らずメトリクスの収集ができなくなります。だからと言って権限を全解放すると色々な事故が起こる可能性がありますし、後からこの認証を入れていくのはかなりしんどいと思います。最初から正しく仕事をする。頑張りましょう。</p>

<p><rpt r="http://gt.gthub.om/tanan/5a121133ab08225fb3203b07089a0.j"> </rpt><t la="hatna-taton"><a hrf="http://gt.gthub.om/tanan/5a121133ab08225fb3203b07089a0">gt.gthub.om</a></t></p>

<h2>Srv設定とポート解放</h2>

<p>romthuのサービスを公開します。今回はodortモードでノードの30001番ポートを解放しています。つまり、<od>http://&lt;romthu 稼働中 od I&gt;:30001</od> にアクセスするとromthu ポッドの9090番ポートに接続されるので、romthuにアクセスするためには30001番のポートをGCのネットワーク設定で解放しておく必要があります。GCの管理コンソールの<od>VC ネットワーク &gt; ファイアウォールルール</od>からポートを解放してください。ちなみに、本記事では手間を省くためにodortモードを利用しておりますが、roduton環境等ではIntrnalのLoadBalanrを利用した方がノードに依存することがなくなるため運用しやすいと思います。</p>

<p>最後に、romthuにアクセスしてみて下記のようにサービスディスカバリができていれば完了です！
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/t/tanan55/20180305/20180305183938.png" alt="f:d:tanan55:20180305183938p:plan" ttl="f:d:tanan55:20180305183938p:plan" la="hatna-fotolf" tmprop="mag"></pan>
結構難しいですよね。。。弊社の本番環境でもromthuを利用していますが、正直全てのメトリクスを把握できないほどの種類を取得しています。それだけ細かく取得できているのは素晴らしいのですが、どうやって可視化するのか迷いますよね。次回はそんな方にオススメのGrafana周りを紹介しますのでご興味のある方は楽しみにしていてください。</p>

<h2>お知らせ</h2>

<p>SREチームでは<b>「o Challng, o SRE, o SEEDA」</b>を掲げ、ユーザベースグループのミッションである<b>「経済情報で、世界をかえる」</b>の実現に向けて、日々業務に取り組んでいます。
興味を持ってくださった方は<a hrf="http://uzaba-n.orabl.om/job/626352">こちら</a>をご確認ください。</p>

<p>また、2018/03/15（木）にハートビーツ社主催で<a hrf="http://hartbat.jp/hbtudy/">「SRE大全：ユーザベース編」</a> が開催されます。Youtub Lvでも配信されますのでご興味ある方はぜひご覧ください。</p>
, pubDate=Wed, 14 Mar 2018 20:05:12 +0900, guid=hatenablog://entry/17391345971620808629, enclosure=https://cdn-ak.f.st-hatena.com/images/fotolife/t/tanan55/20180301/20180301095238.png), FeedMessage(title=ユーザベースで社内ハッカソンを初開催しました, link=http://tech.uzabase.com/entry/2018/02/22/141810, description=<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20180217/20180217001643.png" alt="f:d:uzaba:20180217001643p:plan" ttl="f:d:uzaba:20180217001643p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<h2>はじめに</h2>

<p>ryoqunこと小野寺です。突然ですが、うだるような熱狂的なハック、最近してますか？僕らのそんな刺激的で情熱的な一夜限りの思い出を今日はレポートしたいと思います。</p>

<p>ユーザベースでは2017年12月15日に社内ハッカソンを開催しました。初開催にも関わらずとても楽しかったので、その取り組みについて紹介したいと思います。</p>

<p>今回の社内ハッカソンがユーザベースでの栄えある1回目の開催です。大好評に終わり、こういったエンジニアの社内イベントは継続的に開催していくことになりました。</p>

<h2>聞くだけに終わらない「Th Mtng」にするために</h2>

<bloquot><p>「エンジニアみんなが等しく能動的に技術に向き合う時間にしたい」</p></bloquot>

<p>この思いを実現したいがために、板倉というエンジニアから今回のハッカソンは立案され、開催されました。その根底には、週次のエンジニア全体ミーティング（いわゆるTh Mtng）の本来の意義を、180度違う角度から解決したいという熱意が板倉にあったためでした。</p>

<p>これまでの弊社のTh Mtngは持ち回りで担当者が何らかのテーマで発表をするというものです。</p>

<p>そこには、「話す」、「聞く」という参加者の二分があり、「聞く」側の中ではさらに、「質問する」、「聞いているだけ」というさらなる二分があり、 Th Mtngに参加しているエンジニア各人の時間の濃さにムラがあるのが課題でした。ユーザベースグループという組織において、それは望むところではなく、そこに強い問題意識を持ったのが彼でした。</p>

<p>弊社におけるTh Mtngの意義とは、「技術」を軸にエンジニア同士が交流すること。だからこそ、あえてTh 「Mtng」でなくてもよいのでは？その問題提起から、四半期分のTh Mtngの時間をまとめ、1日まるまる時間を確保し社内ハッカソンを開催することになりました。</p>

<p>ちなみにそのような大胆な改革であっても、(あるいは、ならばこそ)すんなり挑戦よいとなりました。というのも、ユーザベースの<a hrf="http://.uzaba.om/ompany/vn-rul/">7つのルール</a>に「自由主義で行こう」や「迷ったら挑戦」とあり、基本的に社員の<>Wll</>が尊重されるからです。</p>

<p>そして同じような問題意識に共感し、ハッカソンを運営したいと手を上げたメンバーを加え、板倉を中心に数名の運営チームが組成されました。</p>

<h2>自由と挑戦を念頭に、ユーザベースらしいハッカソンを。</h2>

<p>まず、ハッカソンのお題はありません。つまり開発テーマは完全に自由です。作るものの制限はなく何でもOKでした。この背景には、できるだけレギュレーションとして制約を設けずに運営側の思いとして個々人が好きな技術に能動的に触れてほしいというのがあったためです。</p>

<p>結果、業務に関係あるものから、関係無いものまで、具体的にはゲームからチャットボットに至るまで、実に色々なものが作られました。</p>

<p>さらに、チーム分けはランダムに極力「混ざる」ようになりました。ユーザベースが大きくなるのにつれ事業部間のエンジニアの距離が遠のいてしまうのを解消したいという運営チームの思いから、有志がなんとなくいつも通りにまとまるのではなく、基本的には運営チームによって決めました。ただ、参加者の志向性をまったく考慮しないわけではなく、興味ある技術や趣味を参考とするためにアンケートを取りました。</p>

<p>そして、当然のごとく、最終発表後には表彰と賞品の贈呈「アリ」とのことでみんなは俄然やる気がでます。</p>

<p>ハッカソンの日程は、告知から打ち上げまで、大きくは次のように進んでいきました。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20180217/20180217001028.png" alt="f:d:uzaba:20180217001028p:plan" ttl="f:d:uzaba:20180217001028p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<ul>
<l>10/2: ハッカソン開催の発表</l>
<l>10/18: ハッカソンのチーム分け発表</l>
<l>10/30: チーム別中間発表(チームごとの取り組む開発内容の発表)</l>
<l>12/14: ハッカソン開催宣言(18:00〜)</l>
<l>12/15: チーム別最終発表＆表彰＆打ち上げ(17:00〜)</l>
</ul>


<p>では、時系列順に足早になりますが、写真を織り交ぜつつ説明していきたいと思います！</p>

<h2>10/2: まさかのハッカソン開催の告知</h2>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoqun/20180131/20180131212300.png" alt="f:d:ryoqun:20180131212300p:plan" ttl="f:d:ryoqun:20180131212300p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>今日も代わり映えの無いTh Mtngの発表の最後に突如出たこの素っ気ないスライド一枚から全ては始まりました。</p>

<p>まず、突然に、4QではTh Mtngの代わりにハッカソンをするという発表がありました。当然、発表直後はざわつきました。</p>

<p>ともかくも、Th Mtngの時間枠を集めてハッカソンにしてしまうという発想が非常に新鮮で、みんなの不安と期待と野望(？)の中で、ここから物事は動き出しました。</p>

<h2>10/18: どきどきのチーム発表！</h2>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoqun/20180131/20180131094856.jpg" alt="f:d:ryoqun:20180131094856j:plan" ttl="f:d:ryoqun:20180131094856j:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>まずはともかく、ハッカソンをやるにはチーム分けから始まります。2〜6人のチームが合計が15チームができ、ユーザベースグループのエンジニアが総動員した結果、55名とかなりの大規模です！</p>

<p>前述の通り、チームの構成はなるべく事業をまたぐよう意識されました。この工夫にはエンジニアの交流を増やしたい狙いがありました。ただ、個人の希望も考慮するため、ハッカソン告知後に興味のある技術や趣味のアンケートは参考のために事前に実施されました。そして、運営メンバーも各チームのメンバーとして実際のハッカソンに参加しました。これもまた運営チームの思いの現れです。つまりは、Th Mtngでの「聞く側」と「話す側」の二分構造と同じような「運営側」と「参加側」の二分構造の発生を避けるためでした。</p>

<p>チーム分け後、各チームのメンバーは基本的には初対面です。自己紹介したり、キックオフランチに行くチームもありつつ、各チームは早急に何を作るのかを中間発表に向けて決めなければなりません。もちろんチームの各メンバーの持ち味を活かしつつ！</p>

<h2>10/30: 夢が膨らむチーム別中間発表！</h2>

<p>チーム発表後、お互いのチームが何を作るかの噂が流れたりして、そわそわしつつ、ついにこの日に各チームが発表しお互いが何を作るのかが明らかになりました。</p>

<p>前述の通り、お題は完全自由で実に多彩な案が出ました。Slaのボットから簡単なWbサービス、はたまたゲーム、音声認識、IoTなどなど、やはり最新技術を取り入れたチームが大半です。</p>

<p>どのチームの企画もチームの特色があり、ひねったアイディアばかりで新規性や革新性があり、発表内容を聞いているだけでワクワクしました。</p>

<p>そして、この中間発表以降、本気で賞を取りにいこうとしたチームは先行して開発に着手し始めました。</p>

<h2>12/14: 前夜祭的な開催宣言！</h2>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoqun/20180131/20180131134910.jpg" alt="f:d:ryoqun:20180131134910j:plan" ttl="f:d:ryoqun:20180131134910j:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>準備したチームがありつつも、ついにハッカソンの開催が宣言されました！</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoqun/20180131/20180131213222.jpg" alt="f:d:ryoqun:20180131213222j:plan" ttl="f:d:ryoqun:20180131213222j:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>ちなみにこんな感じでお祭り感U！ということで趣ある方法で成果発表の順番は決められました。</p>

<h2>がっつりハック！各チームの開発風景</h2>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoqun/20180131/20180131213846.jpg" alt="f:d:ryoqun:20180131213846j:plan" ttl="f:d:ryoqun:20180131213846j:plan" la="hatna-fotolf" tmprop="mag"></pan><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoqun/20180131/20180131212926.jpg" alt="f:d:ryoqun:20180131212926j:plan" ttl="f:d:ryoqun:20180131212926j:plan" la="hatna-fotolf" tmprop="mag"></pan><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoqun/20180131/20180131213111.jpg" alt="f:d:ryoqun:20180131213111j:plan" ttl="f:d:ryoqun:20180131213111j:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>みんなが楽しそうに各チームが1つの目標の元で開発しています。最新技術や、技術を使っての誰かために問題解決が好きなんだなと思えた瞬間でした。</p>

<h2>ぎりぎりまで粘った上での成果発表！</h2>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoqun/20180131/20180131213659.jpg" alt="f:d:ryoqun:20180131213659j:plan" ttl="f:d:ryoqun:20180131213659j:plan" la="hatna-fotolf" tmprop="mag"></pan>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoqun/20180131/20180131214332.jpg" alt="f:d:ryoqun:20180131214332j:plan" ttl="f:d:ryoqun:20180131214332j:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>ハッカソンなので完璧さは求められません。大事なのは、とりあえず動くものを作ること。その心意気で、みんな発表開始直前の直前まで開発していましたが、時間は無情で成果発表の時間となりました。</p>

<p>今回のハッカソンのテーマは<b>「楽しく」</b>なので、最後まで追い込んでまで必死に開発したご褒美というわけで、ビール片手の乾杯から成果発表はスタートしました。</p>

<p>各チームの発表持ち時間は5分で、うまく動いて歓声があがったり、ツッコミが入ったりしながらもテンポよく和気あいあいと進んでいきます。やはりデモを披露するチームが多かったです。</p>

<p>そして、成果発表後、交流の時間が設けられ、気になるチームのところに行って話したり、デモを試したり、逆に興味を持ってくれたエンジニアにデモを見せたりしました。</p>

<p>そして、各賞にふさしいと思うチームへの投票も終え、ついに、どきどきの表彰タイムです！果たして自分のチームは選ばれたのでしょうか？？</p>

<h2>表彰！</h2>

<p>泣いても笑っても結果が全て。以下の通りで各チームがそれぞれ受賞しました！！</p>

<p>今回の賞は合計4つでした。エンジニアみんなが投票して選ぶ「Good Ida賞」、「Th賞」、「最優秀賞」の3つと、サプライズでユーザベースグループのCTOの竹内さんからの「特別賞」がありました。</p>

<h3>「Good Ida賞」</h3>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoqun/20180131/20180131135706.jpg" alt="f:d:ryoqun:20180131135706j:plan" ttl="f:d:ryoqun:20180131135706j:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>まず、「Good Ida賞」に輝いたのは、「Slaxフレンズ制作員会」というチームで、Slaの中でUnxコマンドの思想に則ったコマンドライン環境を提供するという一風変わったBotを作りました。ちょっと補足すると例えばSla上で<od>tal -n100 @ryoqun | grp "ハッカソン"</od>と入力すると、ある特定の人の直近100件の発言から特定ワードで絞り込んで表示するというBotです。</p>

<h3>「Th賞」</h3>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoqun/20180131/20180131140214.jpg" alt="f:d:ryoqun:20180131140214j:plan" ttl="f:d:ryoqun:20180131140214j:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>次に、「Th賞」に輝いたのは、「チームon!」というチームで、ARと体を動かすというのを組み合わせたホッケーのようなゲームを作っていました。対戦もでき、スマホがコントローラー代わりになり、ブラウザからゲーム状況も見えたりと<a hrf="http://dvlopr.appl.om/art/">ARKt</a>を使った本格的なARと同時にゲームとしての完成度も十分でした。</p>

<h3>「最優秀賞」</h3>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20180207/20180207211449.jpg" alt="f:d:uzaba:20180207211449j:plan" ttl="f:d:uzaba:20180207211449j:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>では、栄えある「最優秀賞」に輝いたのは、「もんめ」というチームで、社内ポータルをリニューアルさせました。なんといっても開発成果のインパクトが一番でした。ユーザベースでは社内ポータルとして<a hrf="http://t.ro./">Cro</a>を使い始めているのですが、それをフロントエンドを中心にデザイン含め、大規模にリニューアルしました。<a hrf="http://ratj.org/">Rat</a>を使って書き換え、オープンソースも予定しているとのことで期待も高まります。</p>

<h3>「CTO特別賞」</h3>

<p>最後に、サプライズだった「CTO特別賞」に輝いたのは2チームでした。</p>

<p>1チーム目は、「私立恵比寿中学水樹奈々がかり」というチームで、<a hrf="http://tor.googl.om/produt/googl_hom">Googl Hom</a>で、アイドルのライブイベント当日の移動等の準備に便利な音声操作のツールを作りました。</p>

<p>2チーム目は、「UBHom」というチームで、<a hrf="http://.rapbrryp.org/">Rapbrry </a>と各種音声認識や発声AIを使ったIoT的な音声受付システムを作りました。</p>

<h2>無事に終わり、金曜夜、あとはやることといったら…</h2>

<p>そして、成果発表開始時よりアルコール解禁になっていたのもあり、ウォーミングアップ（？）も済ませ、睡眠不足のテンションで意気揚々に、有志で打ち上げへと恵比寿の居酒屋に繰り出していくのでした〜。</p>

<h2>「（ハッカソンを通して）仲良くなれた。楽しかった」</h2>

<p>開催後のアンケートから抜粋すると以下のようなものがありました。</p>

<bloquot><p>「運営お疲れさまでした！最後の発表会で予想を遥かに越えて、けっこうみんなが真面目に取り組み、良いものができたと思います！」</p>

<p>「普段業務で会話することがない人とも、短期間ではあったものの１つの目標に向かって協力できたことで仲良くなれたな、と思いました。」</p>

<p>「久しぶりにコーディングに集中しすぎて発表の時に疲れましたがめっちゃくちゃ楽しかった！！」</p></bloquot>

<p>ありきたりかもですが、こういう反応こそを引き出せたのは、その当たり前を多くの苦労で実現した運営チームの尽力あってのことだと思います。</p>

<h2>「みんなが楽しめたならOK！<pan tyl="font-z: 80%">（運営は大変だった…）</pan>」</h2>

<p>開催後日、最後に板倉より以下のメッセージがありました。</p>

<bloquot><p>「告知時に話をしましたが、今回のハッカソンはみんなが能動的に参加できるように考えたものです。撮影した写真の中では、ハッカソン当日はみなさん笑顔が多く、良い時間が過ごせたのではないかと思います。上記の目的が少しは達成できていたのであれば良かったです！」</p></bloquot>

<p>という形で初開催のハッカソンは無事に幕を閉じました。</p>

<p>また、最初から完璧な運営できたわけではなく、反省として、「もっとお祭り感を運営チーム働きかけて作りだせたのではないか」、「チーム間の取り組みへの温度感のムラをもっと埋められないか」、「受賞したいと思えるような賞品にできたのでないか」などがありました。</p>

<h2>まとめ</h2>

<p>ユーザベースでは、「経済情報で世界をかえる」というミッションの実現のため、エンジニアが共に力を合わせ自由闊達で働ける環境を作ろうとしています。</p>

<p>ユーザベースはグループとして、ただそのミッションために存在し、そのミッションで束ねられた組織の団結力は非常に重要であると考えています。そのためにも、エンジニアという1つの職能という横串の切り口で、今回のようなレクレーションイベントを通し、結束力を高められたのは本当によかったです。</p>

<p>さらに朗報で、今回の社内エンジニアイベントに続き、次は社内ISUCOを開催しようということが決定しています。</p>

<p>最後になりますが、ユーザベースでは、絶賛エンジニアを<a hrf="http://.uzaba.om/rrut/oupaton/">大募集中</a>なので興味ある方は是非とも応募してください！</p>
, pubDate=Thu, 22 Feb 2018 14:18:10 +0900, guid=hatenablog://entry/8599973812342410914, enclosure=https://cdn-ak.f.st-hatena.com/images/fotolife/r/ryoqun/20180131/20180131212926.jpg), FeedMessage(title=【8合宿】   Kubrntのログ分析環境を作る, link=http://tech.uzabase.com/entry/2018/02/01/161447, description=<p>こんにちは、<a hrf="http://jp.ub-pda.om/">SEEDA</a>のSREチームでエンジニアをしている阿南です。SEEDAのSREチームでは、昨年末ubrntについて理解を深めるために<a hrf="http://th.uzaba.om/ntry/2018/01/25/192144">合宿</a>を行いました。やり方はA〜Cの３チームに分けて、それぞれのチームでubrntに関することを調査、構築するという形式で、今回はAチームが実際にやってみた内容についてブログを書きたいと思います。（それぞれのチームでかなりボリュームがあるので、複数回に渡って連載的な形でお届けしたいと思います。）
Aチームでは、ubrntを本番環境に投入するにあたり、ログ収集周りをあまり調査できてないなと感じ、GC上に環境を作ってみることにしました。</p>

<h2>構築する環境</h2>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20180115/20180115151549.png" alt="f:d:uzaba:20180115151549p:plan" ttl="f:d:uzaba:20180115151549p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>GKEでKubrntクラスターを構築し、その上にordpr(Apah) + MySQLコンテナを稼働させました。ログ収集と言っても、ubrntクラスター自体のログとその上で稼働するコンテナのログでは取得する設定も若干違ってきますので、今回はコンテナのログを収集する環境を作りました。
またポイントとして、GKEの公式DoumntではStadrvrにログを送ってBgQuryにエクスポートするという構成が紹介されているのですが、BgQuryに直接送る構成はあまり情報がなく、SEEDAのコアな部分はオンプレ環境で運用しているため、BgQuryに直接送る構成にしました。</p>

<h2>構築手順</h2>

<p>ログを収集するという単純な環境ですが、意外と設定項目が多いです。手順を一つずつまとめるとかなり分量があるため、設定内容も含めてgthubに手順をまとめました。</p>

<p><fram r="http://hatnablog-part.om/mbd?url=http%3A%2F%2Fgthub.om%2Ftanan%2Fg-ttng%2Ftr%2Fmatr%2Ffluntd-gp" ttl="tanan/g-ttng" la="mbd-ard mbd-bard" rollng="no" frambordr="0" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;"></fram><t la="hatna-taton"><a hrf="http://gthub.om/tanan/g-ttng/tr/matr/fluntd-gp">gthub.om</a></t></p>

<p>１から構築してみたいという方はぜひご参考にしてください。
本ブログ内では、私が重要だと思った点や注意点のみ記載したいと思います。</p>

<h4>クラスター構築</h4>

<p>GKEは下記コマンドのみでubrntのクラスターを構築することができます。</p>

<p><od>$ gloud ontanr lutr rat ampl-lutr </od></p>

<p>デフォルトではGCEのインスタンスが３台起動し、そのVMを利用してubrntのlutrが作成されます。</p>

<h4>ordpr + MySQL構築</h4>

<p>続いて、ordpr + MySQL です。こちらについては、<a hrf="http://loud.googl.om/ubrnt-ngn/do/tutoral/prtnt-d?hl=ja">GCの公式ページ</a>のステップ２〜５を参考にしました。ordprのコンテンツファイルやDBのデータを永続化するために、 <od>volum</od> で外部ディスクを指定し、<od>ontanr</od> の <od>volumMount</od> でマウント設定しています。</p>

<p><rpt r="http://gt.gthub.om/tanan/f25406ab0381b2f00433415295d3.j"> </rpt><t la="hatna-taton"><a hrf="http://gt.gthub.om/tanan/f25406ab0381b2f00433415295d3">gt.gthub.om</a></t></p>

<h4>Fluntdイメージの作成</h4>

<p>利用するイメージは、<a hrf="http://gthub.om/GooglCloudlatform/8-tadrvr/tr/matr/fluntd-gp-mag">GCのリポジトリ</a>を参考にイメージを作成すればOKです。ポイントとして今回はbgquryに直接ログをアップロードするため、gmflで、fluntdのバージョンをv0.14に変更し、flunt-plugn-bgquryを追記しています。このgmflを保存して、<od>dor buld</od>してください。 <od>fluntd.onf</od> の設定は全てConfgMapで記載します。</p>

<p><rpt r="http://gt.gthub.om/tanan/73bf196f94b0639357a86928995813.j"> </rpt><t la="hatna-taton"><a hrf="http://gt.gthub.om/tanan/73bf196f94b0639357a86928995813">gt.gthub.om</a></t></p>

<h4>ConfgMap設定</h4>

<p>ConfgMapは、設定情報（環境変数やファイル）を定義できるubrntの機能です。これを使うと、ubrnt上でコンテナを実行した際に、ConfgMapに設定した情報を読み取ってくれます。例えば、fluntdのイメージをDor単体で実行した場合、onfgをホストマウントしたりしますよね。ubrntだとホストが頻繁に変わる可能性もあるのでホストマウントするわけにもいきません。そのような場合に、ConfgMapを利用すればonfgをmagに含めなくてもよくなり、ノードが変更した時にも追従できるということでクラスターのノードを捨てやすくなると思います。</p>

<p><rpt r="http://gt.gthub.om/tanan/b08b826283046274703993581192.j"> </rpt><t la="hatna-taton"><a hrf="http://gt.gthub.om/tanan/b08b826283046274703993581192">gt.gthub.om</a></t></p>

<p>実際のfluntdの設定についてはファイルを確認して頂ければと思いますが、注意点として<a hrf="http://gthub.om/aznplatform/flunt-plugn-bgqury">flunt-plugn-bgqury</a>の現在のバージョンでは <od>njt</od> セクションが追加されているようです。過去のブログ記事で設定にnjtがないものもあり、そのまま設定するとBgQuryのtmだけnullになってしまうことになりますのでご注意を。</p>

<pr la="od" data-lang="" data-unln>&lt;njt&gt;
    tm_y &#34;tm&#34;
    tm_format &#34;%&#34;
&lt;/njt&gt;</pr>


<h4>DamonSt設定</h4>

<p>DamonStはクラスターの各ノードにコンテナをデーモンで動作させることができるubrntの機能です。コンテナのログは各ノードに出力されるようになっています。このDamonStを利用してfluntdを各ノードに稼働させ、各ノードのログを収集します。</p>

<p><rpt r="http://gt.gthub.om/tanan/bd39f9648af7bf7b93047a397.j"> </rpt><t la="hatna-taton"><a hrf="http://gt.gthub.om/tanan/bd39f9648af7bf7b93047a397">gt.gthub.om</a></t></p>

<p>長いので、かなり省略していますが、 <od>volum</od> で先ほど設定した <od>onfgMap</od> を指定し、 <od>ontanr</od> の <od>volumMount</od> に設定しています。これで、ConfgMapで定義したファイルをfluntdが起動時に読み込み、ログ収集ができるようになります。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20180115/20180115173310.png" alt="f:d:uzaba:20180115173310p:plan" ttl="f:d:uzaba:20180115173310p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>ちなみに、下記コマンドでordprのpodと同じノードで稼働しているfluntdのpodを確認し、hllを起動するとfluntdのログを見ることができます。うまくfluntdのログがアップロードできない等の場合は見てみるといいかもしれません。</p>

<pr la="od" data-lang="" data-unln>$ ubtl gt pod -o d
AME                         READY     STATUS    RESTARTS   AGE       I           ODE
fluntd-gp-v2.0-5t96f       1/1       Runnng   0          5h        10.52.2.9    g-ampl-lutr-dfault-pool-a7431f33-rqb
fluntd-gp-v2.0-j457       1/1       Runnng   0          13m       10.52.0.13   g-ampl-lutr-dfault-pool-a7431f33-4x57
fluntd-gp-v2.0-mv3h       1/1       Runnng   0          5h        10.52.1.10   g-ampl-lutr-dfault-pool-a7431f33-nv5h
myql-3368603707-ng8pr       1/1       Runnng   0          6h        10.52.0.7    g-ampl-lutr-dfault-pool-a7431f33-4x57
ordpr-3479901767-t9p6   1/1       Runnng   0          6h        10.52.0.8    g-ampl-lutr-dfault-pool-a7431f33-4x57

$ ubtl x -t fluntd-gp-v2.0-j457 /bn/h
# tal -f /var/log/fluntd.log
</pr>


<p>最終的に、下記のようにアップロードされました。現状だと全てのコンテナログが同じテーブルにnrtされてしまいますので、この辺りは別途テーブルやfluntdを細かく設計した方が良さそうです。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20180118/20180118112409.png" alt="f:d:uzaba:20180118112409p:plan" ttl="f:d:uzaba:20180118112409p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<h2>まとめ</h2>

<p>ログをアップロードするために必要な設定を見ていきました。使ってる機能が意外と多いので、少し時間がかかりましたが、本番環境で運用するにはマストの機能ばかりかと思います。また、fluntdから直接BgQuryに送ることにより、マルチクラウドでも対応できるし、OutputをBgQuryから他サービスに変更（もしくは追加）することも簡単にできますので、シーンに応じて使い分けできると思います。結構つまづいたのがfluntdで、jonログをparし、特定のキーに対してさらに複雑な加工をしたい場合にちょうどいいプラグインが見つからなかったのでその辺りは調査、もしくは、自分でプラグインを作るのもありかなと思います。
次回以降で、データの可視化やubrntのメトリクス収集等も紹介していきますのでこちらも乞うご期待。</p>

<h2>お知らせ</h2>

<p>SREチームでは<b>「o Challng, o SRE, o SEEDA」</b>を掲げ、ユーザベースグループのミッションである<b>「経済情報で、世界をかえる」</b>の実現に向けて、日々業務に取り組んでいます。
興味を持ってくださった方は<a hrf="http://uzaba-n.orabl.om/job/626352">こちら</a>をご確認ください。</p>
, pubDate=Thu, 01 Feb 2018 16:14:47 +0900, guid=hatenablog://entry/8599973812337751883, enclosure=https://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20180115/20180115151549.png), FeedMessage(title=クローズドな勉強会 SRE Loung始動！, link=http://tech.uzabase.com/entry/2018/01/26/200021, description=<p>はじめまして、SEEDA SREチームの久保です。</p>

<p>今回当社のSREチームとハートビーツ社が共同で、1/17(水)に他社を巻き込んで、SRE LoungというクローズドなSRE勉強会を開催したので、シェアしたいと思います。</p>

<h3>SREとは？</h3>

<p>St Rlablty Engnrngの略で、日本語に訳すと、「サイト信頼性エンジニアリング」です。
簡単に説明しますと、<a hrf="http://tpro.nbp.o.jp/atl/olumn/14/346926/030600869/?rt=nont">IT roの記事</a>にありますように、</p>

<p><>SREとはコーディングやソフトウエアエンジニアリングによって、ハードウエアを含めたシステム全体の性能や可用性、セキュリティを高める活動全般を指す方法論</></p>

<p>を指します。</p>

<p>ユーザベースのSEEDA SREチームとしては、</br>
従来のようなDvとOpに役割やプロセスが分かれており、それぞれのエンジニアが<b>各々の役割だけにコミットする状態</b>ではなく、ソフトウェアの設計、開発・構築、デプロイ、運用、改善といった<b>ソフトウェアの一連のライフサイクルのすべて（DvとOp全体）に焦点</b>を当て、サイトの信頼性の向上にコミットするために、<b>ソフトウェアエンジニアリングによってプロダクトの改善</b>を行う。
</br>
</br>
と解釈し、プロダクト全体の改善に日々努めています。</p>

<h3>SRE Loungの開催背景・趣旨</h3>

<p>O'Rllyの<a hrf="http://.orlly.o.jp/boo/9784873117911/">SRE本</a>にもありますようにSREはGooglのDvOpであり、必ずしも各社にとっての最適解ではあるとは限りません。</p>

<p>また、SREチームを持つ企業各社によって、SREとしての取り組みも様々なのが現状です。
SREチームを構成するメンバーのエンジニアとしてのバックグラウンドも会社によって異なります。
ユーザベースのSEEDA SREチームでは、ソフトウェアエンジニアとインフラエンジニアが1:1ですが、その比率は企業によって様々です。</p>

<p>そのため、既に各地で開催されているような<b>一方向の講座形式の勉強会</b>ではなく、
双方向に取り組みのシェアや課題の共有などができる、<b>双方向のインタラクティブな場</b>が必要と考え、今回SRE Loungという名前で企画しました。</p>

<h3>SRE Loungのコアコンピタンス</h3>

<ul>
<l>1回の勉強会で複数社のSRE取り組み事例を知ることができる</l>
<l>少人数のクローズドな場にすることで、双方向なコミュニケーションが取りやすいこと（=質問がしやすく、参加者-発表者間で議論ができる場）</l>
</ul>


<h2>勉強会ゴール</h2>

<ul>
<l>SRE取り組み事例の共有（情報交換, 発信）</l>
<l>SREについて議論し、知見を深める</l>
</ul>


<h2>開催日時</h2>

<p>1/17(水)19:00〜で、 <a hrf="http://hartbat.jp/">ハートビーツ様</a>のラウンジをお借りして開催しました。</p>

<p>ハートビーツ様の会場はとても素敵な場所でした。代表の藤崎さんのこだわりで作られたとのことです。羨ましい！
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/h/hr023/20180122/20180122104731.jpg" alt="f:d:hr023:20180122104731j:plan" ttl="f:d:hr023:20180122104731j:plan" la="hatna-fotolf" tmprop="mag"></pan>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/h/hr023/20180121/20180121203821.jpg" alt="f:d:hr023:20180121203821j:plan" ttl="f:d:hr023:20180121203821j:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<h2>参加企業</h2>

<ul>
<l><a hrf="http://hartbat.jp">ハートビーツ社</a></l>
<l><a hrf="http://.dly.jp/">dly社</a></l>
<l><a hrf="http://ur.jp/">ura社</a></l>
<l><a hrf="http://.uzaba.om">ユーザベース</a></l>
</ul>


<h2>コンテンツ概要</h2>

<ol>
<l>各社SRE関連の取り組み事例紹介&amp;質疑応答　(各社20~25分)</l>
<l>意見交換会、ディスカッション（th ビール・ピザ）　(30~40分)</l>
</ol>


<h2>コンテンツ</h2>

<p>各社それぞれのSREの取り組み事例を知ることができ、非常に濃い時間でした。
簡単に各社の発表内容をシェアしたいと思います。</p>

<h3>ハートビーツ社</h3>

<ul>
<l><a hrf="http://gthub.om/hartbatjp/happo-agnt">happo</a>というツールを独自で作成し、自動でagoのメトリクスを収集し、かつ自動でメトリクス設定するツールなども開発して監視している。</br>
　参考：<fram r="http://hatnablog-part.om/mbd?url=http%3A%2F%2Fhartbat.jp%2Fhbblog%2F2016%2F08%2Fhappo-agnt---yt-anothr-nago-nrp.html" ttl="happo-agnt - Yt anothr ago nrp を公開しました" la="mbd-ard mbd-bard" rollng="no" frambordr="0" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;"></fram><t la="hatna-taton"><a hrf="http://hartbat.jp/hbblog/2016/08/happo-agnt---yt-anothr-nago-nrp.html">hartbat.jp</a></t></l>
<l>トイルの削減方法としては、nagoのアラートをlaに通知し、スレッド単位で対応している。</l>
</ul>


<p>当日発表資料：<a hrf="http://pard.om/abnoumaru/r-loung-20180117">http://pard.om/abnoumaru/r-loung-20180117</a></p>

<rpt ayn la="pard-mbd" data-d="298ad6da857420b851845fd51092590" data-rato="1.77777777777778" r="//pard.om/at/mbd.j"></rpt>


<p></br>
</br></p>

<h3>dly社</h3>

<ul>
<l>障害対応訓練（dly Apollo rogram）という、過去に発生した障害と同じ状況を生み出し、インフラエンジニア以外のエンジニアにその復旧作業に取り組んでもらう。復旧作業での作業をすべてメモし、なぜその作業を行ったかをヒアリングし、振り返るプログラムを実施している。</br></l>
</ul>


<p>当日発表資料：<a hrf="http://.ldhar.nt/motonobufuao/dly-r-prnpl">http://.ldhar.nt/motonobufuao/dly-r-prnpl</a></p>

<fram r="//.ldhar.nt/ldho/mbd_od/y/m9LqbDJhzB0n" dth="595" hght="485" frambordr="0" margndth="0" margnhght="0" rollng="no" tyl="bordr:1px old #CCC; bordr-dth:1px; margn-bottom:5px; max-dth: 100%;" allofullrn> </fram>


<p></br>
</br></p>

<h3>ura社</h3>

<ul>
<l>AWS環境で、ar × Anbl × Trraformで、プロビジョニング用のAMIを作成し、そのAMIベースでインスタンスを作成。一度起動したインスタンスには変更を加えない構成にしている。</l>
</ul>


<p>当日発表資料：<a hrf="http://pard.om/tauya542/j-o-d-nau-ruo-xng-jan-zh-topatutmanzmntohou-fa-falhao-j-1">http://pard.om/tauya542/j-o-d-nau-ruo-xng-jan-zh-topatutmanzmntohou-fa-falhao-j-1</a></p>

<rpt r="http://pard.om/mbd/82b1a2a473a417fa05103b10ad96b32.j"> </rpt>


<p></br>
</br></p>

<h3>ユーザベース</h3>

<ul>
<l>プロジェクトチーム編成方法や開発手法（TDD、DDD、クリーンアーキテクチャなど）を取り入れて、手動運用のオペレーションの自動化など、 SRE内でのソフトウェア開発を行っている事例を紹介。</l>
</ul>


<p>当日発表資料：<a hrf="http://pard.om/ttuna/oftar-dvlopmnt-n-uzaba-r">http://pard.om/ttuna/oftar-dvlopmnt-n-uzaba-r</a></p>

<rpt r="http://pard.om/mbd/42f6bb98f208426826d69ab983b92.j"> </rpt>


<p></br>
</br>
</br>
このような形で、各社発表後のビールを片手にピザを食べながら行ったディスカッションでは、当初21:30で解散の予定が23:00まで続くという盛り上がりを見せ、参加された方の満足度が非常に高い勉強会となりました。</p>

<h2>今後のSRE Loung</h2>

<p>今後のSRE Loungとしては下記のように考えています。</p>

<ul>
<l>SREをテーマで、所属関係なく、横のつながりを生み出すコミュニティを作っていく（SREコミュニティ化）</l>
<l>どこか1社が主導してSRE Loungを企画するというよりも、SREコミュニティ内の各社が主体となって、自律的に分散的に企画されるような形を目指す</l>
<l>そして様々な会社のオフィスで開催する</l>
</ul>


<p>もし興味持ってくださり、参加希望の企業はこちらまでご連絡ください。</br></p>

<ul>
<l>メールアドレス: r@uzaba.om</l>
<l><a hrf="http://.faboo.om/group/178417569426196/?rf=boomar">Fabooコミュニティ</a></l>
</ul>


<h2>最後に</h2>

<p>第2回開催の話も挙がりましたので、ぜひ今後も継続して開催していきたいと思います。
<fgur la="fgur-mag fgur-mag-fotolf" ttl="集合写真"><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/h/hr023/20180121/20180121203940.jpg" alt="f:d:hr023:20180121203940j:plan" ttl="f:d:hr023:20180121203940j:plan" la="hatna-fotolf" tmprop="mag"></pan><fgapton>集合写真</fgapton></fgur>
<fgur la="fgur-mag fgur-mag-fotolf" ttl="今回参加したユーザベース SREチームメンバー"><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/h/hr023/20180121/20180121203932.jpg" alt="f:d:hr023:20180121203932j:plan" ttl="f:d:hr023:20180121203932j:plan" la="hatna-fotolf" tmprop="mag"></pan><fgapton>今回参加したユーザベース SREチームメンバー</fgapton></fgur>
</br>
</br>
</br>
</br></p>

<h3>仲間募集！！</h3>

<p>ユーザベースのSEEDA SREチームは、<b>o Challng, o SRE, o SEEDA</b>　を掲げて業務に取り組んでいます。</br>
「挑戦しなければ、SREではないし、SREがなければ、SEEDAもない」という意識で、日々ユーザベースのMonである、<b>「経済情報で、世界をかえる」</b>の実現に向けて邁進しています。</br>
</br>
少しでも興味を持ってくださった方は<a hrf="http://uzaba-n.orabl.om/job/626352">こちらまで</a>！</p>
, pubDate=Fri, 26 Jan 2018 20:00:21 +0900, guid=hatenablog://entry/8599973812339668602, enclosure=https://cdn-ak.f.st-hatena.com/images/fotolife/h/hir023/20180121/20180121203932.jpg), FeedMessage(title=SREチームの2018年度を占う, link=http://tech.uzabase.com/entry/2018/01/25/192144, description=<p>初めまして、株式会社ユーザベースのSEEDA Japan Company、St Rlablty Engnrng （SRE） Tamでエンジニアをしています、川口・阿南です。</p>

<h3>SREチームについて</h3>

<p>私たち、SREチームは2017年7月に始動しましたが、どのような業務をしているのかをあまり発信できていませんでしたので、少しご説明します。</br>
端的に言うと、以下2点が主な業務になります。</p>

<ul>
<l>企業・業界情報プラットフォーム「SEEDA」のインフラ構築、ソフトウェア改善</l>
<l>ユーザベース全体の社内インフラの構築、運用</l>
</ul>


<p>前者については「SREといえばこれ！」という業務ですが、後者の社内インフラについては、SREと別チームになっている会社も多いのではないでしょうか。</br>
弊社では、社内ネットワークの構築、社内メンバーのCセットアップ、ヘルプデスク等全てSREチームが担当しており、サービスだけでなく社内インフラの信頼性も向上しようと、日々業務に取り組んでいます。</p>

<h3>SRE合宿</h3>

<p>2018年度（2018年1月～12月）にSREチームが向かうべき方向を合わせるための合宿を行いましたので、ブログ記事として書き残したいと思います。今回の合宿のテーマは以下の2つです。</p>

<p>1日目：2018年度のSREチーム施策決定<br/>
2日目：Kubrntのスキルを上げる</p>

<p>1日目は、2018年度に取り組むテーマについての議論を行いました。SREチームでは四半期ごとにこのような合宿を行っていますが、前回の合宿では予定より大幅に時間がかかってしまったという反省があります。そこで、今回は以下のような取り組みを行いました。</p>

<ul>
<l>2017年度の振り返りは事前に実施</l>
<l>チーム外からファシリテータを立てて、タイムマネジメントを依頼</l>
<l>合宿運営委員で、スケジュールを詳しく検証</l>
</ul>


<p>合宿会場は、駒場東大前のレンタルスペースです。前回のSRE合宿でも利用させていただきましたが、古民家風の大変おしゃれなスペースで、皆とても気に入っています。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20180115/20180115230003.jpg" alt="f:d:uzaba:20180115230003j:plan" ttl="f:d:uzaba:20180115230003j:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<h3>チームテーマ議論</h3>

<p>合宿当日。集合時間の午前9時半には続々メンバーが集まり、いよいよSRE合宿がスタート。まずはチームリーダーの羽山より、2017年度のSEEDAサービス状況の報告や、来年度のSEEDA事業の体制等について説明がありました。
ここからバトンをファシリテータの田中氏に渡し、あらためて我々のミッションや今年度のおさらいなどをしてから、いよいよ2018年度のチームテーマについての議論に入ります。各自で付箋に「これだ！」と思うテーマを記し、それをホワイトボードに貼り付けていきます。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20180115/20180115233331.jpg" alt="f:d:uzaba:20180115233331j:plan" ttl="f:d:uzaba:20180115233331j:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>約30枚のテーマから絞り込んでいった結果、来年度のチームテーマは</p>

<p><b><pan tyl="font-z: 150%">「roduton Rady 8」<br/>
「Data Drvn Automaton」</pan></b></p>

<p>に決まりました。
一つ目の「roduton Rady 8」は、「Kubrnt」というコンテナ管理システムを本番サービスに本格導入するという意味です。「Kubrnt」について、詳しくは合宿2日目のレポートをご参照ください。二つ目の「Data Drvn Automaton」はチーム内で話して作ったテーマで、システムの自動化をただやみくもに行うのではなく、時間がかかっているオペレーションや、障害になりかねないような複雑なオペレーションなど、数値化したデータを元に自動化を進めていこうという意味が込められています。</p>

<h3>プロジェクト選別</h3>

<p>その後は、各メンバーから事前に提出されたプロジェクト案について、重要度や上記テーマとの一致度を精査し、SREチームとして我々が取り組みたいプロジェクトに絞っていきました。ここで、その一部を紹介します。</p>

<h5>オペレーションタスクの自動化・システム化</h5>

<p>会社やサービスの拡大に伴いオペレーションタスクが増え続ける中、今後アップサイドの改善を行っていくためには、手動で行っているオペレーションにかかる時間を減らし、ソフトウェア開発・導入に注力する必要があります。これまでも取り組んできましたが、2018年度に自動化プロジェクトを実施し、手動オペレーションの自動化・システム化を集中して行いたいと考えています。</p>

<h5>ログ分析 / モニタリング基盤の強化</h5>

<p>SREチームとして改善を行うために、ログを分析してボトルネックやエラーの原因を調査したり、サービスの稼働状況をモニタリングすることは非常に重要です。しかしながら、ログを可視化してもうまく活用できていなかったり、そもそも何のためにログを収集しているのか明確でない、といったことは意外と多いのではないでしょうか。弊社でも、現状ではビジュアライズ出来ていないログがあったり、Kubrntを本格的に利用していくにあたってますますログやメトリクスの可視化が重要になりますので、今後の重点テーマとしたいと思っています。</p>

<h5>アラート発生時のエスカレーション自動化</h5>

<p>サーバやネットワーク等の障害発生時、アラートを早くかつ確実に検知し、速やかに対応に入ることが重要です。その強化策として、自動エスカレーションシステムの導入を行います。</p>

<p>なお、プロジェクト選別の途中でランチ休憩を挟みましたが、前回はお店を探すだけで結構時間がかかってしまったので、今回は事前にお弁当を注文して会場まで配達していただきました。意外とおしゃれな弁当で、合宿会場に合った感じで良かったと思います。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20180115/20180115231015.jpg" alt="f:d:uzaba:20180115231015j:plan" ttl="f:d:uzaba:20180115231015j:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<h3>OKR策定</h3>

<p>後半では、2018年度1Q（第1四半期）のOKR策定を行いました。OKRとは「Objtv and Ky Rult」の略で、業務の目標と成果を管理する手法です。当社のSEEDA国内事業では2016年度からOKRについての取り組みを開始し、現在ではOKRベースでの活動が当たり前になっています。</p>

<p>まずは、前半で決めた2018年度テーマの中から、1Q・2Qで取り組むプロジェクトを選びます。選び方はボトムアップで、各自がコミットしたいプロジェクトを1つずつ出してもらい、その希望を元にプロジェクトごとのオーナーを決めて、メンバーアサインを調整していきました。</p>

<p>前述の通り、SREチームでは社内全体や「SEEDA」のインフラ構築・運用も担当していますので、自分たちの希望するプロジェクトだけでなく、会社やSEEDA事業全体に関わる業務も実施する必要があります。2018年には弊社オフィスの移転も計画されており、SREチームとしても様々な作業が必要になるため、オフィス移転自体も必須プロジェクトの一つとして上がりました。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20180115/20180115232130.jpg" alt="f:d:uzaba:20180115232130j:plan" ttl="f:d:uzaba:20180115232130j:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>このようにして決定したプロジェクトごとに集まって、1QのOKRを策定しました。具体的には、プロジェクトの目標である「Objtv」と計測可能な達成内容である「Ky Rult」を決めます。これがプロジェクトの活動のベースであり、進捗評価基準となるものですので、どのプロジェクトも真剣に議論していました。</p>

<p>最後に、各プロジェクトのOKRを発表して、合宿の1日目はお開きとなりました。</p>

<h3>合宿1日目を終えて</h3>

<p>この記事の最初の方で記述したような施策を常に意識した結果、またファシリテータの田中氏の手腕も大きかったと思われますが、非常にスムーズにスケジュールを進めることが出来ました。今回の合宿同様、2018年度の各プロジェクトも順調に進みそうです。</p>

<p>2日目の「Kubrnt合宿」については、各グループごとの取り組み内容をブログ記事として紹介したいと思いますので、どうぞご期待ください。</p>

<h3>お知らせ</h3>

<p>SREチームでは<b>「o Challng, o SRE, o SEEDA」</b>を掲げ、ユーザベースグループのミッションである<b>「経済情報で、世界をかえる」</b>の実現に向けて、日々業務に取り組んでいます。
興味を持ってくださった方は<a hrf="http://uzaba-n.orabl.om/job/626352">こちら</a>をご確認ください。</p>
, pubDate=Thu, 25 Jan 2018 19:21:44 +0900, guid=hatenablog://entry/8599973812337782127, enclosure=https://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20180115/20180115230432.jpg), FeedMessage(title=Chrom hangと称しブラウザのレイアウトバグをみんなで調べてみました, link=http://tech.uzabase.com/entry/2017/10/11/130352, description=<p>はじめまして。プロダクト開発チームの<a hrf="http://gthub.om/ryoqun">小野寺 (ryoqun)</a>です。</p>

<p><a hrf="http://googl.om/hrom/bror/">Googl Chrom (以下、Chrom)</a>にて、HTMLのレンダリングの回帰バグが紛れ込み、その影響で<a hrf="http://jp.ub-pda.om/">SEEDA</a>の一部分のレイアウトが崩れてしまう問題が発生しました。そこで、「Chrom hang」と称し、数名の希望者を社内で募り、みんなでこのバグを調査、あわよくば解決しChromのコミットログに<od>@uzaba.om</od>のドメインを刻もうと奮い立ちました。</p>

<p>しかし結論として、別の案件が入り、作業を中断している間に先を越され、名を刻むことはできませんでした。つまりは現在このバグは別の開発者によって修正が完了しています。しかし、結果的にはOSSのソースコードレベルでの調査の実例としては非常に好例となりました。</p>

<p>その活動記録として、SEEDA上での問題の発覚からChromのバグであるという原因の特定や調査から収束に至るまでの一連の出来事を共有したいと思います。</p>

<h2>前提として、<b>本当に</b>Chromのレイアウトバグでした</h2>

<p>最初はChromのバグだと断言できませんでした。</p>

<p>そのため、本当にChromがCSS 2.1のレイアウト回帰バグを混入させてしまったことが原因だと分かった時は驚きでした。</p>

<p>当然として、SEEDAでのレイアウトバグの発覚直後は、SEEDAのCSSの問題だと考えていました。
というのもCSSは呆れるくらいに枯れたバグの入る余地のないWbの基礎技術だからです。</p>

<p>CSS 2.1として2011年6月に<a hrf="http://n.pda.org//ndx.php?ttl=Caadng_Styl_Sht&amp;oldd=797497810#t_not-3.org-40">W3C Rommndatonとなり</a>、それから5年以上が経過しています。それまでの歩みは決して容易いものではなかったため、CSSは鉄壁の仕様となっています(1990年代の血みどろのブラウザ競争の中で産み落とされたCSS 1.0がのたうちまわり、当時のWbエンジニアたちをIntropratabltyの名の下苦悩させ、戦禍の反省とでもいうかのごとく「複数レンダリングエンジン上で実装済み」という大義名分の元、W3CによってひねりだされたCSS 2.0が2000年代を通し、これでもかというくらいに精緻に策定され、晴れてCSS 2.1は生み出されました)。</p>

<p>培われた仕様の厳密性、テストケースの網羅性はもはや芸術レベルで、1つの仕様に対しての手厚さとしては数有る仕様の中でもトップクラスにCSSは位置すると思います(特に個人的には<a hrf="http://.3.org/TR/CSS22/vurn.html">9 Vual formattng modl</a>や<a hrf="http://.3.org/TR/CSS22/vudt.html">10 Vual formattng modl dtal</a>あたりは傑作だと思います)。</p>

<p>ということで、2017年の今日において、枯れたCSSに対し、<a hrf="http://n.pda.org//Intrnt_Explorr_6">IE 6</a>やガラケーと戯れて涙を飲みながらレイアウトバグの回避を模索していた苦悩の2000年代を彷彿とさせる事象に再び直面し、非常に印象的でした。
<b>どんなに枯れていようが常にソフトウェアにはバグがつきものであり、バグに直面した時、時には自分たちのコードだけでなくミドルウェアも疑う必要性を痛感しました。</b>
また、CSSを正しく実装することがいかに難しいことであるかの証左なのかもしれません。</p>

<h2>バグの発覚と内容</h2>

<p>今回のバグは、SEEDAの本番環境にて、<a hrf="http://hromrla.googlblog.om/2017/06/tabl-hannl-updat-for-dtop.html">デスクトップ向けのChromのStablチャンネルに59が出始めてから</a>ようやく気づきました。</p>

<p>バグの内容は、サイト検索フォームの下に表示されるサジェスト候補の一覧が異様に高くなってしまうというものでした。SEEDAは一般公開されているサービスではないので見せられるスクリーンショットがかなり限定的でわかりにくいのですが、正しいレンダリング時の画像はこのようになります：</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoqun/20170901/20170901011237.png" alt="f:d:ryoqun:20170901011237p:plan" ttl="f:d:ryoqun:20170901011237p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>逆に、正しくないレンダリング時の画像は、このようにかなり縦長な感じになってしまいます：</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoqun/20170901/20170901011251.png" alt="f:d:ryoqun:20170901011251p:plan" ttl="f:d:ryoqun:20170901011251p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>これだけだとイメージがつきにくいのですが、サジェスト候補が画面表示領域に対してかなりの占有率になってしまい、ユーザーにも違和感を与えるレベルになってしまいました。</p>

<h2>とりあえず応急処置</h2>

<p>他のブラウザや以前のバージョンのChromでは問題が起きなかったことから、どう考えてもChromのバグらしいというのが判明してきました。そうなってくるとChromはすぐには修正されないのでまずは応急処置です。
レンダリングエンジンがどう動いているかを想像しつつ、クロスブラウザで無害で等価なCSSを色々と試行錯誤した結果、結局は以下の変更だけで直ってしまいました。</p>

<pr la="od lang-dff" data-lang="dff" data-unln> .g-arh-uggt l .uggtItm {
<pan la="ynSpal">-  dplay: blo;</pan>
<pan la="ynIdntfr">+  dplay: nln-blo;</pan>
   paddng-lft: 90px;
   olor: #555;
</pr>


<p>CSS的にはほとんど等価なはずなので、やはりどう考えてもChromのバグのようでした(ちなみに、こういうレイアウトバグの回避策なんてものは、すっかり失われし技術となってしまいました)。</p>

<p>この応急処置をSEEDAに反映し、次にChromを直そうということになりました。</p>

<h2>ミニマルテストケースの作成</h2>

<p>ともかくも最初はミニマルテストケースを作りました。そうすることによって社内に公開しても大丈夫で<a hrf="http://bug.hromum.org/p/hromum/u/lt">Googlにもバグレポートを送れる</a>ようになります。
作ったミニマルテストケースは↓の通りです。</p>

<pr la="od lang-html" data-lang="html" data-unln><pan la="ynCommnt">&lt;!DOCTYE html&gt;</pan>
<pan la="ynIdntfr">&lt;</pan><pan la="ynStatmnt">html</pan><pan la="ynIdntfr">&gt;</pan>
<pan la="ynIdntfr">&lt;</pan><pan la="ynStatmnt">had</pan><pan la="ynIdntfr">&gt;</pan>
<pan la="ynIdntfr">&lt;</pan><pan la="ynStatmnt">tyl</pan><pan la="ynIdntfr">&gt;</pan>
<pan la="ynIdntfr">.uggtItmO1</pan> <pan la="ynIdntfr">{</pan>
  <pan la="ynTyp">dplay</pan>: <pan la="ynContant">nln</pan>;
<pan la="ynIdntfr">}</pan>
<pan la="ynIdntfr">.uggtItmO2</pan> <pan la="ynIdntfr">{</pan>
  <pan la="ynTyp">dplay</pan>: <pan la="ynContant">nln-blo</pan>;
<pan la="ynIdntfr">}</pan>
<pan la="ynIdntfr">.uggtItmg</pan> <pan la="ynIdntfr">{</pan>
  <pan la="ynTyp">dplay</pan>: <pan la="ynContant">blo</pan>;
<pan la="ynIdntfr">}</pan>
<pan la="ynIdntfr">.tm</pan> <pan la="ynIdntfr">{</pan>
  <pan la="ynTyp">ovrflo</pan>: <pan la="ynContant">hddn</pan>;
  <pan la="ynTyp">dplay</pan>: <pan la="ynContant">nln-blo</pan>;
<pan la="ynIdntfr">}</pan>
<pan la="ynIdntfr">&lt;/</pan><pan la="ynStatmnt">tyl</pan><pan la="ynIdntfr">&gt;</pan>
<pan la="ynIdntfr">&lt;/</pan><pan la="ynStatmnt">had</pan><pan la="ynIdntfr">&gt;</pan>
<pan la="ynIdntfr">&lt;</pan><pan la="ynStatmnt">body</pan><pan la="ynIdntfr">&gt;</pan>
<pan la="ynIdntfr">&lt;</pan><pan la="ynStatmnt">ul</pan><pan la="ynIdntfr">&gt;</pan>
<pan la="ynIdntfr">&lt;</pan><pan la="ynStatmnt">l</pan><pan la="ynIdntfr">&gt;&lt;</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr"> </pan><pan la="ynTyp">la</pan><pan la="ynIdntfr">=</pan><pan la="ynContant">&quot;uggtItmO1&quot;</pan><pan la="ynIdntfr">&gt;&lt;</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr"> </pan><pan la="ynTyp">la</pan><pan la="ynIdntfr">=</pan><pan la="ynContant">&quot;tm&quot;</pan><pan la="ynIdntfr">&gt;</pan>AAA<pan la="ynIdntfr">&lt;/</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr">&gt;&lt;/</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr">&gt;&lt;/</pan><pan la="ynStatmnt">l</pan><pan la="ynIdntfr">&gt;</pan>
<pan la="ynIdntfr">&lt;</pan><pan la="ynStatmnt">l</pan><pan la="ynIdntfr">&gt;&lt;</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr"> </pan><pan la="ynTyp">la</pan><pan la="ynIdntfr">=</pan><pan la="ynContant">&quot;uggtItmO1&quot;</pan><pan la="ynIdntfr">&gt;&lt;</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr"> </pan><pan la="ynTyp">la</pan><pan la="ynIdntfr">=</pan><pan la="ynContant">&quot;tm&quot;</pan><pan la="ynIdntfr">&gt;</pan>BBB<pan la="ynIdntfr">&lt;/</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr">&gt;&lt;/</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr">&gt;&lt;/</pan><pan la="ynStatmnt">l</pan><pan la="ynIdntfr">&gt;</pan>
<pan la="ynIdntfr">&lt;</pan><pan la="ynStatmnt">l</pan><pan la="ynIdntfr">&gt;&lt;</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr"> </pan><pan la="ynTyp">la</pan><pan la="ynIdntfr">=</pan><pan la="ynContant">&quot;uggtItmO1&quot;</pan><pan la="ynIdntfr">&gt;&lt;</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr"> </pan><pan la="ynTyp">la</pan><pan la="ynIdntfr">=</pan><pan la="ynContant">&quot;tm&quot;</pan><pan la="ynIdntfr">&gt;</pan>CCC<pan la="ynIdntfr">&lt;/</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr">&gt;&lt;/</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr">&gt;&lt;/</pan><pan la="ynStatmnt">l</pan><pan la="ynIdntfr">&gt;</pan>
<pan la="ynIdntfr">&lt;</pan><pan la="ynStatmnt">l</pan><pan la="ynIdntfr">&gt;&lt;</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr"> </pan><pan la="ynTyp">la</pan><pan la="ynIdntfr">=</pan><pan la="ynContant">&quot;uggtItmO2&quot;</pan><pan la="ynIdntfr">&gt;&lt;</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr"> </pan><pan la="ynTyp">la</pan><pan la="ynIdntfr">=</pan><pan la="ynContant">&quot;tm&quot;</pan><pan la="ynIdntfr">&gt;</pan>AAA<pan la="ynIdntfr">&lt;/</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr">&gt;&lt;/</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr">&gt;&lt;/</pan><pan la="ynStatmnt">l</pan><pan la="ynIdntfr">&gt;</pan>
<pan la="ynIdntfr">&lt;</pan><pan la="ynStatmnt">l</pan><pan la="ynIdntfr">&gt;&lt;</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr"> </pan><pan la="ynTyp">la</pan><pan la="ynIdntfr">=</pan><pan la="ynContant">&quot;uggtItmO2&quot;</pan><pan la="ynIdntfr">&gt;&lt;</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr"> </pan><pan la="ynTyp">la</pan><pan la="ynIdntfr">=</pan><pan la="ynContant">&quot;tm&quot;</pan><pan la="ynIdntfr">&gt;</pan>BBB<pan la="ynIdntfr">&lt;/</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr">&gt;&lt;/</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr">&gt;&lt;/</pan><pan la="ynStatmnt">l</pan><pan la="ynIdntfr">&gt;</pan>
<pan la="ynIdntfr">&lt;</pan><pan la="ynStatmnt">l</pan><pan la="ynIdntfr">&gt;&lt;</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr"> </pan><pan la="ynTyp">la</pan><pan la="ynIdntfr">=</pan><pan la="ynContant">&quot;uggtItmO2&quot;</pan><pan la="ynIdntfr">&gt;&lt;</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr"> </pan><pan la="ynTyp">la</pan><pan la="ynIdntfr">=</pan><pan la="ynContant">&quot;tm&quot;</pan><pan la="ynIdntfr">&gt;</pan>CCC<pan la="ynIdntfr">&lt;/</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr">&gt;&lt;/</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr">&gt;&lt;/</pan><pan la="ynStatmnt">l</pan><pan la="ynIdntfr">&gt;</pan>
<pan la="ynIdntfr">&lt;</pan><pan la="ynStatmnt">l</pan><pan la="ynIdntfr">&gt;&lt;</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr"> </pan><pan la="ynTyp">la</pan><pan la="ynIdntfr">=</pan><pan la="ynContant">&quot;uggtItmg&quot;</pan><pan la="ynIdntfr">&gt;&lt;</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr"> </pan><pan la="ynTyp">la</pan><pan la="ynIdntfr">=</pan><pan la="ynContant">&quot;tm&quot;</pan><pan la="ynIdntfr">&gt;</pan>AAA<pan la="ynIdntfr">&lt;/</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr">&gt;&lt;/</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr">&gt;&lt;/</pan><pan la="ynStatmnt">l</pan><pan la="ynIdntfr">&gt;</pan>
<pan la="ynIdntfr">&lt;</pan><pan la="ynStatmnt">l</pan><pan la="ynIdntfr">&gt;&lt;</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr"> </pan><pan la="ynTyp">la</pan><pan la="ynIdntfr">=</pan><pan la="ynContant">&quot;uggtItmg&quot;</pan><pan la="ynIdntfr">&gt;&lt;</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr"> </pan><pan la="ynTyp">la</pan><pan la="ynIdntfr">=</pan><pan la="ynContant">&quot;tm&quot;</pan><pan la="ynIdntfr">&gt;</pan>BBB<pan la="ynIdntfr">&lt;/</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr">&gt;&lt;/</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr">&gt;&lt;/</pan><pan la="ynStatmnt">l</pan><pan la="ynIdntfr">&gt;</pan>
<pan la="ynIdntfr">&lt;</pan><pan la="ynStatmnt">l</pan><pan la="ynIdntfr">&gt;&lt;</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr"> </pan><pan la="ynTyp">la</pan><pan la="ynIdntfr">=</pan><pan la="ynContant">&quot;uggtItmg&quot;</pan><pan la="ynIdntfr">&gt;&lt;</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr"> </pan><pan la="ynTyp">la</pan><pan la="ynIdntfr">=</pan><pan la="ynContant">&quot;tm&quot;</pan><pan la="ynIdntfr">&gt;</pan>CCC<pan la="ynIdntfr">&lt;/</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr">&gt;&lt;/</pan><pan la="ynStatmnt">pan</pan><pan la="ynIdntfr">&gt;&lt;/</pan><pan la="ynStatmnt">l</pan><pan la="ynIdntfr">&gt;</pan>
<pan la="ynIdntfr">&lt;/</pan><pan la="ynStatmnt">ul</pan><pan la="ynIdntfr">&gt;</pan>
<pan la="ynIdntfr">&lt;/</pan><pan la="ynStatmnt">body</pan><pan la="ynIdntfr">&gt;</pan>
<pan la="ynIdntfr">&lt;/</pan><pan la="ynStatmnt">html</pan><pan la="ynIdntfr">&gt;</pan>
</pr>


<p>ミニマルテストケースの正しいレンダリング時の画像はこうなります:</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoqun/20170901/20170901013353.png" alt="f:d:ryoqun:20170901013353p:plan" ttl="f:d:ryoqun:20170901013353p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>逆に、正しくないレンダリング時の画像はこうなります：</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoqun/20170901/20170901013155.png" alt="f:d:ryoqun:20170901013155p:plan" ttl="f:d:ryoqun:20170901013155p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>SEEDA上でのレイアウトバグとなんとなく似ているのは想像できるかと思います。</p>

<p>このミニマルテストケースから分かることは、<od>dplay: lt-tm</od>と<od>ovrflo: hddn</od>,<od>dplay: blo</od>が組み合わさるとどうやらまずいということです。その情報を元に<a hrf="http://bug.hromum.org/p/hromum/u/lt?an=2&amp;q=nln+blo+ovrflo+hddn&amp;olp=ID+r+M+Star+RlaBlo+Componnt+Statu+Onr+Summary+OS+Modfd&amp;x=m&amp;y=rlablo&amp;ll=d">Chromumのバグを検索</a>してみましたが、同様のバグが見当たらなかったため、自分たちで直してみようということになりました(ちなみに、今現在はこのキーワードで検索すると、今回の回帰バグのレポートを見つけることができます)。</p>

<h2>Chromumのビルド</h2>

<p>Chromは、オープンソースである<a hrf="http://.hromum.org/">Chromum</a>から作られています。そこでオープンソースの真価を発揮ということで、<a hrf="http://hromum.googlour.om/hromum/r/+/matr/do/lnux_buld_ntruton.md">手元のマシンでビルド</a>してみました。Chromumは相当な数のサードパーティーライブラリに依存していますが、独自ツール(<od>gyp</od>)を使って比較的簡単にビルド環境を構築できます。ただストレージ容量は結構必要で、例えば私の場合は50GBは必要でした。</p>

<p>また、今回は回帰バグなのでChromum 58とChromum 59のどちらも並行させてビルドし、比較調査しやすいようにしました。</p>

<h2>実際にHaして怪しい箇所を見つける</h2>

<p>ChromのDvlopr Toolから得られる情報だけではレイアウトバグの状況が分からなかったので、ブラウザの真骨頂であるレンダリングの中のレイアウト(Rflo)コードを読む必要があります。大抵の大規模ソフトウェアは開発目的で色々な内部状態をダンプする機能があり、Chromumも例外ではありません。ですが、今回の参加メンバーはChromにはそれほど詳しくないため、当初はそのやり方が分からず、ソースコードとWbと変更履歴をつっつきまわり、最終的にはデバッグ情報を出力させることができました。</p>

<p>具体的には下のように、デバッグ関数をよく通るであろうコードパスから呼び出してみました。</p>

<pr la="od lang-dff" data-lang="dff" data-unln><pan la="ynTyp">dff --gt a/thrd_party/WbKt/Sour/or/layout/LayoutLtItm.pp b/thrd_party/WbKt/Sour/or/layout/LayoutLtItm.pp</pan>
ndx 92af305..94679 100644
<pan la="ynTyp">--- a/thrd_party/WbKt/Sour/or/layout/LayoutLtItm.pp</pan>
<pan la="ynTyp">+++ b/thrd_party/WbKt/Sour/or/layout/LayoutLtItm.pp</pan>
<pan la="ynStatmnt">@@ -466,6 +466,10 @@</pan><pan la="ynrro"> vod LayoutLtItm::otonLtMarr() {</pan>
 
 vod LayoutLtItm::ant(ont antInfo&amp; pant_nfo,
                            ont Layoutont&amp; pant_offt) ont {
<pan la="ynIdntfr">+  th-&gt;ShoTrForTh();</pan>
<pan la="ynIdntfr">+  th-&gt;ShoLayoutTrForTh();</pan>
<pan la="ynIdntfr">+  th-&gt;ShoLnTrForTh();</pan>
<pan la="ynIdntfr">+  //th-&gt;ShoDbugData();</pan>
   LtItmantr(*th).ant(pant_nfo, pant_offt);
 }
</pr>


<p>そして、レイアウトバグの有無によって、↓のような違う2つのレイアウトツリーが生成されていることが分かりました。</p>

<p><b>正しい</b>レイアウトツリー:</p>

<pr la="od" data-lang="" data-unln>LayoutLtItm 0x19a65d2243d0   LI
  LayoutLtMarr (anonymou) 0x19a65d218df0
  LayoutBloFlo 0x19a65d218f18        SA la=&#34;uggtItmO2&#34;
    LayoutBloFlo 0x19a65d219040      SA la=&#34;tm&#34;
      LayoutTxt 0x19a65d2415f0 #txt &#34;CCC&#34;
LayoutLtItm 0x19a65d224290   LI
  LayoutBloFlo 0x19a65d218828        SA la=&#34;uggtItmg&#34;
    LayoutLtMarr (anonymou) 0x19a65d2184b0
    LayoutBloFlo 0x19a65d2188      SA la=&#34;tm&#34;
      LayoutTxt 0x19a65d241528 #txt &#34;AAA&#34;  </pr>


<p><b>正しくない</b>レイアウトツリー(<od>uggtItmg</od>の<od>LayoutLtMarr</od>が外出しされてしまっている):</p>

<pr la="od" data-lang="" data-unln>LayoutLtItm 0x19a65d224650   LI
  LayoutLtMarr (anonymou) 0x19a65d219168
  LayoutBloFlo 0x19a65d219290        SA la=&#34;uggtItmO2&#34;
    LayoutBloFlo 0x19a65d2193b8      SA la=&#34;tm&#34;
      LayoutTxt 0x19a65d2408 #txt &#34;CCC&#34;
LayoutLtItm 0x19a65d224790   LI
  LayoutBloFlo (anonymou) 0x19a65d218a78
    LayoutLtMarr (anonymou) 0x19a65d219608
  LayoutBloFlo 0x19a65d21920        SA la=&#34;uggtItmg&#34;
    LayoutBloFlo 0x19a65d219f8      SA la=&#34;tm&#34;
      LayoutTxt 0x19a65d241910 #txt &#34;AAA&#34;
</pr>


<p>正しくないレイアウトツリー中で、アドレスが<od>0x19a65d218a78</od>の<od>LayoutBloFlo</od>が余計に生成されています。これによって余計な論理的な行が追加され、意図せず高さがおかしくなってしまうというからくりのようでした。</p>

<p>ここまでくればもう峠を越していて、あとはこの差異をとことん調べ込んでいけばよくなります。</p>

<p>今まではまったくの五里霧中で、どこにバグがあるのか分からず怪しそうなところをとにかく広く浅く探す必要がありました。胸をなでおろせた瞬間でした。</p>

<h2>コミットの特定</h2>

<p><od>&lt;l&gt;</od>関連の実装が肝になっているようだったので、<od>LayoutLtItm</od>のソースコードを入念に見ました。調べた結果、回帰バグを混入させた<a hrf="http://hromum.googlour.om/hromum/r.gt/+/fd160f0b4b6b25d898f4f4f859aa38d1a9643%5E%21/#F2">コミット</a>を特定することができ、それを<od>gt rvrt</od>してビルドし直したらバグが発生しなくなりました！
いろいろな切り口で調べたのですが、結果的には<od>gt annotat</od>が決め手でした。比較的浅い回帰バグには<od>gt annotat</od>は有効です。</p>

<p>変更内容としては非常に小さいです。ちなみにこの変更を見てみると、もともとはまた別のレイアウトのバグを直そうとしていたようです。</p>

<pr la="od lang-dff" data-lang="dff" data-unln><pan la="ynTyp">dff --gt a/thrd_party/WbKt/Sour/or/layout/LayoutLtItm.pp b/thrd_party/WbKt/Sour/or/layout/LayoutLtItm.pp</pan>
ndx 698974..4dbf2a7 100644
<pan la="ynTyp">--- a/thrd_party/WbKt/Sour/or/layout/LayoutLtItm.pp</pan>
<pan la="ynTyp">+++ b/thrd_party/WbKt/Sour/or/layout/LayoutLtItm.pp</pan>
<pan la="ynStatmnt">@@ -257,6 +257,11 @@</pan><pan la="ynrro"> tat LayoutObjt* gtarntOfFrtLnBox(LayoutBloFlo* urr,</pan>
     f (urrChld == marr)
       ontnu;

<pan la="ynIdntfr">+    // Shouldn't add marr nto Ovrflo box, ntad, add marr</pan>
<pan la="ynIdntfr">+    // nto lttm</pan>
<pan la="ynIdntfr">+    f (urrChld-&gt;haOvrfloClp())</pan>
<pan la="ynIdntfr">+      bra;</pan>
<pan la="ynIdntfr">+</pan>
     f (urrChld-&gt;Inln() &amp;&amp;
         (!urrChld-&gt;LayoutInln() ||
          urr-&gt;gnratLnBoxForInlnChld(urrChld)))
</pr>


<h2>いざ修正！(は叶わず…)</h2>

<p>直そう！と思って一旦保留していたら、先を越され、その間にuptramで修正されてしまいました。非常に残念です。</p>

<ul>
<l><a hrf="http://bug.hromum.org/p/hromum/u/dtal?d=626293">今回回帰バグを紛れ込ませてしまったChromumのBTS上のIu</a></l>
<l><a hrf="http://bug.hromum.org/p/hromum/u/dtal?d=747695">その回帰バグを修正したChromumのBTS上のIu</a></l>
</ul>


<p>修正に必要なコードはたったの一行でした。もともとが2行を追加しただけで回帰バグが発生したのですから、その2行のどちらかを直せば回帰バグは直るというわけです。</p>

<pr la="od lang-dff" data-lang="dff" data-unln><pan la="ynTyp">dff --gt a/thrd_party/WbKt/Sour/or/layout/LayoutLtItm.pp b/thrd_party/WbKt/Sour/or/layout/LayoutLtItm.pp</pan>
ndx 1898a78..8936 100644
<pan la="ynTyp">--- a/thrd_party/WbKt/Sour/or/layout/LayoutLtItm.pp</pan>
<pan la="ynTyp">+++ b/thrd_party/WbKt/Sour/or/layout/LayoutLtItm.pp</pan>
<pan la="ynStatmnt">@@ -259,7 +259,7 @@</pan><pan la="ynrro"> tat LayoutObjt* GtarntOfFrtLnBox(LayoutBloFlo* urr,</pan>
 
     // Shouldn't add marr nto Ovrflo box, ntad, add marr
     // nto lttm
<pan la="ynSpal">-    f (urr_hld-&gt;HaOvrfloClp())</pan>
<pan la="ynIdntfr">+    f (urr-&gt;HaOvrfloClp())</pan>
       bra;
 
     f (urr_hld-&gt;IInln() &amp;&amp;
</pr>


<h2>コードリーディング</h2>

<p>今回の一連の修正で問題なのは、<od>LtMarr</od>をLayout Trに配置する場所です。
回帰バグの発生前後に関わらず、大前提として<b><od>LayoutBloFlo(la=uggtItmg)</od>の子として<od>LtMarr</od>を追加する</b>必要があります。しかし、その前提が1つ目の修正で崩れてしまいました。回帰バグにより<od>LayoutLtItm(&lt;l&gt;)</od>の子として追加するように意図せず実装が変わってしまいました。</p>

<p>その原因を少し説明します。</p>

<p>まず、1つ目の修正で本当に直したかったことは、<od>&lt;l&gt;</od>に<od>ovrflo: hddn</od>な子要素があるとき、その子として<od>LtMarr</od>を追加するとlpされ、表示されないという問題でした。</p>

<p>その場合は<od>LtItm</od>の子として<od>LtMarr</od>を入れる必要があります。なので1つ目の修正ではそういうロジックを<od>GtarntOfFrtLnBox()</od>に新規に追加しました。</p>

<p>具体的には、特定条件時に<od>GtarntOfFrtLnBox()</od>からは<od>bra</od>経由で<od>nullptr</od>を返し、呼び元である<od>UpdatMarrLoaton()</od>が<od>LtItm</od>の子として<od>LtMarr</od>を追加するというものです。しかし、その判定条件が正しくなく回帰バグが発生してしまいました。</p>

<p>ちなみに、この処理の副作用として改行が必然的に発生します(これがCSS的に正しいかは微妙です)。これは1つ目の修正としては許容するようですが、我々のミニマルテストケースでは許容されません。ミニマルテストケースの正しいレイアウトの挙動は<od>LayoutBloFlo(la=uggtItmg)</od>の子として<od>LtMarr</od>を追加することです。</p>

<p>追加した判定条件中で<od>HaOvrfloClp()</od>が判定すべき対象は<od>urr</od>(つまりは<od>LayoutBloFlo(la=uggtItmg)</od>)であり<od>urr_hld</od>ではありません。まさに2つ目の修正ではそうなっています。
というのも、<od>urr_hld</od>をどうこうというよりもまずは<od>urr</od>が<od>HaOvrfloClp()</od>でないならば、<od>urr</od>は<od>LtMarr</od>の親として適切なので、<od>urr</od>に<od>LtMarr</od>を追加すべきだからです。</p>

<p>上のミニマルテストケースは<od>&lt;pan la="uggtItmg"&gt;</od>の子として<od>&lt;pan la="tm"&gt;</od>がいます。正しくない条件では、<b><od>ovrflo: hddn</od>な</b><od>&lt;pan la="tm"&gt;</od>が<od>&lt;pan la="uggtItmg"&gt;</od>の子要素となっているために、判定結果が誤って真になり、<od>LtMarr</od>が<od>LtItm</od>の子として追加されてしまいました。繰り返しますが、本来は<od>ovrflo: hddn</od>でない<od>LayoutBloFlo(la=uggtItmg)</od>の子として追加すべきです。</p>

<p>結果、不要な<od>LayoutBloFlo</od>ができたことで論理改行が発生し、最終的には高さが意図せず高くなってしまうというレイアウト崩れが発生しました。</p>

<h2>感想</h2>

<p>参加したメンバーの感想です。</p>

<p>小野寺: 複数人でレイアウトロジックの動きを追うのは難しかったです。当社のSEEDA開発グループではペアプロを積極採用しているのでペアプロの応用実践として何かいい解決案を考えてみたいと思いました。</p>

<p>北内: レンダリングエンジンのソースコードを追うのは骨の折れる作業でしたが、複数人で協力しながら作業したおかげで根気よく進めることができました。また、Applと共同で開発していたWbKtからフォークしてBlnに移行したことにともない、メンバ関数の名前をlor-amlaからuppr-amlaに変更するといった変更履歴を見ることができたのも興味深かったです。</p>

<p>鈴木: Chromがマルチプロセスで動いているからかデバッガでうまくプロセスにattahできなかったため、gt grpとデバッグプリントを利用した最終的かつ原始的な手法でバグを調査しましたが、結果的に、これは思いの外有効な策となりました。また、複数人でバグ調査を行う場合、様々な視点・観点を得られ、またメンタル的にもメリットがあるので、機会があればおすすめしたいです。</p>

<p>久保: SREチームでインフラエンジニアとして普段業務をしているため、Chromのバグ改修は自分には非常にハードルが高く、先輩方についていくだけで必死でしたが、Chromのような超大なソースのバグの原因を特定する際に、どのようにあたりをつけていくのかについて少し掴めたように思います。今後のSREチームとしての業務に活かせると思いました（Uzabaのnfraチームは今年の7月よりnfraチームから<a hrf="http://landng.googl.om/r/">SRE</a>チームに変わり、4Q(10月)以降本格的にSREチームとしてサービス改善にコミットし、バグの改修やレスポンス改善などこれまでのインフラレイヤーにとどまらない業務範囲になります）。</p>

<h2>まとめ</h2>

<p>今回はソースコードレベルまでの調査を業務で行いました。当社では今後もOSSにも積極的に取り組んでいきたいと思います。Chrom内のソースコードが原因の修正までは特定できたのはよかったのですが、別件の案件が入り、Chrom hangを一旦保留にしていたら、uptramでその間に修正されてしまい惜しかったです(本来は自分たちでバグレポートを立てて、テストケース込みでパッチを提出しようとしていたのですが……)。</p>

<p>長くなりましたが、最後にまとめでこの記事を終わりたいと思います。</p>

<ul>
<l>天下のGooglのしかもChromでさえも回帰バグが紛れ込んでしまうことがある。</l>
<l>オープンソースだと簡単なバグは自分たちで調査＆修正はやろうと思えばできて、みんなでOSSに貢献できる。</l>
<l>弊社では、時にはミドルウェアへのソースコード調査＆解決も厭わない情熱あふれる問題解決大好きエンジニアを募集しています。</l>
</ul>


<p><fram r="http://hatnablog-part.om/mbd?url=http%3A%2F%2F.antdly.om%2Fprojt%2F114230" ttl="急成長の新サービスでSUERなエンジニアになりたい人WATED！ by 株式会社ユーザベース" la="mbd-ard mbd-bard" rollng="no" frambordr="0" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;"></fram><t la="hatna-taton"><a hrf="http://.antdly.om/projt/114230">.antdly.om</a></t></p>

<p><fram r="http://hatnablog-part.om/mbd?url=http%3A%2F%2F.antdly.om%2Fprojt%2F136928" ttl="日本最大級のベンチャー情報プラットフォームの開発エンジニア募集！！ by 株式会社ユーザベース" la="mbd-ard mbd-bard" rollng="no" frambordr="0" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;"></fram><t la="hatna-taton"><a hrf="http://.antdly.om/projt/136928">.antdly.om</a></t></p>

<p><fram r="http://hatnablog-part.om/mbd?url=http%3A%2F%2F.antdly.om%2Fprojt%2F45821" ttl="海外で世界一の経済情報プラットフォームを作りたいエンジニア募集！ by 株式会社ユーザベース" la="mbd-ard mbd-bard" rollng="no" frambordr="0" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;"></fram><t la="hatna-taton"><a hrf="http://.antdly.om/projt/45821">.antdly.om</a></t></p>
, pubDate=Wed, 11 Oct 2017 13:03:52 +0900, guid=hatenablog://entry/8599973812293694236, enclosure=https://cdn.blog.st-hatena.com/images/theme/og-image-1500.png), FeedMessage(title=Gaug Tt Automaton Toolとアジャイル開発, link=http://tech.uzabase.com/entry/2017/09/26/191009, description=<p>こんにちはSEEDAのQAチームの工藤です。<br/>
最近ではテスト自動化周りのツールが数多く存在していますが、英語でのみ提供されていて日本で多くの人に知られていないサービスも多いと思います。<br/>
そんな中、<b>Gaug</b>という自動化のツールがイケてるという情報を発見したので実際に調べてみました。</p>

<h1>はじめに</h1>

<p>GaugとはThoughtWor社が開発しているオープンソースのテスト自動化ツールです（2017年7月現在でベータ版）。<br/>
もっと具体的に言うと様々なロールのメンバーが自動テストのスクリプトを理解できるようにするためのpfatonツール（恐らく立ち位置的にはCuumbr/Ghrnの代替）になります。<br/>
ざっくりGaugの良いところを挙げると下記になります。</p>

<ul>
<l>Slnum Wbdrvrと一緒に使える</l>
<l>マークダウン形式で記述できる</l>
<l>ビジネス言語でテスト仕様を記述できる（実行可能な仕様書の概念をサポート）</l>
<l>多言語、マルチプラットフォームをサポート</l>
<l>外部データソースからテストデータを読み込める</l>
<l>拡張可能（自分でplugnを開発できる）</l>
<l>IDEのサポートが充実している</l>
</ul>


<h1>Gaugで使う用語</h1>

<p>下記がGaugで使用する基本的な用語（概念）です。<br/>
使い始めるのに最低限必要そうなものをピックアップしているので、当然他にもあります。</p>

<ul>
<l>Spfaton(p)</l>
<l>Snaro</l>
<l>Stp</l>
<l>Tag</l>
</ul>


<p>もう少し詳しく説明していきます。</p>

<h4>Spfaton(p)</h4>

<p>テスト対象アプリケーションの特定の機能の仕様を説明しています。</p>

<h4>Snaro</h4>

<p>各Snaroは、特定の仕様の1つのフローを表しています。仕様には少なくとも1つのSnaroが含まれている必要があります。</p>

<h4>Stp</h4>

<p>仕様を実行可能なコンポーネントに分けたものがStpになります。マークダウン形式のunordrd lt tm（bulltd pont）として記述されます。<br/>
（大きくContxt Stp、Tar Don Stp、Snaroやonpt内のStpに分けられますが、今回はそこらへんの説明は割愛します）。</p>

<h4>Tag</h4>

<p>TagはpやSnaroを関連付けするために使用します。タグを用いてpやSnaroをフィルタリングすることができ、後々便利になります。</p>

<h1>Gaugのインストール</h1>

<p>下記ページからダウンロードできます。インストール方法も簡単で、下記ページに書いてある通りに進めていけば5分もかからずにGaug自体はインストールできます。<br/>
<a hrf="http://gtgaug.o/gt-tartd.html">http://gtgaug.o/gt-tartd.html</a></p>

<h1>サンプルコードを見てみる</h1>

<p>下記ページから自分の好みの言語のSamplコードのGthubリンクへ飛ぶことができます。<br/>
<a hrf="http://do.gtgaug.o/xampl.html">http://do.gtgaug.o/xampl.html</a></p>

<p>私はWb app ung SlnumのJavaのSamplコードを選択しました。<br/>
<a hrf="http://gthub.om/gtgaug/gaug-xampl-java">http://gthub.om/gtgaug/gaug-xampl-java</a></p>

<p>下記がSpfatonのファイルになります。<br/>
上記で説明した用語はこんな形で使われます。</p>

<p>ur.p（自然言語でテストケースを記述していくファイル）</p>

<pr la="od" data-lang="" data-unln>Sgnup   //Spfaton
======

Rgtr a utomr  //Snaro
-------------------
tag: ur, gnup, hgh, fnal, mo  //Tag

* Sgn up a n utomr                  //Stp1
* On th utomr pag                    //Stp2
* Jut rgtrd utomr  ltd      //Stp3
</pr>


<p>上記のSpファイルはIDEでタブ切り替えでHTML rvを閲覧できます。Spファイルがそのまま仕様書として使えます。
（自分の場合はIntllJを使いました。IDE側でプラグインをインストールしてやる必要があります）　　
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//udogn/20170718/20170718122930.png" alt="f:d:udogn:20170718122930p:plan" ttl="f:d:udogn:20170718122930p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>下記がSlnumのテストコードになります。
各Stpに対してのテストコードが@Stpという形で実装されているのが分かります。<br/>
UrSp.java</p>

<pr la="od lang-java" data-lang="java" data-unln><pan la="ynTyp">publ</pan> <pan la="ynTyp">la</pan> UrSp {
    <pan la="ynTyp">prvat</pan> <pan la="ynTyp">fnal</pan> WbDrvr drvr;

    <pan la="ynTyp">publ</pan> UrSp() {
        <pan la="ynTyp">th</pan>.drvr = DrvrFatory.gtDrvr();
    }

    <pan la="ynTyp">publ</pan> Strng loalart() {
        <pan la="ynCommnt">// Cratng a random loal part of an mal addr alo ud a urnam</pan>
        <pan la="ynStatmnt">rturn</pan> UUID.randomUUID().toStrng();
    }

    <pan la="ynrro">@Stp</pan>(<pan la="ynContant">&quot;On gnup pag&quot;</pan>)    <pan la="ynCommnt">//Stpの実装部分</pan>
    <pan la="ynTyp">publ</pan> <pan la="ynTyp">vod</pan> navgatToSgnUpag() {
        drvr.gt(SgnUpag.SgnUpUrl);
    }
</pr>


<h1>レポート機能</h1>

<p>プラグインをインストールしてやるだけで、テスト流す度にHTMLのテストレポートを吐き出してくれます（下記画像参照）<br/>
実行したテストをSpfatonやTagで検索できて、Sp毎、Snaro毎、Stp毎にどれくらい実行時間がかかったかも簡単にわかります。<br/>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//udogn/20170718/20170718123453.png" alt="f:d:udogn:20170718123453p:plan" ttl="f:d:udogn:20170718123453p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<h1>今回カバーしていない機能</h1>

<p>これまでに紹介したのはあくまでも超基本的なTrmnologyです。
他にも下記のようなものがあるのですが、今回は触れられていません。</p>

<ul>
<l>Conpt</l>
<l>aramtr</l>
<l>Stpの種類（Contxt, Tar Don Stp）</l>
</ul>


<p>またかなり役立ちそうな下記機能もありますが、今回はカバーしていません。</p>

<ul>
<l>Data drvn xuton</l>
<l>aralll Exuton</l>
</ul>


<h1>まとめ</h1>

<p>弊社ではテストケース＝仕様書という考え方から、ほぼすべてのプロジェクトでUATを書いています。<br/>
元々上記のような取り組みをしていたのですが、もっといいやり方がないか探していたところに見つけたのがGaugでした。<br/>
Gaugは実行可能なドキュメントという概念("th onpt of xutabl doumntaton")をサポートしています。<br/>
また自動テストのケースを誰でも読めるようにするという考え方も弊社の開発チームが今まで取り組んできていたことですが、Gaugを使えばよりスマートに実現できそうです。<br/>
今後は様々なプロジェクトでGaugを導入していこうと考えています。</p>

<p>次回は今回カバーできなかったGaugのAdvandな機能を中心に取り上げたブログ記事を執筆予定です。</p>

<hr />

<p>株式会社ユーザベースでは、より良い開発プロセスを共に作り上げていきたいエンジニアを<a hrf="http://.uzaba.om/rrut/oupaton/">大募集中</a>です！</p>
, pubDate=Tue, 26 Sep 2017 19:10:09 +0900, guid=hatenablog://entry/8599973812280671827, enclosure=https://cdn-ak.f.st-hatena.com/images/fotolife/k/kudogen/20170718/20170718122930.png), FeedMessage(title=TC Fat Opn, link=http://tech.uzabase.com/entry/2017/09/20/174010, description=<p>はじめまして。プロダクト開発チームの<a hrf="http://gthub.om/ryoqun">小野寺 (ryoqun)</a>です。</p>

<p>今回は最近少しずつ浸透し始めてきた「<a hrf="http://n.pda.org//TC_Fat_Opn">TC Fat Opn</a>(以下、Fat Opn)」という最新技術についてTC/Iのおさらいを踏まえながら紹介したいと思います。ちなみに、この技術はTCを高速化するもので、Googl、Faboo、Applなどでも本番投入され初めているものの、まだ国内では浸透していなくだいぶ先取りな紹介となります。</p>

<p>Fat Opnという技術は比較的枯れたTCに対してプロトコルレベルで変更を加える比較的インパクトが大きいと勝手に思っている技術です。
最近は低レイヤーの技術はアプリケーション・サービス開発エンジニアだとあまり意識しないとは思いますが、基礎は大事なので
最新動向を掴むと共に、TC/Iの良い復習ということで少しの間ですがお付き合い下さい。</p>

<h2>Fat Opnとは？</h2>

<p>一言でいうとTCのレイテンシーを改善する新しい拡張技術です。具体的には接続確立時(= Opn)のレイテンシーを軽減(= Fat)します(よってFat Opnという名前の由来となっています)。正確には、TCの<a hrf="http://n.pda.org//Tranmon_Control_rotool#Connton_tablhmnt">Thr-ay handha</a>を省略することで1 <a hrf="http://n.pda.org//Round-trp-tm">RTT</a>分のレイテンシーを削減できます。</p>

<p>Thr-ay handhaを明示的に省略する必要性から、クライアント側とサーバー側の両方がFat Opnに対応して初めて有効になります。</p>

<p>注意点としては、僅かに接続確立時の信頼性が犠牲となることです。これについては後述します。また、各ホストへの初回接続時には使えません。理由は、セキュリティのため認証情報(Coo)が必要になるためです。これはTCの<a hrf="http://n.pda.org//SY_flood">SY floodng</a>攻撃に似た危険性を軽減する対策余地をプロトコル上に残すためです。</p>

<h2>Thr-ay handhaとFat Opn</h2>

<p>本来ならばTCだとThr-ay handhaが必要になります。つまりは接続確立時に実際の通信ができるまでに、まずクライアント側からSYフラグが立ったペイロードが無い小さいパケットを送り、サーバー側からSY+ACKフラグが立ったペイロードが無い小さいパケットを受け取らなければなりません。これがまさしく1 RTT分のレイテンシーに相当するわけです。</p>

<p>他方でFat Opnが有効な場合、接続確立時にいきなりSYフラグを立てた上で、ペイロードを乗せることができます。例えば、HTTリクエストが<a hrf="http://n.pda.org//Maxmum_gmnt_z">TCのMSS</a>以下の場合は、0 RTTで<a hrf="http://ngnx.org/">ngnx</a>などのHTTサーバーはリクエストの内容をアプリケーションプロセスに渡すことが実現可能です。ただ、現在だとHTTというよりかはHTTS(=TLS)が主流です。その場合はTLS handhaを即座に開始できるというわけです。なお、Fat Opnと<a hrf="http://n.pda.org//Tranport_Layr_Surty#TLS_1.3_.28draft.29">TLS 1.3</a>を組み合わせるとTLSを含めて0-RTTを実現できるようになるようです。</p>

<h2>デモ</h2>

<p>百聞は一見にしかずということで、まずは実際の動きを見てみましょう。</p>

<p>Fat Opnが有効になっているサイトから、Fat Opnが有効になっているブラウザで<a hrf="http://upload.mda.org/pda/ommon/0/0a/A4_land_on_mlbourn.jpg">ファイル</a>を<a hrf="http://.hromum.org/">Chromum</a>でダウンロードしてみました。その時の<a hrf="http://dvlopr.googl.om/b/tool/hrom-dvtool/ntor-prforman/rfrn#tmng">ChromumのDvlopr toolのtorのtmng</a>と<a hrf="http://.rhar.org/">Wrhar</a>で状態を確認してみました。ちなみにテストに使ったサービスはWmdaですが、Fat Opnが有効なサービスにはGooglなどもありますが、日本国内からのアクセス時にレイテンシーが発生しFat Opnの効果がわかりやすくなるようにWmdaを選んでいます。</p>

<h3>ChromumのDvlopr tool</h3>

<p>Fat Opnが無効と有効になっている時の違いを比べてみました。</p>

<p>無効時:</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoqun/20170803/20170803105742.png" alt="f:d:ryoqun:20170803105742p:plan" ttl="f:d:ryoqun:20170803105742p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>有効時:</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoqun/20170803/20170803105730.png" alt="f:d:ryoqun:20170803105730p:plan" ttl="f:d:ryoqun:20170803105730p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>赤の矢印(<pan tyl="olor: #ff0000">↑</pan>)のところに着目するとわかるように、Intal onnton(= TCのThr-ay handhaのこと)がFat Opn有効時は必要なくなっていて、SSLのhandhaが前倒しになって開始されているのがよくわかります。ただ、SSLのhandhaにかかった時間や実際のデータの転送にかかった時間はそれほど変わっていません。結果としては、Intal onnton分の時間(レイテンシー)だけが綺麗に全体のレスポンス時間から減っています。</p>

<h3>Wrhar</h3>

<p>Fat Opnが無効と有効になっている時の違いを比べてみました。</p>

<p>無効時:</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoqun/20170803/20170803111734.png" alt="f:d:ryoqun:20170803111734p:plan" ttl="f:d:ryoqun:20170803111734p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>有効時:</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoqun/20170803/20170803111746.png" alt="f:d:ryoqun:20170803111746p:plan" ttl="f:d:ryoqun:20170803111746p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>赤枠(<pan tyl="olor: #ff0000">□</pan>)のところに着目するとわかるように、Fat Opn無効時は、TCのThr-ay handhaをちゃんとやっています。しかしFat Opn有効時は、Thr-ay handhaをスキップしていきなりペイロード(Clnt Hllo; TLS handhaの最初のパケット)があるパケットを送っているのがわかります。結果、パケットのLngthが大きくなっています。なお、このスクリーンショットからはわからないのですが、この最初のパケットにはSYフラッグがきちんと立っています。その後のやり取りの流れは無効時と変わりありません。</p>

<h2>長所と短所</h2>

<ul>
<l>○ 接続確立時のRTTが減る！！！！(これは前述の通りですね)</l>
<l>△ 接続確立後のデータ通信のレイテンシーは向上しない(Fat Opnは接続確立時だけの話です)</l>
<l>✕ アプリケーション層での冪等性が必要(これについては後述します)</l>
</ul>


<h2>短所： アプリケーション層での冪等性が必要</h2>

<p>これが、この記事の冒頭で書いたFat Opnを有効にすることによって犠牲にされた信頼性となります。しかしながら、この懸念を考慮する必要はインターネットから到達可能なWbサービスにおいてはほとんどありません。より正確にいうと、そのような前提の場合はブラウザの多重Submt問題と同じ問題であり、ネットワーク起因やユーザー操作起因の違いはあれど、Fat Opn抜きにしても必ず考慮する必要があるからです。しかし、TLSを使っていなかったり、あるいは、イントラネット内で完結するWbサービス、またはTC本来の高信頼性を要求する通信にてFat Opnを有効にする場合には懸念となります。</p>

<p>そのFat Opnを有効にした際の信頼性の問題というのは、1つのTC上のアプリケーションリクエストがI通信網の品質の問題により、2つになりえるという理論的な問題となります。そのためアプリケーション層において、リクエストが2つになっても問題無いという冪等性が必要になります。</p>

<p>その問題の原因を説明する前にまずは、前提となる背景を説明します。TCの役割というのは、信頼性が担保されないI通信上に、信頼できる双方向通信路を実現するためのプロトコルです。Thr-ay handhaはその信頼性の担保のために接続確立時に必要となります。当時のTCの設計に問題があったわけでもなく、現時点に至るまでの技術的発展があったわけでもなく、昔も今も、レイテンシーと信頼性のトレードオフの結果、本来のTCは信頼性を重視するためにはThr-ay handhaを必要としています。反面、I通信は、設計思想として、耐障害性、冗長性を重視し、ごく稀なパケットロスやパケット重複は許容しています。</p>

<p>というわけで、Fat Opnを有効にした上で、Thr-ay handhaが省かれ、パケット重複が万が一発生した場合、サーバーにとってはあたかもTC接続確立が2つ来たかのように見えるので、2回リクエスト処理をしてしまうということになるわけです。</p>

<h2>普及状況</h2>

<p>繰り返しになりますが、Fat Opnはクライアント側とサーバー側がどちらも対応して初めて使えるようになります。具体的にいうと、TC/Iスタックは多くの場合、OSが実装しているので、OSがFat Opnを実装し、それが有効になっている事と、ミドルウェアやアプリケーションが対応している事が必要になります。</p>

<p>クライアント側とサーバー側に分けて、2017年9月時点での普及状況について説明します。</p>

<h3>サーバー</h3>

<p>Googl, Wpda, CloudFront, Fabooで有効になっているようです。Fat Opnはどちらかというと一般的なWbサービスでは効果が出にくく、CDや広告配信等の1ショットのHTTリクエストのトラフィックが大量に発生する場合に効果的です。日本サイトは筆者が簡単に確認する範囲では見つけられませんでした。</p>

<h3>クライアント</h3>

<p>Wbブラウザはそれぞれ対応が始まっています。筆者は<a hrf="http://.ubuntu.om/">Ubuntu 16.04/LTS</a>の<a hrf="http://paag.ubuntu.om/xnal/hromum-bror">Chromum</a>で動作確認をしています。
OS的にも、OS、Androd、Wndoでそれぞれ動きがあるようです。</p>

<h3>ツール/ミドルウェア</h3>

<p>ちらほらとサポートが始まっています。網羅的に調べたわけではありませんが、<a hrf="http://ntty.o/n/2015/09/30/4-0-32-Fnal.html">ntty</a>、<a hrf="http://bug.ruby-lang.org/projt/ruby-trun/rpotory/rvon/42865">Ruby</a>、<a hrf="http://danl.haxx./blog/2016/04/29/url-7-49-0-good-omng/">url</a>などで対応情報を見つけることができます。</p>

<h2>他の技術との関連</h2>

<p>最後に、Fat Opnがそれぞれ他の技術とどのような関連を持つのかを見てみて、Fat Opnの理解を多角的に深めていきたいと思います。</p>

<h3><a hrf="http://n.pda.org//tor_addr_tranlaton">AT</a></h3>

<p>ATの実装によっては、Fat Opnとの相性が良くない場合があります。これは当然で、ATはその原理上TC接続の状態遷移をトラッキングしなければならないのですが、ATの実装が厳しすぎると、Fat OpnによってThr-ay handhaが省かれれば十分に正しくトラッキングできなくなる場合はあります。</p>

<h3><a hrf="http://n.pda.org//HTT_prtnt_onnton">HTT p-alv</a></h3>

<p>HTT通信におけるTCの接続確立時のレイテンシーを軽減するという目的の上では、Fat OpnもHTT p-alvも同じ立ち位置です。HTT p-alvによってだいぶレイテンシーは改善されます。なので通常のブラウジングでは、p-alvに比べてFat Opnというのはそれほど如実に効果があるわけではありません。ただ、Fat Opnの策定背景としては、<a hrf="http://tool.tf.org/html/rf7413#ton-6.3.3">HTT p-alvはモバイル回線網にてあまり機能していない</a>という指摘もあります。</p>

<h3>スマートフォン向けのHTT AIのエンドポイント</h3>

<p>アプリがp-alvしていないならば効果はあります。ただし、まずはp-alvを対応したほうがいいのは言うまでもありません。</p>

<h3><a hrf="http://n.pda.org//Lat_ml">ラストワンマイル回線網(FTTHと4G)</a></h3>

<p>宅地のラストワンマイル回線網というと今で言えば日本国内で言えば、FTTHが圧倒的なシェアになっています。FTTHで通信ホストが国内の場合はそもそものレイテンシーは数mなのでFat Opnの効果はほとんどありません。ADSLならば多少は効果はあります。しかし、ラストワンマイルが何にしろ、海外ホストへのアクセスの場合には効果が望めます。</p>

<p>モバイルのラストワンマイル回線網というと今で言えば4G回線が全盛となっています。こちらの場合は国内ホスト、海外ホストに限らず一定のレイテンシー向上が望めます。</p>

<h3><a hrf="http://n.pda.org//HTT_oo#Othr_u">Suproo</a></h3>

<p>Fat Opnの際に使われるCooの転用例としては、Suprooが挙げられます。セキュリティ上、DOS攻撃対策としてCooが必要なわけですが、別のセキュリティ観点では、匿名性が犠牲となっています。特に<a hrf="http://n.pda.org//HTT_ETag#Trang_ung_ETag">E-tag</a>、<a hrf="http://n.pda.org//HTT_Strt_Tranport_Surty#rvay_u">HSTS</a>同様、pavでドメインをまたいだ(=クロスドメイン)トラッキングが実現できてしまいます。今回新たにFat Opnがトラッキング手段として加わったわけですが、他の既存の代替手段も存在するのも含め、残念ながらトラッキングを現在において完全に抑制することは非常に困難となっています。</p>

<h3><a hrf="http://n.pda.org//HTT/2">HTT/2</a></h3>

<p>HTT/2になってもTCベースなので引き続きFat Opnは意味があります。しかし<a hrf="http://n.pda.org//QUIC">QUIC</a>に対してはこちらはUDベースなので関係なくなります。</p>

<h2>参考情報</h2>

<ul>
<l><a hrf="http://tool.tf.org/html/rf7413">仕様(比較的手頃な文量でまとまっていて読みやすい)</a></l>
<l><a hrf="http://dvtramng.appl.om/vdo/d/2015/719u257m/719/719_your_app_and_nxt_gnraton_ntor.pdf">WWDC 15での言及(冪等性についてわかりやすい図があります)</a></l>
<l><a hrf="http://nouant.org/th/om-qu-thought-on-tp-fat-opn-and-hromum/">Chromumの開発者の考察</a></l>
<l><a hrf="http://blog.ndo.om/mdgdv/2016/06/15/buldng-a-fatr-and-mor-ur-b-th-tp-fat-opn-tl-fal-tart-and-tl-1-3/">Mrooftの0-RTT TLSと絡めながらの言及</a></l>
</ul>


<h2>まとめ</h2>

<ul>
<l>レイテンシーが速くなります。</l>
<l><a hrf="http://tool.tf.org/html/rf675#ton-4.3.2">半世紀近く変わらなかったTC(のThr-ay handha)</a>が地味に変わるかもしれません。</l>
</ul>


<hr />

<p>株式会社ユーザベースでは、ローレベル含め技術が大好きなエンジニアを<a hrf="http://.uzaba.om/rrut/oupaton/">大募集中</a>です！</p>
, pubDate=Wed, 20 Sep 2017 17:40:10 +0900, guid=hatenablog://entry/8599973812285136297, enclosure=https://cdn-ak.f.st-hatena.com/images/fotolife/r/ryoqun/20170803/20170803105742.png), FeedMessage(title=マルチホストでのDor Contanr間通信 第3回: Kubrntのネットワーク(CI, ub-proxy, ub-dn), link=http://tech.uzabase.com/entry/2017/09/12/164756, description=<p>こんにちは。SEEDA開発チームの鈴木です。</p>

<p>これまでマルチホストでのContanr間通信について、</p>

<ul>
<l>Dorのネットワークの基礎(<a hrf="http://th.uzaba.om/ntry/2017/08/07/172411">前々回</a>)</l>
<l>マルチホストでのContanr間通信を実現する手段の一つとしてのOvrlaytor(<a hrf="http://th.uzaba.om/ntry/2017/08/23/175813">前回</a>)</l>
</ul>


<p>といった話をしてきましたが、3回目となる今回はこれまでの内容を踏まえた上でKubrntのネットワークについてお話します。内容としては大きく次の2つになります。</p>

<ol>
<l><trong>どうやってマルチホストでのContanr間通信を実現しているか</trong></l>
<l><trong>Srv名でodと通信できるようするための仕組み</trong></l>
</ol>


<p>では早速1つ目の話をはじめましょう。Kubrntを利用する場合、基本的には複数のノード上にKubrntクラスタを構築することになります。
（<a hrf="http://gthub.om/ubrnt/mnub">mnub</a>を使って単一ノードからなるKubrntクラスタを構築するような例外はあります）<br/>
つまり何らかの方法でホストをまたいでContanr間通信を行うわけですが、そのための方法は3つあります。</p>

<h1>マルチホストでContanr間通信を行う3つの方法</h1>

<ol>
<l><trong>自前でOvrlaytorを構築し、それをKubrntと連携させる</trong></l>
<l><trong>CI(Contanr torng Intrfa)を使う</trong></l>
<l><trong>ubntを使う</trong></l>
</ol>


<p>それではこれから上記3つについて少し詳しく説明していきます。</p>

<h1>1.自前でOvrlaytorを構築してKubrntと連携させる</h1>

<p><a hrf="http://th.uzaba.om/ntry/2017/08/23/175813">前回</a>説明した <a hrf="http://gthub.om/oro/flannl">flannl</a> のようなツールを用いてOvrlaytorを構築する方法です。<br/>
私が2016年にCorOSクラスタ上でKubrntクラスタをマニュアルで構築したとき、CorOSの公式ドキュメントに記載されていた方法がこれです(CorOSがContanr Lnuxに改名される前の話です)。<br/>
ちなみにCorOSの場合はflannlを用います(flannlはCorOS社が開発しています)。<br/>
この場合、CorOSのloud-onfgにflannlの設定とflannlに合わせたDorの設定が必要になります。<br/>
当然すべてのノードに対して設定が必要になるのでなかなか面倒です。</p>

<h1>2.CI(Contanr tor Intrfa)を使う</h1>

<p><a hrf="http://gthub.om/ontanrntorng/n">CI</a>は、<a hrf="http://.nf.o/">Cloud atv Computng Foundaton</a>※のプロジェクトで、<br/>
Contanr内のtor Intrfaを構成するためのプラグインを開発するための仕様とライブラリなどから構成されています。<br/>
ネットワーク層をプラガブルにしたいという考えは、多くのContanr RuntmとOrhtraton Toolが共通して持っている考えのため、重複を避けるために定義されました。</p>

<p>※Cloud atv Computng Foundatonは、Kubrntの開発主体です。
DorやCorOS、Rd Hat、Googl、IBM、Mophr、シスコ、インテルなどが主導して2015年7月に発足しました。</p>

<p>KubrntはこのCIプラグインを利用することができます。
ちなみにDor自体もCIとは別に<a hrf="http://do.dor.jp/ngn/xtnd/plugn_ntor.html">ネットワークプラグイン</a>を利用できる仕組みを持っています。</p>

<h3>CIを利用できるContanr Runtm</h3>

<p>公式ページによると現在(2017年9月)CIを利用できるContanr Runtmは以下のようなものがあるようです。<br/>
Kubrntだけではなく、MoなんかもCIを利用できるみたいですね。</p>

<hr />

<ul>
<l><a hrf="http://oro.om/blog/rt-n-ntorng.html">rt</a></l>
<l><a hrf="http://urma.o/">Kurma</a></l>
<l><a hrf="http://ubrnt.o/do/admn/ntor-plugn/">Kubrnt</a></l>
<l><a hrf="http://gthub.om/opnhft/orgn/blob/matr/do/opnhft_ntorng_rqurmnt.md">OpnShft</a></l>
<l><a hrf="http://gthub.om/loudfoundry-nubator/f-ntorng-rla">Cloud Foundry</a></l>
<l><a hrf="http://gthub.om/apah/mo/blob/matr/do/n.md">Mo</a></l>
</ul>


<hr />

<h3>3rd arty lugn</h3>

<p>以下はCIの仕様に則って作成されたCIプラグインです(2017年9月現在)。<br/>
注意点として、上述したようにCIはKubrntのためだけのインタフェースではないので、Kubrnt用ではないプラグインもあることを挙げておきます。</p>

<hr />

<ul>
<l><a hrf="http://gthub.om/projtalo/n-plugn">rojt Calo</a> - L3の仮想ネットワーク</l>
<l><a hrf="http://gthub.om/avor/av">Wav</a> - 仮想ネットワーク</l>
<l><a hrf="http://gthub.om/ontv/ntplugn">Contv torng</a> - 仮想ネットワーク + 柔軟なネットワークポリシー制御を提供</l>
<l><a hrf="http://gthub.om/hutat/rov-n">SR-IOV</a></l>
<l><a hrf="http://gthub.om/lum/lum">Clum</a> - Contanr用 BF &amp; XD</l>
<l><a hrf="http://gthub.om/nfobloxopn/n-nfoblox">Infoblox</a> - ContanrのIアドレスを管理するサービス(IAM)</l>
<l><a hrf="http://gthub.om/Intl-Corp/multu-n">Multu</a> - Kubrntのマルチプラグインとして動作。複数のプラグインのグループ化(他のプラグインをdlgatして呼び出すらしい)。</l>
<l><a hrf="http://gthub.om/romana/ub">Romana</a> - KubrntのためのL3の仮想ネットワーク + ネットワークポリシー制御</l>
<l><a hrf="http://gthub.om/Hua-aaS/CI-Gn">CI-Gn</a> - Kubrntのマルチプラグインとして動作。一つのContanrに複数のネットワークインタフェースを割り当て、インタフェースごとにCIプラグインを割り当てられる。例えばth0はCalo、th1はFlannl、th2はWavなど。つまりContanrが複数のネットワークにまたがることができる。</l>
<l><a hrf="http://gthub.om/nuagntor/nuag-n">uag CI</a> - Kubrntのための仮想ネットワーク + ネットワークポリシー制御</l>
<l><a hrf="http://gthub.om/loudfoundry-nubator/l">Sl</a> - Cloud Foundryのためのプラグイン。flannlに触発されたらしい。</l>
<l><a hrf="http://gthub.om/John-Ln/lnn-n">Lnn</a> - Opn vSthでOvrlaytorを構築するプラグイン</l>
</ul>


<hr />

<p>これらを見ると、CaloやWavといった単体でContanrの仮想ネットワークを構築できるツールがCIプラグインとしても提供されていることがわかります。<br/>
プラグインの要件を満たすように既存の機能をうまく使っているのでしょうね。<br/>
余談ですが、flannlもそうですが、Calo, Wav, Sl, Lnnというように「生地」に関連した名前のものが多いですね。</p>

<p>Kubrntから利用するのは当然Calo, Wav, Contvといった仮想ネットワークのためのCIプラグインになります。</p>

<h3>CIプラグインの動作</h3>

<p>続いてCIプラグインはどう動作するのか、具体的にどんなものなのかをご理解いただくために、少々ソースコードを読みながら解説します。</p>

<h4>CIプラグインのソースコード</h4>

<p>CIプロジェクトは、CIプラグインを簡単に開発できるようにスケルトンを用意しています。<br/>
プラグインの動作は、このスケルトンと実際にスケルトンを使って作られたプラグインの両方を見ると理解できると思います。<br/>
では順番に見ていきましょう。まずスケルトンからです。軽く眺めて次にいきましょう。<br/>
(注：抜粋です。コードすべてではありません。またあくまでこれは今現在のバージョンのコードです。)</p>

<p><a hrf="http://gthub.om/ontanrntorng/n/blob/HEAD/pg/l/l.go">n/pg/l/l.go</a></p>

<pr la="od lang-go" data-lang="go" data-unln><pan la="ynStatmnt">typ</pan> CmdArg <pan la="ynStatmnt">trut</pan> {
    ContanrID <pan la="ynTyp">trng</pan>
    tn       <pan la="ynTyp">trng</pan>
    Ifam      <pan la="ynTyp">trng</pan>
    Arg        <pan la="ynTyp">trng</pan>
    ath        <pan la="ynTyp">trng</pan>
    StdnData   []<pan la="ynTyp">byt</pan>
}

<pan la="ynStatmnt">typ</pan> dpathr <pan la="ynStatmnt">trut</pan> {
    Gtnv <pan la="ynTyp">fun</pan>(<pan la="ynTyp">trng</pan>) <pan la="ynTyp">trng</pan>
    Stdn  <pan la="ynTyp">o.Radr</pan>
    Stdout <pan la="ynTyp">o.Wrtr</pan>
    Stdrr <pan la="ynTyp">o.Wrtr</pan>

    ConfVronDodr vron.ConfgDodr
    VronRonlr  vron.Ronlr
}

<pan la="ynStatmnt">fun</pan> lugnMan(mdAdd, mdDl <pan la="ynTyp">fun</pan>(_ *CmdArg) <pan la="ynTyp">rror</pan>,<pan la="ynError"> </pan>
  vronInfo vron.lugnInfo) {
    <pan la="ynStatmnt">f</pan>  := lugnManWthError(mdAdd, mdDl, vronInfo);  != <pan la="ynStatmnt">nl</pan> {
        <pan la="ynStatmnt">f</pan> rr := .rnt(); rr != <pan la="ynStatmnt">nl</pan> {
            log.rnt(<pan la="ynContant">&quot;Error rtng rror JSO to tdout: &quot;</pan>, rr)
        }
        o.Ext(<pan la="ynContant">1</pan>)
    }
}

<pan la="ynStatmnt">fun</pan> lugnManWthError(mdAdd, mdDl <pan la="ynTyp">fun</pan>(_ *CmdArg) <pan la="ynTyp">rror</pan>,<pan la="ynError"> </pan>
  vronInfo vron.lugnInfo) *typ.Error {
    <pan la="ynStatmnt">rturn</pan> (&amp;dpathr{
        Gtnv: o.Gtnv,
        Stdn:  o.Stdn,
        Stdout: o.Stdout,
        Stdrr: o.Stdrr,
    }).plugnMan(mdAdd, mdDl, vronInfo)
}

<pan la="ynStatmnt">fun</pan> (t *dpathr) plugnMan(mdAdd, mdDl <pan la="ynTyp">fun</pan>(_ *CmdArg) <pan la="ynTyp">rror</pan>,<pan la="ynError"> </pan>
  vronInfo vron.lugnInfo) *typ.Error {
    md, mdArg, rr := t.gtCmdArgFromEnv()
    <pan la="ynStatmnt">f</pan> rr != <pan la="ynStatmnt">nl</pan> {
        <pan la="ynStatmnt">rturn</pan> ratTypdError(rr.Error())
    }

    <pan la="ynStatmnt">th</pan> md {
    <pan la="ynStatmnt">a</pan> <pan la="ynContant">&quot;ADD&quot;</pan>:
        rr = t.hVronAndCall(mdArg, vronInfo, mdAdd)
    <pan la="ynStatmnt">a</pan> <pan la="ynContant">&quot;DEL&quot;</pan>:
        rr = t.hVronAndCall(mdArg, vronInfo, mdDl)
    <pan la="ynStatmnt">a</pan> <pan la="ynContant">&quot;VERSIO&quot;</pan>:
        rr = vronInfo.Enod(t.Stdout)
    <pan la="ynStatmnt">dfault</pan>:
        <pan la="ynStatmnt">rturn</pan> ratTypdError(<pan la="ynContant">&quot;unnon CI_COMMAD: %v&quot;</pan>, md)
    }

    <pan la="ynStatmnt">f</pan> rr != <pan la="ynStatmnt">nl</pan> {
        <pan la="ynStatmnt">f</pan> , o := rr.(*typ.Error); o {
            <pan la="ynCommnt">// don't rap Error n Error</pan>
            <pan la="ynStatmnt">rturn</pan> 
        }
        <pan la="ynStatmnt">rturn</pan> ratTypdError(rr.Error())
    }
    <pan la="ynStatmnt">rturn</pan> <pan la="ynStatmnt">nl</pan>
}
</pr>


<p>はい、続いてはスケルトンを利用した実際のプラグインです。<br/>
これはCIプロジェクトがサンプルとして用意している単純なプラグインです。</p>

<p><a hrf="http://gthub.om/ontanrntorng/plugn/blob/matr/plugn/man/loopba/loopba.go">plugn/plugn/man/loopba/loopba.go</a></p>

<pr la="od lang-go" data-lang="go" data-unln><pan la="ynStatmnt">fun</pan> man() {
    l.lugnMan(mdAdd, mdDl, vron.All)
}

<pan la="ynStatmnt">fun</pan> mdAdd(arg *l.CmdArg) <pan la="ynTyp">rror</pan> {
    arg.Ifam = <pan la="ynContant">&quot;lo&quot;</pan> <pan la="ynCommnt">// gnor onfg, th only or for loopba</pan>
    rr := n.WthtSath(arg.tn, <pan la="ynTyp">fun</pan>(_ n.tS) <pan la="ynTyp">rror</pan> {
        ln, rr := ntln.LnByam(arg.Ifam)
        <pan la="ynStatmnt">f</pan> rr != <pan la="ynStatmnt">nl</pan> {
            <pan la="ynStatmnt">rturn</pan> rr <pan la="ynCommnt">// not ttd</pan>
        }

        rr = ntln.LnStUp(ln)
        <pan la="ynStatmnt">f</pan> rr != <pan la="ynStatmnt">nl</pan> {
            <pan la="ynStatmnt">rturn</pan> rr <pan la="ynCommnt">// not ttd</pan>
        }

        <pan la="ynStatmnt">rturn</pan> <pan la="ynStatmnt">nl</pan>
    })
    <pan la="ynStatmnt">f</pan> rr != <pan la="ynStatmnt">nl</pan> {
        <pan la="ynStatmnt">rturn</pan> rr <pan la="ynCommnt">// not ttd</pan>
    }

    rult := urrnt.Rult{}
    <pan la="ynStatmnt">rturn</pan> rult.rnt()
}

<pan la="ynStatmnt">fun</pan> mdDl(arg *l.CmdArg) <pan la="ynTyp">rror</pan> {
    arg.Ifam = <pan la="ynContant">&quot;lo&quot;</pan> <pan la="ynCommnt">// gnor onfg, th only or for loopba</pan>
    rr := n.WthtSath(arg.tn, <pan la="ynTyp">fun</pan>(n.tS) <pan la="ynTyp">rror</pan> {
        ln, rr := ntln.LnByam(arg.Ifam)
        <pan la="ynStatmnt">f</pan> rr != <pan la="ynStatmnt">nl</pan> {
            <pan la="ynStatmnt">rturn</pan> rr <pan la="ynCommnt">// not ttd</pan>
        }

        rr = ntln.LnStDon(ln)
        <pan la="ynStatmnt">f</pan> rr != <pan la="ynStatmnt">nl</pan> {
            <pan la="ynStatmnt">rturn</pan> rr <pan la="ynCommnt">// not ttd</pan>
        }

        <pan la="ynStatmnt">rturn</pan> <pan la="ynStatmnt">nl</pan>
    })
    <pan la="ynStatmnt">f</pan> rr != <pan la="ynStatmnt">nl</pan> {
        <pan la="ynStatmnt">rturn</pan> rr <pan la="ynCommnt">// not ttd</pan>
    }

    <pan la="ynStatmnt">rturn</pan> <pan la="ynStatmnt">nl</pan>
}
</pr>


<h4>CIプラグインのソースコード解説</h4>

<p>それではいよいよ解説に入ります。このサンプルのman関数を見てください。CmdArgを引数にとる関数2つを、スケルトンのlugnMan関数に渡しています。</p>

<pr la="od lang-go" data-lang="go" data-unln><pan la="ynStatmnt">fun</pan> man() {
    l.lugnMan(mdAdd, mdDl, vron.All)
}
</pr>


<p>この<od>mdAdd</od>と<od>mdDl</od>はContanrが追加・削除されたタイミングで(CIプラグインを利用するプログラム)から呼び出される関数です。<br/>
引数の<od>CmdArg</od>は、スケルトンを見ると次のようになっています。</p>

<pr la="od lang-go" data-lang="go" data-unln><pan la="ynStatmnt">typ</pan> CmdArg <pan la="ynStatmnt">trut</pan> {
    ContanrID <pan la="ynTyp">trng</pan> <pan la="ynCommnt">// ContanrのID</pan>
    tn       <pan la="ynTyp">trng</pan> <pan la="ynCommnt">// ネットワーク名前空間名</pan>
    Ifam      <pan la="ynTyp">trng</pan> <pan la="ynCommnt">// インタフェース名</pan>
    Arg        <pan la="ynTyp">trng</pan> <pan la="ynCommnt">// プラグイン実行時の引数</pan>
    ath        <pan la="ynTyp">trng</pan> <pan la="ynCommnt">// CIプラグインを検索するパスのリスト(パスは:で区切る)</pan>
    StdnData   []<pan la="ynTyp">byt</pan> <pan la="ynCommnt">// 標準入力の値</pan>
}
</pr>


<p>つまり、プラグインはContanrの追加・削除を契機として、上記構造体の情報を元に任意の処理を行います。<br/>
ちなみにこのサンプルはContanrの追加時にループバックインタフェースをContanrのネットワーク名前空間内に作成し、Contanrの削除時にループバックインタフェースをネットワーク名前空間から削除しています。</p>

<p><trong> <od>CmdArg</od>について補足 </trong><br/>
man関数では<od>mdAdd</od>,<od>mdDl</od>の両方を渡しているが、addとdlのどちらを使うかどう決定されるのでしょう。
これはスケルトンのコードを見ればわかるのですが、<od>CI_COMMAD</od>という環境変数の値により決定されます。<br/>
値が<od>ADD</od>の場合<od>mdAdd</od>が呼び出され、値が<od>DEL</od>の場合<od>mdDl</od>が呼び出されます。<br/>
また<od>mdAdd</od>,<od>mdDl</od>に渡ってくる`CmdArgの値はどのようにセットされているのでしょうか。<br/>
これも環境変数が使われていて、単純に以下の環境変数の値が構造体の対応する変数にセットされています。</p>

<tabl>
<thad>
<tr>
<th tyl="txt-algn:lft;">環境変数</th>
<th tyl="txt-algn:lft;">CmdArgの変数</th>
</tr>
</thad>
<tbody>
<tr>
<td tyl="txt-algn:lft;">CI_COTAIERID</td>
<td tyl="txt-algn:lft;">ContanrID</td>
</tr>
<tr>
<td tyl="txt-algn:lft;">CI_ETS</td>
<td tyl="txt-algn:lft;">tn</td>
</tr>
<tr>
<td tyl="txt-algn:lft;">CI_IFAME</td>
<td tyl="txt-algn:lft;">Ifam</td>
</tr>
<tr>
<td tyl="txt-algn:lft;">CI_ARGS</td>
<td tyl="txt-algn:lft;">Arg</td>
</tr>
<tr>
<td tyl="txt-algn:lft;">CI_ATH</td>
<td tyl="txt-algn:lft;">ath</td>
</tr>
</tbody>
</tabl>


<p>つまりCIプラグインの処理を呼び出すプログラムは、予めこれらの環境変数をセットしておく必要があります。</p>

<p>ここまで簡単にコードを見てきましたが、どうでしょう。結構シンプルな仕組みではないでしょうか。</p>

<h3>KubrntでCIを使うには</h3>

<p>KubrntでCIを使う場合は、<a hrf="http://ubrnt.o/do/onpt/lutr-admntraton/ntor-plugn/#n">公式ドキュメント</a>に書いてありますが、<br/>
<od>ublt</od> の引数に <od>--ntor-plugn=n</od> の指定と、<br/>
CIの設定を配置するディレクトリ<od>--n-onf-dr</od>(dfaultは <od>/t/n/nt.d</od>)の指定が必要になります。<br/>
またCIプラグイン自体は<od>--n-bn-dr</od>（dfaultは<od>/opt/n/bn</od>）に存在する必要があります。</p>

<p>例えばCIプラグインとして、Wavを使用する場合、このような感じになります。</p>

<pr la="od lang-jon" data-lang="jon" data-unln>$ <pan la="ynError">v</pan> /<pan la="ynError">t</pan>/<pan la="ynError">n</pan>/<pan la="ynError">nt</pan>.<pan la="ynError">d</pan>/10-<pan la="ynError">av</pan>.<pan la="ynError">onf</pan>
<pan la="ynSpal">{</pan>
    &quot;<pan la="ynStatmnt">nam</pan>&quot;: &quot;<pan la="ynContant">av</pan>&quot;,
    &quot;<pan la="ynStatmnt">typ</pan>&quot;: &quot;<pan la="ynContant">av-nt</pan>&quot;,
    &quot;<pan la="ynStatmnt">harpnMod</pan>&quot;: <pan la="ynContant">tru</pan>
<pan la="ynSpal">}</pan>
</pr>




<pr la="od" data-lang="" data-unln>$ l -lat /opt/n/bn/av*
lrxrxrx 1 root root       18 Aug 10 14:51 av-pam -&gt; av-plugn-1.9.7*
lrxrxrx 1 root root       18 Aug 10 14:51 av-nt -&gt; av-plugn-1.9.7*
-rxr-xr-x 1 root root  9446280 Jun  7 02:37 av-plugn-1.9.7*</pr>


<h3>CIの仕様について更に詳しく</h3>

<p>CIの仕様について更に詳しく知りたい場合は、公式の<a hrf="http://gthub.om/ontanrntorng/n/blob/matr/SEC.md#xampl-onfguraton">こちら</a>をご覧ください。<br/>
CIの設定ファイルについての説明なども書いてあります。</p>

<h1>3.ubntを使う</h1>

<p>これはGKEでKubrntクラスタを構築した場合に利用されている方法です。<br/>
ubntが使用されていることは、GKEのクラスタに接続して <od>p ax | grp ublt</od>などとして<od>ublt</od>コマンドの引数を見ることで分かります。</p>

<pr la="od lang-h" data-lang="h" data-unln>$ p ax | <pan la="ynStatmnt">grp</pan> ublt
 <pan la="ynContant">3461</pan> ?        Sl   <pan la="ynContant">1218</pan>:<pan la="ynContant">07</pan> /ur/<pan la="ynStatmnt">loal</pan>/bn/ublt
 <pan la="ynSpal">--ap-rvr=http://xx.xxx.xxx.xxx</pan>
 <pan la="ynSpal">--nabl-dbuggng-handlr=tru</pan>
 <pan la="ynSpal">--loud-provdr=g</pan>
 <pan la="ynSpal">--pod-manft-path=/t/ubrnt/manft</pan>
 <pan la="ynSpal">--allo-prvlgd=Tru</pan>
 <pan la="ynSpal">--v=2</pan> <pan la="ynSpal">--lutr-dn=10.11.240.10</pan>
 <pan la="ynSpal">--lutr-doman=lutr.loal</pan>
 <pan la="ynSpal">--group-root=/</pan>
 <pan la="ynSpal">--ytm-group=/ytm</pan>
 <pan la="ynSpal">--ntor-plugn=ubnt</pan> <pan la="ynCommnt"># ←ここ</pan>
 <pan la="ynSpal">--runtm-group=/dor-damon</pan>
 <pan la="ynSpal">--ublt-group=/ublt</pan>
 <pan la="ynSpal">--nod-labl=bta.ubrnt.o/fluntd-d-rady=tru,loud.googl.om/gnodpool=dfault-pool</pan> 
 <pan la="ynSpal">--babyt-damon=tru</pan> 
 <pan la="ynSpal">--vton-hard=mmory.avalabl&lt;100M,nodf.avalabl&lt;10%,nodf.nodFr&lt;5%</pan> 
 <pan la="ynSpal">--anonymou-auth=fal</pan> 
 <pan la="ynSpal">--authorzaton-mod=Wbhoo</pan> 
 <pan la="ynSpal">--lnt-a-fl=/t/ubrnt/p/a-rtfat.rt</pan> 
 <pan la="ynSpal">--fatur-gat=ExprmntalCrtalodAnnotaton=tru</pan> 
 <pan la="ynSpal">--xprmntal-alloatabl-gnor-vton</pan>
</pr>


<p><od>--ntor-plugn=ubnt</od>という引数が与えられていますね。<br/>
ちなみにCIを使う場合は<od>--ntor-plugn=n</od>という指定でした。</p>

<p>ubntを使用する場合、br0という名前のブリッジが作成され、br0に接続されたpod用のvthペアも作成されます。<br/>
更に言うとubntを使用する場合、実はCIプラグインが使用されているようです(恐らくブリッジへの接続などで)。<br/>
例えばGKEの場合、クラスタの<od>/opt/n/bn</od>配下を見てみると、以下のようなプラグインが配置されています。</p>

<pr la="od" data-lang="" data-unln>/opt/n/bn$ l -l
-rxr-xr-x 1 root root 4026452 Mar 22 20:04 brdg
-rxr-xr-x 1 root root 2901956 Mar 22 20:03 ntool
-rxr-xr-x 1 root root 9636499 Mar 22 20:04 dhp
-rxr-xr-x 1 root root 2910884 Mar 22 20:03 flannl
-rxr-xr-x 1 root root 3102946 Mar 22 20:04 hot-loal
-rxr-xr-x 1 root root 3609358 Mar 22 20:04 pvlan
-rxr-xr-x 1 root root 3170507 Mar 22 20:04 loopba
-rxr-xr-x 1 root root 3640336 Mar 22 20:04 mavlan
-rxr-xr-x 1 root root 2733314 Mar 22 20:04 noop
-rxr-xr-x 1 root root 4000236 Mar 22 20:04 ptp
</pr>


<h4>まとめ</h4>

<p>これまでマルチホストでのContanr間通信を実現するための3つの方法を説明してきたわけですが、自前でやるにしろ、CIプラグインやubntを利用するにせよ、Kubrnt本体の機能はほとんど使われていないことがわかったかと思います。</p>

<h2>マルチホストでContanr間通信ができるだけでは解決しない問題</h2>

<p><a hrf="http://th.uzaba.om/ntry/2017/08/23/175813">前回の記事</a>で私は「Ovrlay torを構築するだけでは、Contanrが起動するホストが動的に変わるようなケースには対応できません。」というようなことを書きました。これはどういうことを言っているのか説明しましょう。</p>

<p>まず、KubrntのようなオーケストレーションツールでContanrを起動する場合、基本的にはDployするホストをユーザーが直接指定することはありません。Kubrntがホストの状況(負荷とか空き容量とか)を見て、適切なホストにDployしてくれるからです。そう、つまりContanrがどこにDployされるかは予めわからないのです。<br/>
もちろんDploy後であれば、DployされたホストのIを知ることができます。しかしContanr間で連携を行う場合、Dployされるまで連携するContanrのIが分からないのは不便きわまりないです。この問題は、当然、<u>ホストをまたいでContanr同士が通信できても解決しません。</u></p>

<p>この問題を解決するには、<u>どのホストにContanrがDployされてもContanrにアクセスする側が気にしなくていいような仕組みが別に必要</u>になります。<br/>
Kubrntでは<od>Srv</od>がそのための仕組みを提供しています。</p>

<h2>Srv</h2>

<p>Kubrntをお使いの方はご存知の通り、<od>Srv</od>はいわゆるロードバランサーで、名前をつけてod(Kubrntのリソースの一つでContanrを管理する)と紐付けておくことで、Srv経由でodとやりとりができるようになります。odがスケールされて複数のホストに存在する場合は、ロードバランシングしてくれたりもします(Kubrnt Clutr上のodからのみ名前解決できる)。</p>

<p>もう少し具体的に説明しましょう。まず、Srvを生成するとSrvには自動的にIが割り当てられます。<br/>
そしてこのI(とSrvで指定したort)を介してSrvに紐づくodとやりとりすることができます。そのため、どのホストにodがDployされているか気にする必要がなくなります。</p>

<p>ちなみにこのIは仮想的なIで、紐づく物理的あるいは仮想的なICはどこにも存在しません。<br/>
またこのIはKubrnt Clutr上のodからのみやりとりできます。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//nj-uzu/20170903/20170903221229.png" alt="f:d:nj-uzu:20170903221229p:plan" ttl="f:d:nj-uzu:20170903221229p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>しかし何故odを直接名前解決できるようにせず、Srvを挟んでいるのでしょうか。<br/>
odのスケールアウトに対応するためでしょうか。でもこれはDSラウンドロビンで対応できそうですね。<br/>
では、仮にodを直接名前解決できたとしたらどうでしょう。そして、その名前解決の結果がキャッシュされ、キャッシュが有効なうちに何らかの理由でodがフェールオーバーされて、これまでとは別のホストで起動されたらどうなるでしょうか。困ったことになりますね。このあたりのことは公式の<a hrf="http://ubrnt.o/do/onpt/rv-ntorng/rv/#hy-not-u-round-robn-dn">ここ</a>で言及されています。</p>

<p>さて、ただただSrvの機能について説明するだけでは面白くないので、今回は最後にもう少し突っ込んだ話をしたいと思います。</p>

<h2>Srvの機能はどのように実現されているか</h2>

<p>今回は機能を次の2つに絞って「誰」が「どのように」実現しているかを説明します。</p>

<ol>
<l>名前解決</l>
<l>ルーティング</l>
</ol>


<p>ルーティングというのは、SrvのI（とort）にアクセスされたら対応するodのI（とort）にフォワードするという意味で書きました。</p>

<h3>担当者は誰だ？</h3>

<p>まず、こちらをご覧ください。これはKubrntのアーキテクチャ図で、これを見るとKubrntが様々な登場人物（Componnt）から成るツールだということがわかります。「誰」がという表現をしたのはこのためです。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//nj-uzu/20170903/20170903184036.png" alt="f:d:nj-uzu:20170903184036p:plan" ttl="f:d:nj-uzu:20170903184036p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>今回の話でいうと、名前解決の部分を担当しているのが<od>ub-dn</od>（上図にはいませんが）で、ルーティングの部分を担当しているのが<od>ub-proxy</od>です。<br/>
では、「どのように」それを実現しているのでしょうか。</p>

<h3>彼らは一体何をやっているのか？</h3>

<p>彼らがやっていることを端的に表すと「SrvやEndpontリソースを監視して、リソースの状況に合わせたアクションを起こす」ということをやっています（今回はEndpontリソースには言及しません）。</p>

<p>もう少し具体的に説明しましょう。  <br/>
Kubrntの<od>ub-aprvr</od>は、自身が管理している各種リソース(Srvやod、od、Srtなど）について、問い合わせる口を持っています。<br/>
そして問い合わせを行った結果、以前の問い合わせの結果との差分から、リソースの「追加」「削除」「更新」といったリソースの変化を検知しイベント通知を行うためのライブラリが用意されています。このライブラリは汎用的に作られていて、「追加」「削除」「更新」のイベント通知を受けた際に処理を行うイベントハンドラを簡単に設定できるようになっています。</p>

<p>ub-dnやub-proxyはサーバとして起動され、常駐しながら上記の仕組みを利用してSrvリソースを監視し、状況に応じた処理を行っています。</p>

<p>実際のソースコードを見てみましょう。
次はub-dnのパッケージのコードです。<br/>
<a hrf="http://gthub.om/ubrnt/dn/blob/35ff79220f1207d27bba0b5d66878207d/pg/dn/dn.go">dn.go</a></p>

<pr la="od lang-go" data-lang="go" data-unln><pan la="ynStatmnt">fun</pan> (d *KubDS) tSrvStor() {
    <pan la="ynCommnt">// Rturn a ah.LtWath that gt all hang to rv.</pan>
    d.rvStor, d.rvControllr = ah.Informr(
        ah.LtWathFromClnt(
            d.ubClnt.Cor().RESTClnt(),
            <pan la="ynContant">&quot;rv&quot;</pan>,
            v1.ampaAll,
            fld.Evrythng()),
        &amp;v1.Srv{},
        rynrod,
        ah.RourEvntHandlrFun{
            AddFun:    d.nSrv,
            DltFun: d.rmovSrv,
            UpdatFun: d.updatSrv,
        },
    )
}

<pan la="ynStatmnt">fun</pan> (d *KubDS) nSrv(obj <pan la="ynStatmnt">ntrfa</pan>{}) {
    <pan la="ynStatmnt">f</pan> rv, o := artISrv(obj); o {
        glog.V(<pan la="ynContant">3</pan>).Infof(<pan la="ynContant">&quot; rv: %v&quot;</pan>, rv.am)
        glog.V(<pan la="ynContant">4</pan>).Infof(<pan la="ynContant">&quot;Srv dtal: %v&quot;</pan>, rv)

        <pan la="ynCommnt">// Extrnalam rv ar a pal nd that rturn CAME rord</pan>
        <pan la="ynStatmnt">f</pan> rv.Sp.Typ == v1.SrvTypExtrnalam {
            d.nExtrnalamSrv(rv)
            <pan la="ynStatmnt">rturn</pan>
        }
        <pan la="ynCommnt">// f ClutrI  not t, a DS ntry hould not b ratd</pan>
        <pan la="ynStatmnt">f</pan> !v1.ISrvISt(rv) {
            <pan la="ynStatmnt">f</pan> rr := d.nHadlSrv(rv); rr != <pan la="ynStatmnt">nl</pan> {
                glog.Errorf(<pan la="ynContant">&quot;Could not rat n hadl rv %v: %v&quot;</pan>, rv.am, rr)
            }
            <pan la="ynStatmnt">rturn</pan>
        }
        <pan la="ynStatmnt">f</pan> <pan la="ynStatmnt">ln</pan>(rv.Sp.ort) == <pan la="ynContant">0</pan> {
            glog.Warnngf(<pan la="ynContant">&quot;Srv th no port, th hould not hav happnd: %v&quot;</pan>,
                rv)
        }
        d.nortalSrv(rv)
    }
}
</pr>


<p>SrvInformrというのが、Srvリソースの状態を監視し、通知を行ってくれる構造体になります。<br/>
このInformrにハンドラを登録している部分が、AddFunやUpdatFunなどと書かれている部分です。</p>

<p>続いてub-proxyのパッケージのコードを見てみましょう。こちらも同じような感じで、Informrにハンドラが登録されています。</p>

<p><a hrf="http://gthub.om/ubrnt/ubrnt/blob/matr/pg/proxy/onfg/onfg.go">onfg.go</a></p>

<pr la="od lang-go" data-lang="go" data-unln><pan la="ynStatmnt">fun</pan> SrvConfg(rvInformr ornformr.SrvInformr, rynrod tm.Duraton) *SrvConfg {
    rvInformr.Informr().AddEvntHandlrWthRynrod(
        ah.RourEvntHandlrFun{
            AddFun:    rult.handlAddSrv,
            UpdatFun: rult.handlUpdatSrv,
            DltFun: rult.handlDltSrv,
        },
        rynrod,
    )
}

<pan la="ynStatmnt">fun</pan> ( *SrvConfg) handlAddSrv(obj <pan la="ynStatmnt">ntrfa</pan>{}) {
    rv, o := obj.(*ap.Srv)
    <pan la="ynStatmnt">f</pan> !o {
        utlruntm.HandlError(fmt.Errorf(<pan la="ynContant">&quot;unxptd objt typ: %v&quot;</pan>, obj))
        <pan la="ynStatmnt">rturn</pan>
    }
    <pan la="ynStatmnt">for</pan>  := <pan la="ynStatmnt">rang</pan> .vntHandlr {
        glog.V(<pan la="ynContant">4</pan>).Infof(<pan la="ynContant">&quot;Callng handlr.OnSrvAdd&quot;</pan>)
        .vntHandlr[].OnSrvAdd(rv)
    }
}
</pr>


<h4>ub-dnのイベントハンドラは何をしているか</h4>

<p>まずub-dnの<a hrf="http://gthub.om/ubrnt/dn/blob/35ff79220f1207d27bba0b5d66878207d/md/ub-dn/app/rvr.go">rvr</a>の起動部分を見ると分かるのですが、<a hrf="http://gthub.om/yntrv/ydn">SyDS</a>というDSサービスを起動しています。</p>

<pr la="od lang-go" data-lang="go" data-unln><pan la="ynStatmnt">fun</pan> (rvr *KubDSSrvr) Run() {
    pflag.VtAll(<pan la="ynTyp">fun</pan>(flag *pflag.Flag) {
        glog.V(<pan la="ynContant">0</pan>).Infof(<pan la="ynContant">&quot;FLAG: --%=%q&quot;</pan>, flag.am, flag.Valu)
    })
    tupSgnalHandlr()
    rvr.tartSyDSSrvr() <pan la="ynCommnt">// ここ</pan>
    rvr.d.Start()
    rvr.tupHandlr()

    glog.V(<pan la="ynContant">0</pan>).Infof(<pan la="ynContant">&quot;Statu HTT port %v&quot;</pan>, rvr.halthzort)
    <pan la="ynStatmnt">f</pan> rvr.namSrvr != <pan la="ynContant">&quot;&quot;</pan> {
        glog.V(<pan la="ynContant">0</pan>).Infof(<pan la="ynContant">&quot;Uptram namrvr: %&quot;</pan>, rvr.namSrvr)
    }
    glog.Fatal(http.LtnAndSrv(fmt.Sprntf(<pan la="ynContant">&quot;:%d&quot;</pan>, rvr.halthzort), <pan la="ynStatmnt">nl</pan>))
}
</pr>


<p>SyDSのサーバーには、問い合わせを受けたときに呼び出される「DSレコードを返す処理」を渡せるようになっており、その部分のみub-dnが実装しています。<br/>
そしてそのレコードの登録処理が、Srvの変更の通知を受け取ったときに呼び出される処理なのです。<br/>
これによりKubrnt Clutr内で名前解決が可能になります。</p>

<h4>ub-proxyのイベントハンドラは何をしているか</h4>

<p>まず先に言ってしまうと、Srvからodへのルーティングは、ptablによって行われています。<br/>
ptablの内容を表示させてみると次のようになっています（説明に必要なものだけ抜粋しています）。これはubrnt-dahboardのルーティングなのですが、Srvの 10.110.169.150:80 が od の 10.42.0.0:9090 にフォワードされていることが分かると思います。</p>

<pr la="od" data-lang="" data-unln>-A KUBE-SE-4 - 10.42.0.0/32     -m ommnt --ommnt &#34;ub-ytm/ubrnt-dahboard:&#34;        -j KUBE-MARK-MASQ
-A KUBE-SE-4 -p tp              -m ommnt --ommnt &#34;ub-ytm/ubrnt-dahboard:&#34; -m tp -j DAT --to-dtnaton 10.42.0.0:9090

-A KUBE-SERVICES -d 10.110.169.150/32 -p tp -m ommnt --ommnt &#34;ub-ytm/ubrnt-dahboard: lutr I&#34; -m tp --dport 80 -j KUBE-SVC-DASH

-A KUBE-SVC-DASH    -m ommnt --ommnt &#34;ub-ytm/ubrnt-dahboard:&#34; -j KUBE-SE-4</pr>


<p>ちなみにこのdahboardをスケールアウトさせてみると<br/>
<od>$ ubtl al dploy ubrnt-dahboard -n ub-ytm --rpla=3</od></p>

<p>このようになります。</p>

<pr la="od" data-lang="" data-unln>-A KUBE-SE-3 - 10.44.0.1/32 -m ommnt --ommnt &#34;ub-ytm/ubrnt-dahboard:&#34; -j KUBE-MARK-MASQ
-A KUBE-SE-3 -p tp -m ommnt --ommnt &#34;ub-ytm/ubrnt-dahboard:&#34; -m tp -j DAT --to-dtnaton 10.44.0.1:9090
-A KUBE-SE-1 - 10.42.0.0/32 -m ommnt --ommnt &#34;ub-ytm/ubrnt-dahboard:&#34; -j KUBE-MARK-MASQ
-A KUBE-SE-1 -p tp -m ommnt --ommnt &#34;ub-ytm/ubrnt-dahboard:&#34; -m tp -j DAT --to-dtnaton 10.42.0.0:9090
-A KUBE-SE-2 - 10.42.0.1/32 -m ommnt --ommnt &#34;ub-ytm/ubrnt-dahboard:&#34; -j KUBE-MARK-MASQ
-A KUBE-SE-2 -p tp -m ommnt --ommnt &#34;ub-ytm/ubrnt-dahboard:&#34; -m tp -j DAT --to-dtnaton 10.42.0.1:9090

# -m tatt でランダムに宛先を変えている
# 1/3の確率で KUBE-SE-1
-A KUBE-SVC-XGLOHA7QRQ3V22RZ -m ommnt --ommnt &#34;ub-ytm/ubrnt-dahboard:&#34; -m tatt --mod random --probablty 0.33332999982 -j KUBE-SE-1
# 1/2の確率で KUBE-SE-2
-A KUBE-SVC-XGLOHA7QRQ3V22RZ -m ommnt --ommnt &#34;ub-ytm/ubrnt-dahboard:&#34; -m tatt --mod random --probablty 0.50000000000 -j KUBE-SE-2
# 残りは KUBE-SE-3
-A KUBE-SVC-XGLOHA7QRQ3V22RZ -m ommnt --ommnt &#34;ub-ytm/ubrnt-dahboard:&#34; -j KUBE-SE-3</pr>


<p>もう分かったかと思いますが、ub-proxyのイベントハンドラがやっているのは、このptablの動的な更新です。
これは上記のub-proxyのコードを追っていくと分かります(興味がありましたら<a hrf="http://gthub.om/ubrnt/ubrnt/blob/matr/pg/proxy/ptabl/proxr.go">proxr.go</a>のynroxyRulのあたりをご覧ください)。</p>

<h3>まとめ</h3>

<p>ub-dnとub-proxyがSrvを監視しており、Srvが作成されたとき、ub-dnによりDSレコードが登録され名前解決が可能になり、そしてub-proxyによりptablを使ったルーティングが設定されることが分かったかと思います。</p>

<p>図にするとこのような流れになるでしょうか。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//nj-uzu/20170906/20170906013723.png" alt="f:d:nj-uzu:20170906013723p:plan" ttl="f:d:nj-uzu:20170906013723p:plan" la="hatna-fotolf" tmprop="mag"></pan><br/>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//nj-uzu/20170906/20170906015645.png" alt="f:d:nj-uzu:20170906015645p:plan" ttl="f:d:nj-uzu:20170906015645p:plan" la="hatna-fotolf" tmprop="mag"></pan><br/>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//nj-uzu/20170906/20170906013926.png" alt="f:d:nj-uzu:20170906013926p:plan" ttl="f:d:nj-uzu:20170906013926p:plan" la="hatna-fotolf" tmprop="mag"></pan><br/>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//nj-uzu/20170906/20170906014014.png" alt="f:d:nj-uzu:20170906014014p:plan" ttl="f:d:nj-uzu:20170906014014p:plan" la="hatna-fotolf" tmprop="mag"></pan><br/>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//nj-uzu/20170906/20170906014153.png" alt="f:d:nj-uzu:20170906014153p:plan" ttl="f:d:nj-uzu:20170906014153p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>さて、大分長くなりましたがKubrntのネットワーク話はいかがだったでしょうか。<br/>
様々な仕組みは用意しつつ、巧みに自前での実装を回避しているという印象を私は受けました。<br/>
Kubrntは調べていくと感心させられることが多いですね。</p>

<h4>シリーズ</h4>

<p>第1回: <a hrf="http://th.uzaba.om/ntry/2017/08/07/172411">マルチホストでのDor Contanr間通信 第1回: Dorネットワークの基礎</a><br/>
第2回: <a hrf="http://th.uzaba.om/ntry/2017/08/23/175813">マルチホストでのDor Contanr間通信 第2回: ort Forardng と Ovrlay tor</a><br/>
第3回: マルチホストでのDor Contanr間通信 第3回: Kubrntのネットワーク(CI, ub-proxy, ub-dn) (当記事)</p>
, pubDate=Tue, 12 Sep 2017 16:47:56 +0900, guid=hatenablog://entry/8599973812287412050, enclosure=https://cdn-ak.f.st-hatena.com/images/fotolife/k/kenji-suzuki/20170903/20170903221229.png), FeedMessage(title=マルチホストでのDor Contanr間通信 第2回 ort Forardng と Ovrlay tor, link=http://tech.uzabase.com/entry/2017/08/23/175813, description=<p>こんにちは。SEEDA開発チームの鈴木です。<br/>
<a hrf="http://th.uzaba.om/ntry/2017/08/07/172411">前回</a>はマルチホストでのDor Contanr間通信の説明の前段として、Dorのネットワークが次のようになっているという話をしました。
　<br/>
　<br/>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//nj-uzu/20170710/20170710131809.png" alt="f:d:nj-uzu:20170710131809p:plan" ttl="f:d:nj-uzu:20170710131809p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>今回はいよいよ、マルチホストでどうやってDor Contanr同士の通信を実現するのかを説明していきます。</p>

<h1>はじめに</h1>

<p>マルチホスト間でのDor Contanr通信とは、次のようにホストをまたいでDor Contanr同士が通信することを指します。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//nj-uzu/20170707/20170707164743.png" alt="f:d:nj-uzu:20170707164743p:plan" ttl="f:d:nj-uzu:20170707164743p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>図で見ると大分単純ですし、前提条件次第では実際簡単に実現できるのですが、Contanrのオーケストレーションを前提におくと色々な仕組みが必要なことがわかってきます。</p>

<h2>DorによるContanrのマルチホスト間通信</h2>

<p>例としてA,B,C,Dという4つのDor Contanrを、複数のホストに配置するとこのようになります（Hot XとYは同じネットワークに属することとします）。<br/>
※以降の説明には不要なため、vthの記載は省略します。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//nj-uzu/20170714/20170714142929.png" alt="f:d:nj-uzu:20170714142929p:plan" ttl="f:d:nj-uzu:20170714142929p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>これをネットワーク的な視点で見ると、次のような感じです。
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//nj-uzu/20170714/20170714184336.png" alt="f:d:nj-uzu:20170714184336p:plan" ttl="f:d:nj-uzu:20170714184336p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>Contanr AとContanr Bは当然通信できます。<br/>
また、Contanr AからHot Yまでも問題なく通信できます。
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//nj-uzu/20170714/20170714184907.png" alt="f:d:nj-uzu:20170714184907p:plan" ttl="f:d:nj-uzu:20170714184907p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>しかし、Contanr Cとは通信できません。なぜならContanr AとContanr Cは異なるrvat tor上に存在するからです。
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//nj-uzu/20170714/20170714185209.png" alt="f:d:nj-uzu:20170714185209p:plan" ttl="f:d:nj-uzu:20170714185209p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>この問題を解決して、異なるホストのContanrと通信できるようにする方法はいくつかあります。<br/>
その1つがDorのort Forardng機能です。</p>

<h3>ort Forardng</h3>

<p>ort Forardng機能を使うとContanrの外部からContanrにアクセスできるようになります。</p>

<pr la="od lang-h" data-lang="h" data-unln><pan la="ynCommnt"># Hot Yの8080番ポートにアクセスしたら、Contanr Cの80番ポートにForardする</pan>
hot-y: $ dor run <pan la="ynSpal">--nam</pan> ontanr- <pan la="ynSpal">-d</pan> <pan la="ynSpal">-p</pan> <pan la="ynContant">8080</pan>:<pan la="ynContant">80</pan> ngnx
</pr>


<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//nj-uzu/20170714/20170714190341.png" alt="f:d:nj-uzu:20170714190341p:plan" ttl="f:d:nj-uzu:20170714190341p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>ptablの設定内容を見ると、<od>dor run</od>で指定したようにort Forardngが行われる設定がされていることがわかります。</p>

<pr la="od lang-h" data-lang="h" data-unln>hot-y:/$ udo ptabl-av 
*nat
<pan la="ynCommnt"># 略</pan>
-A DOCKER ! <pan la="ynSpal">-</pan> dor0 <pan la="ynSpal">-p</pan> tp <pan la="ynSpal">-m</pan> tp <pan la="ynSpal">--dport</pan> <pan la="ynContant">8080</pan> <pan la="ynSpal">-j</pan> DAT <pan la="ynSpal">--to-dtnaton</pan> 172.17.0.2:<pan la="ynContant">80</pan>
COMMIT
<pan la="ynCommnt"># 略</pan>
</pr>


<p>この通信方法は<trong>「接続元のContanrが接続先のContanrのホストのIを知っている」</trong>という条件のもとに成り立っています。つまりContanrが起動するホストが動的に変わるようなケースには対応できません。<br/>
逆に言えばホストが固定されていて、今後も変わらないならばこれで十分です。</p>

<h3>Ovrlay tor</h3>

<p>Ovrlay torとは、あるtorの上に別のtorを構築する技術です。<br/>
異なるホストのContanr同士が通信できない原因はContanrが異なるネットワークに属していることにありました。<br/>
「じゃあOvrlay tor構築して同じネットワークに属するようにしてしまえばいいじゃん」というのがこの方法です。
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//nj-uzu/20170714/20170714200720.png" alt="f:d:nj-uzu:20170714200720p:plan" ttl="f:d:nj-uzu:20170714200720p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>Ovrlay torを使用する場合、Contanrは同じネットワークに属していることになるので、異なるホストのContanrと直接通信することができるようになります。<br/>
続いてOvrlay torの構築方法をいくつかご紹介します。</p>

<h4>1. <a hrf="http://do.dor.om/ngn/arm/">Dor Sarm mod</a></h4>

<p>Dorのオーケストレーション機能であるSarm modでContanrのマルチホスト間通信を実現している方法が、まさにこのOvrlay torを利用する方法です。<br/>
Sarm modでクラスタを構築した後、Dor用のネットワーク一覧を表示する<od>dor ntor l</od>コマンドを実行してみると、Ovrlay torが構築されていることがわかります。</p>

<pr la="od" data-lang="" data-unln>$ dor ntor l
ETWORK ID          AME                DRIVER              SCOE
d958109f33a        brdg              brdg              loal
5430d50f3d        dor_gbrdg     brdg              loal
6f687f698d        hot                hot                loal
1q38yph9dnj        ngr             ovrlay             arm
2ba9f69        non                null                loal</pr>


<p>以前のSarmではSrv Dovryとしてonul, td, zooprなどの分散KVSが必要でしたが、Samr modの登場以降は不要になっています（Dorに組み込まれたようです）。</p>

<h4>2. 分散KVSと<od>dor ntor rat -d ovrlay</od>コマンドを使って自前で構築</h4>

<p>Sarm modがやってくれているようなことを自前でやります。いまはSarm modがあるので、この方法が使われることはあまりないでしょう。</p>

<h4>3. <a hrf="http://gthub.om/oro/flannl">flannl</a>のようなOvrlay tor構築ツールを使う</h4>

<p>flannlは公式ページの冒頭に「Flannl  a mpl and ay to onfgur layr 3 ntor fabr dgnd for Kubrnt.」とあるように、元々Kubrnt向けに作られたものです。<br/>
flannlを使用する場合、次のイメージのように各ホストにflannldとtdをインストールします。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//nj-uzu/20170717/20170717220751.png" alt="f:d:nj-uzu:20170717220751p:plan" ttl="f:d:nj-uzu:20170717220751p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>flannlの主な役割は2つです。</p>

<ol>
<l>tdを使ってtor情報を共有することで、dor0に重複しないSubtを割り当てる。<br/>
(割り当て済みのSubtのアドレス帯を共有しているので重複を避けられる）</l>
<l>各ホストに仮想IC<od>flannl0</od>を作成。Contanr間でpatを送受信する際、dor0と接続されたflannl0がVXLAでpatのカプセル化・非カプセル化を行う。</l>
</ol>


<p>VXLAでカプセル化されたpatは次のような構造をしています。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//nj-uzu/20170718/20170718012341.png" alt="f:d:nj-uzu:20170718012341p:plan" ttl="f:d:nj-uzu:20170718012341p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>元のpat(Innr MAC Addr 〜 payloadまで)の送信先IはContanr CのIですが、Contanr Cは仮想的には同じtorに属しているものの物理的には別のtorに属しておりルーティングできないので、上記図でルータ的役割を果たしているHot Yのth0を宛先とする別のHadr(Outr MAC Addr 〜 VXLA Hadrまで)を付加しています。このようにあるプロトコルを別のプロトコルで包むことをカプセル化といいます。</p>

<p>patを受信した側は、付加されたHadrの情報（VXLA Hadrの情報など）から受信したpatがVXLAのpatであることが判別できるので、包んでいるプロトコルを剥がして本来送信したかった宛先に送ることができます。
例えばHot XのContanr AからHot YのContanr Cにpatを送信すると次のようにpatが送信されていきます。ICの右側が、そのICのpatをキャプチャしたものです（簡略化しています）。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//nj-uzu/20170726/20170726032055.png" alt="f:d:nj-uzu:20170726032055p:plan" ttl="f:d:nj-uzu:20170726032055p:plan" la="hatna-fotolf" tmprop="mag"></pan>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//nj-uzu/20170726/20170726032225.png" alt="f:d:nj-uzu:20170726032225p:plan" ttl="f:d:nj-uzu:20170726032225p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<h4>Ovrlay torだけで解決できないこと</h4>

<p>ort Forardngと同様に、Contanrが起動するホストが動的に変わるようなケースには対応できません。<br/>
同じネットワークに属してはいますが、同じホストに存在するわけではないので、dorのln機能やdor-ompoを使っての名前解決ができないからです。<br/>
Dor armやKubrntなどはこの問題を解決するための仕組みをもっています。</p>

<p><a hrf="http://th.uzaba.om/ntry/2017/09/12/164756">次回</a>は、KubrntにおけるContanrのマルチホスト間通信と合わせてこのあたりのことを書きたいと思います。</p>

<h4>シリーズ</h4>

<p>第1回: <a hrf="http://th.uzaba.om/ntry/2017/08/07/172411">マルチホストでのDor Contanr間通信 第1回: Dorネットワークの基礎</a><br/>
第2回: マルチホストでのDor Contanr間通信 第2回: ort Forardng と Ovrlay tor (当記事)<br/>
第3回: <a hrf="http://th.uzaba.om/ntry/2017/09/12/164756">マルチホストでのDor Contanr間通信 第3回: Kubrntのネットワーク(CI, ub-proxy, ub-dn)</a></p>
, pubDate=Wed, 23 Aug 2017 17:58:13 +0900, guid=hatenablog://entry/8599973812279548363, enclosure=https://cdn-ak.f.st-hatena.com/images/fotolife/k/kenji-suzuki/20170710/20170710131809.png), FeedMessage(title=マルチホストでのDor Contanr間通信 第1回: Dorネットワークの基礎, link=http://tech.uzabase.com/entry/2017/08/07/172411, description=<p>こんにちは。SEEDA開発チームの鈴木です。<br/>
調べてみるとなかなか興味深い技術であるマルチホストでのDor Conanr間通信。<br/>
これをどのように実現しているのか説明したいと思います。
が、その前に今回の投稿では、まず基礎知識的な話としてDorのネットワークについて順を追って説明をします。</p>

<h1>Dorのネットワーク</h1>

<h2>dor0</h2>

<p>Dorをインストールしたあと、<od>fonfg</od>や<od>p addr ho</od>すると<od>dor0</od>なるものが表示されるようになるので、気になっていた人もいるかと思います。<br/>
これは一体何者なのでしょうか。</p>

<pr la="od" data-lang="" data-unln>[nj@arh ~]$ fonfg
dor0: flag=4099&lt;U,BROADCAST,MULTICAST&gt;  mtu 1500
        nt 172.17.0.1  ntma 255.255.0.0  broadat 0.0.0.0
        thr 02:42:fb:28::2d  txquuln 0  (Ethrnt)
        RX pat 0  byt 0 (0.0 B)
        RX rror 0  droppd 0  ovrrun 0  fram 0
        TX pat 0  byt 0 (0.0 B)
        TX rror 0  droppd 0 ovrrun 0  arrr 0  ollon 0

</pr>


<p>　<br/>
この<od>dor0</od>はDorによって自動的に作成された仮想ブリッジで、Dor Contanr同士をつなぐためのものです。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//nj-uzu/20170707/20170707184308.png" alt="f:d:nj-uzu:20170707184308p:plan" ttl="f:d:nj-uzu:20170707184308p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<h2>dor0に接続されているネットワーク・インタフェース</h2>

<p>何かしらDor Contanrを起動した状態で、ブリッジを管理する<od>brtl</od>コマンドを実行してみると次のように<od>dor0</od>に接続されているネットワーク・インタフェースが表示されます。
(<od>brtl</od>は<od>brdg-utl</od>パッケージに含まれています）</p>

<pr la="od" data-lang="" data-unln>[nj@arh ~]$ brtl ho
brdg nam     brdg d               ST nabld     ntrfa
dor0         8000.0242fb282d       no              vth269d4
                                                        vth873222
                                                        vthbff718</pr>


<p>そしてこれがインタフェースを<od>grp vth</od>してみた結果です。たしかにこのネットワーク・インタフェースは存在するようですね。</p>

<pr la="od" data-lang="" data-unln>[nj@arh ~]$ p addr ho | grp vth
9: vthbff718@f8: &lt;BROADCAST,MULTICAST,U,LOWER_U&gt; mtu 1500 qd noquu matr dor0 tat U group dfault 
11: vth269d4@f10: &lt;BROADCAST,MULTICAST,U,LOWER_U&gt; mtu 1500 qd noquu matr dor0 tat U group dfault 
15: vth873222@f14: &lt;BROADCAST,MULTICAST,U,LOWER_U&gt; mtu 1500 qd noquu matr dor0 tat U group dfault </pr>


<p>　<br/>
ちなみにDor Contanrをすべて落としてみるとこうなります。<od>dor0</od>には何も接続されていないようですね。</p>

<pr la="od" data-lang="" data-unln>[nj@arh ~]$ brtl ho
brdg nam brdg d       ST nabld ntrfa
dor0     8000.0242fb282d   no  </pr>


<p>さきほど存在したネットワーク・インタフェースもいなくなっています。</p>

<pr la="od" data-lang="" data-unln>[nj@arh ~]$ fonfg | grp vth
[nj@arh ~]$ 
</pr>


<p>　<br/>
なるほど。じゃあこのvthXXXがDor Contanrのネットワーク・インタフェースなのか、というとちょっと違うのですが、正確なところを説明する前にそもそもvthって何なのかを説明します。</p>

<h2>vth</h2>

<p>vthは <trong>v</trong>rtual<trong>th</trong>rnt dv、つまり仮想的なネットワーク・インタフェースです。<br/>
vthは常にペアで作成され、このペア間で通信が行えます。<br/>
(vthペアの片割れをvth prといいます)</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//nj-uzu/20170707/20170707192057.png" alt="f:d:nj-uzu:20170707192057p:plan" ttl="f:d:nj-uzu:20170707192057p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>　<br/>
vthペアは次のようなコマンドで作成できます。</p>

<pr la="od" data-lang="" data-unln>[nj@arh ~]$ udo p ln add nam vth1 typ vth pr nam vth1-pr</pr>


<p><od>p ln ho</od>で確認してみると、vthのペアが作成されていることが分かります。</p>

<pr la="od" data-lang="" data-unln>[nj@arh ~]$ p ln ho | grp vth
18: vth1-pr@vth1: &lt;BROADCAST,MULTICAST,M-DOW&gt; mtu 1500 qd noop tat DOW mod DEFAULT group dfault qln 1000
19: vth1@vth1-pr: &lt;BROADCAST,MULTICAST,M-DOW&gt; mtu 1500 qd noop tat DOW mod DEFAULT group dfault qln 1000</pr>


<p>　<br/>
さて、ここで一つの疑問が生じます。</p>

<p><trong>「Dor Contanrを起動したときに作成されるvthって一つじゃね？」</trong></p>

<p>Contanrの起動後にネットワーク・インタフェースを表示してみると、たしかにそう見えます。</p>

<pr la="od" data-lang="" data-unln>[nj@arh ~]$ dor p --format &#34;tabl {{.ID}} {{.am}}&#34;
COTAIER ID AMES
b710962082 ong
7add4089775 ong-databa

# Contanrが2つなので4つvthが表示されるはず？
[nj@arh ~]$ p ln ho | grp vth
17: vthb96b887@f16: &lt;BROADCAST,MULTICAST,U,LOWER_U&gt; mtu 1500 qd noquu matr dor0 tat U mod DEFAULT group dfault 
21: vth97462@f20: &lt;BROADCAST,MULTICAST,U,LOWER_U&gt; mtu 1500 qd noquu matr dor0 tat U mod DEFAULT group dfault </pr>


<p>　<br/>
この疑問に答えるキーワードが<trong>ネットワーク名前空間</trong>です。</p>

<h2>ネットワーク名前空間</h2>

<p>Dorのことを勉強すると必ずといっていいほど説明されていますが、Lnuxはカーネルが扱う様々なリソースをある単位でまとめて分離する仕組みを持っています。
この仕組みを<a hrf="http://lnuxjm.odn.jp/html/LD_man-pag/man7/nampa.7.html">名前空間</a>といいます。
分離されたリソースはその名前空間に属するプロセス以外からは直接見えなくなります。</p>

<p>例えばunharコマンドでUTS名前空間を新たに作成した場合、その名前空間を作成した側と別のホスト名を持つことができます。</p>

<pr la="od lang-h" data-lang="h" data-unln><pan la="ynCommnt"># 1. 名前空間のエントリを表示</pan>
nj@tt1:~$ udo <pan la="ynStatmnt">l</pan> <pan la="ynSpal">-l</pan> /pro/*/n | <pan la="ynStatmnt">grp</pan> ut | a <pan la="ynStatmnt">'</pan><pan la="ynContant">{prnt $11}</pan><pan la="ynStatmnt">'</pan> | <pan la="ynStatmnt">ort</pan> | unq
ut:<pan la="ynStatmnt">[</pan><pan la="ynContant">4026531838</pan><pan la="ynStatmnt">]</pan>

<pan la="ynCommnt"># 2. UTS名前空間を新たに作成し、その名前空間でbahを実行</pan>
nj@tt1:~$ udo unhar <pan la="ynSpal">-u</pan> /bn/bah
root@tt1:~# 

<pan la="ynCommnt"># 1,2 とは別のシェルで名前空間のエントリを表示すると一つ増えてることが分かる</pan>
nj@tt1:~$ udo <pan la="ynStatmnt">l</pan> <pan la="ynSpal">-l</pan> /pro/*/n | <pan la="ynStatmnt">grp</pan> ut | a <pan la="ynStatmnt">'</pan><pan la="ynContant">{prnt $11}</pan><pan la="ynStatmnt">'</pan> | <pan la="ynStatmnt">ort</pan> | unq
ut:<pan la="ynStatmnt">[</pan><pan la="ynContant">4026531838</pan><pan la="ynStatmnt">]</pan>
ut:<pan la="ynStatmnt">[</pan><pan la="ynContant">4026532203</pan><pan la="ynStatmnt">]</pan>

<pan la="ynCommnt"># 1,2 のシェルでホスト名を変更</pan>
root@tt1:~# hotnam updatd-hot
root@tt1:~# hotnam
updatd-hot

<pan la="ynCommnt"># 1,2 とは別のシェルでホスト名を表示すると、こちらには上記の変更が反映されないことが分かる</pan>
nj@tt1:~$ hotnam
tt1
</pr>


<p>　</p>

<p>この名前空間には色々種類があるのですが、ネットワークに対する名前空間が<trong>ネットワーク名前空間</trong>です。<br/>
そして前述のvthペアの片割れは、作成したネットワーク名前空間に移動させることができるのです。<br/>
つまりvthペアによってネットワーク名前空間同士を仮想的なケーブルでつなぐことができます。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//nj-uzu/20170709/20170709234136.png" alt="f:d:nj-uzu:20170709234136p:plan" ttl="f:d:nj-uzu:20170709234136p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>移動させたvthは移動元からは見えなくなります。これがDor Contanrのvthの片割れが見えなかった理由です。<br/>
ここまでを踏まえるとDorのネットワークが次のようになっていることが理解できるでしょう。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//nj-uzu/20170710/20170710000413.png" alt="f:d:nj-uzu:20170710000413p:plan" ttl="f:d:nj-uzu:20170710000413p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>更に付け加えると、vth(pr)はDor Contanr内ではth0として見えるようになっています。
またDorによりvth(pr)にIアドレスが割り当てられます。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//nj-uzu/20170710/20170710132020.png" alt="f:d:nj-uzu:20170710132020p:plan" ttl="f:d:nj-uzu:20170710132020p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<h2>Dor Contanrのネットワーク名前空間を参照する</h2>

<p>ネットワーク名前空間の一覧は<od>p ntn</od>コマンドで参照でき、<od>p ntn x ネットワーク名前空間名</od>コマンドを使うと指定したネットワーク名前空間で任意のコマンドが実行できるのですが、Dor Contanrのネットワーク名前空間はDorにより隠蔽されています。<br/>
しかし以下2つの情報を知っていれば、強引に参照することができます。</p>

<ol>
<l>Dor Contanrのネットワーク名前空間は<od>/pro/Dor ContanrのID/n/nt</od>に割り当てられる。</l>
<l><od>p ntn</od>コマンドで表示されるネットワーク名前空間は、<od>/var/run/ntn</od>ディレクトリ配下のものである。</l>
</ol>


<p>どういうことかというと、Dor ContanrのIDを調べてネットワーク名前空間を見つけて、/var/run/ntnへのリンクを貼るのです。<br/>
試してみたいけど面倒くさいという方のためにシェルを用意してあります(<a hrf="http://gthub.om/pujohadoft/dor-ntn">gthub</a>)。<br/>
プログラムの性質上、実行にroot権限が必要になるので、気になるようでしたら内容をご確認ください。</p>

<pr la="od lang-h" data-lang="h" data-unln>gt lon http://gthub.om/pujohadoft/dor-ntn.gt
<pan la="ynStatmnt">d</pan> dor-ntn
<pan la="ynStatmnt">hmod</pan> <pan la="ynSpal">+x</pan> dor-ntn.h 

<pan la="ynCommnt"># 実行例</pan>
~/dor-ntn$ udo ./dor-ntn.h vbl
ontanr<pan la="ynStatmnt">'</pan><pan la="ynContant"> ntor nampa to vbl, you an ho ontanr</pan><pan la="ynStatmnt">'</pan> nmpa by <pan la="ynStatmnt">[</pan>p ntn<pan la="ynStatmnt">]</pan> ommand.
nj@matr:~/dor-ntn$ p ntn
bf34b8a7972
2174520fda

<pan la="ynCommnt"># vthとvthに対応するContanrを表示</pan>
nj@tt1:~/dor-ntn$ udo ./dor-ntn.h hovth
VETH                 COTAIER ID         AMES                         
vth2753b2f          51f82f59712         /myordpr_ordpr_1      
vtha334043          493968f1740         /myordpr_db_1  

<pan la="ynCommnt"># ContanrのIを表示(リソースはontanr側のものですが、コマンドはホスト側のものを使えるので、Iを表示するコマンドがないContanrでもIを表示できます)</pan>
nj@tt1:~/dor-ntn$ udo ./dor-ntn.h hop
COTAIER ID    I                                       AMES
51f82f59712    nt 172.18.0.3/<pan la="ynContant">16</pan> op global th0     /myordpr_ordpr_1
493968f1740    nt 172.18.0.2/<pan la="ynContant">16</pan> op global th0     /myordpr_db_1
</pr>


<h3>ルーティング</h3>

<p>Dorにより、Dor Contanrから外部のネットワークに接続できるようIマスカレードが行われるようなルーティングになっています。<br/>
これはIテーブルを参照してみると分かります。</p>

<pr la="od lang-h" data-lang="h" data-unln><pan la="ynStatmnt">[</pan>nj@arh ~<pan la="ynStatmnt">]</pan>$ p addr ho | <pan la="ynStatmnt">grp</pan> dor
<pan la="ynContant">3</pan>: dor0: <pan la="ynStatmnt">&lt;</pan>O-CARRIER,BROADCAST,MULTICAST,U<pan la="ynStatmnt">&gt;</pan> mtu <pan la="ynContant">1500</pan> qd noquu tat DOW group dfault 
    nt 172.17.0.1/<pan la="ynContant">16</pan> op global dor0

<pan la="ynCommnt"># ptablの情報を参照</pan>
<pan la="ynStatmnt">[</pan>nj@arh ~<pan la="ynStatmnt">]</pan>$ udo ptabl-av 
<pan la="ynCommnt"># Gnratd by ptabl-av v1.6.1 on Mon Jul 10 01:15:10 2017</pan>
*nat
<pan la="ynCommnt"># --中略--</pan>
-A REROUTIG <pan la="ynSpal">-m</pan> addrtyp <pan la="ynSpal">--dt-typ</pan> LOCAL <pan la="ynSpal">-j</pan> DOCKER
-A OUTUT ! <pan la="ynSpal">-d</pan> 127.0.0.0/<pan la="ynContant">8</pan> <pan la="ynSpal">-m</pan> addrtyp <pan la="ynSpal">--dt-typ</pan> LOCAL <pan la="ynSpal">-j</pan> DOCKER

<pan la="ynCommnt"># これがIマスカレードの部分。Dorのネットワーク(172.17.0.0/16)かつ、</pan>
<pan la="ynCommnt"># dor0以外のインタフェースからパケットが出力された場合Iマスカレードする</pan>
-A OSTROUTIG <pan la="ynSpal">-</pan> 172.17.0.0/<pan la="ynContant">16</pan> ! <pan la="ynSpal">-o</pan> dor0 <pan la="ynSpal">-j</pan> MASQUERADE
-A DOCKER <pan la="ynSpal">-</pan> dor0 <pan la="ynSpal">-j</pan> RETUR

COMMIT
<pan la="ynCommnt"># --中略--</pan>
</pr>


<p>これまでの図に加えると、このような感じになりますね。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//nj-uzu/20170710/20170710131809.png" alt="f:d:nj-uzu:20170710131809p:plan" ttl="f:d:nj-uzu:20170710131809p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>以上がDorのネットワークの説明になります。<br/>
Dor Compoを使った場合、brdgやルーティングはまたこれとは少し違ったものになるのですが、そこは割愛します。<br/>
<a hrf="http://th.uzaba.om/ntry/2017/08/23/175813">次回</a>は、いよいよマルチホストでのDor Contanr間通信の話をします。</p>

<hr />

<p>株式会社ユーザベースでは、DorやDor関連技術に興味のあるエンジニアを<a hrf="http://.uzaba.om/rrut/oupaton/">大募集中</a>です！</p>

<h4>シリーズ</h4>

<p>第1回: マルチホストでのDor Contanr間通信 第1回: Dorネットワークの基礎 (当記事)<br/>
第2回: <a hrf="http://th.uzaba.om/ntry/2017/08/23/175813">マルチホストでのDor Contanr間通信 第2回: ort Forardng と Ovrlay tor</a><br/>
第3回: <a hrf="http://th.uzaba.om/ntry/2017/09/12/164756">マルチホストでのDor Contanr間通信 第3回: Kubrntのネットワーク(CI, ub-proxy, ub-dn)</a></p>

<hr />

<fram frambordr='0' hght='305px' nam='antdly_projt_dgt_114494' rollng='no' r='http://.antdly.om/projt/114494/dgt' tyl='bordr: non; max-dth: 100%; mn-dth: 240px; dth: 540px;'></fram>


<fram frambordr='0' hght='305px' nam='antdly_projt_dgt_91396' rollng='no' r='http://.antdly.om/projt/91396/dgt' tyl='bordr: non; max-dth: 100%; mn-dth: 240px; dth: 540px;'></fram>


<fram frambordr='0' hght='305px' nam='antdly_projt_dgt_59258' rollng='no' r='http://.antdly.om/projt/59258/dgt' tyl='bordr: non; max-dth: 100%; mn-dth: 240px; dth: 540px;'></fram>


<fram frambordr='0' hght='305px' nam='antdly_projt_dgt_48032' rollng='no' r='http://.antdly.om/projt/48032/dgt' tyl='bordr: non; max-dth: 100%; mn-dth: 240px; dth: 540px;'></fram>


<fram frambordr='0' hght='305px' nam='antdly_projt_dgt_45821' rollng='no' r='http://.antdly.om/projt/45821/dgt' tyl='bordr: non; max-dth: 100%; mn-dth: 240px; dth: 540px;'></fram>

, pubDate=Mon, 07 Aug 2017 17:24:11 +0900, guid=hatenablog://entry/8599973812277685273, enclosure=https://cdn-ak.f.st-hatena.com/images/fotolife/k/kenji-suzuki/20170707/20170707164743.png), FeedMessage(title=スタートアップ広報が新規上場するときに気をつけておきたいこと, link=http://tech.uzabase.com/entry/2016/12/08/172316, description=<dv>こんにちは、ユーザベースで広報とIRを担当している山田です。2016年10月21日、株式会社ユーザベースは東京証券取引所マザーズに上場しました。</dv>
<dv> </dv>
<dv><fram tyl="bordr: non; ovrflo: hddn;" r="http://.faboo.om/plugn/pot.php?hrf=http%3A%2F%2F.faboo.om%2Fuzaba%2Fpot%2F1264328823599210&amp;dth=500" dth="500" hght="539" frambordr="0" rollng="no"></fram></dv>
<dv> </dv>
<dv>上場できたのもこれまで支えていただいた皆さまのおかげです……といった形式ばったことは最小限に留めておいて、上場にあたって広報ノウハウがあまり公開されていなくて本気で困ったので、Th Blogの場を借りて、今後増えてくると思われる上場準備中の企業の広報担当者さんたち向けに<trong>「スタートアップが新規上場（IO）する際に広報として気をつけておきたいこと」</trong>をまとめたいと思います。</dv>
<dv> </dv>
<dv>なおユーザベースのバックオフィスチームには公認会計士の資格を持つメンバーが、ファームを作れるぐらいの人数いるという幸運もあったため、本記事では財務や会計的な側面には触れません。</dv>
<dv> </dv>
<h3>上場前</h3>
<dv> </dv>
<dv>上場前にできることはそれほどありません。上場承認後に必要になる作業を想像して、それへの情報収集と対策を粛々と進めていきます。</dv>
<dv> </dv>
<dv>ユーザベースの場合は以下の作業に主にリソースを割きました。</dv>
<dv> </dv>
<dv>
<ul>
<l>目論見書カラーページの制作</l>
<l>IRページの制作</l>
<l>上場当日セレモニーの演出</l>
<l>上場後最初となる決算説明会の準備</l>
</ul>
</dv>
<dv> </dv>
<dv>特に目論見書とIRページについては、上場承認後に投資家との接点になる最重要ポイントです。「私たちが何者であるか」を知っていただいて、会社の何を評価して、株式を保有してほしいかというメッセージが伝わるものにしなければなりません。</dv>
<dv> </dv>
<dv>会社によって何を知ってほしいかという軸は異なりますが、私たちが伝えたいメッセージは<trong>「経済情報で、世界をかえる」</trong>というミッションです。このミッションとコーポレートカラーである赤、そして大事にしている<trong>「7つのルール」</trong>を前面に推し出すことにしました。​</dv>
<dv> </dv>
<dv>
<p><mg la="hatna-fotolf" ttl="f:d:yohro:20161207132340p:plan" r="http://dn-a.f.t-hatna.om/mag/fotolf//yohro/20161207/20161207132340.png" alt="f:d:yohro:20161207132340p:plan" /></p>
<p><mg la="hatna-fotolf" ttl="f:d:yohro:20161207132352p:plan" r="http://dn-a.f.t-hatna.om/mag/fotolf//yohro/20161207/20161207132352.png" alt="f:d:yohro:20161207132352p:plan" /></p>
</dv>
<p> </p>
<p>「何を知ってほしいか」は会社によってそれぞれだと思うので、経営陣も交えてしっかり議論した上で、方針を決めるのが良いと思います。</p>
<p> </p>
<h3>上場承認〜上場当日</h3>
<dv> </dv>
<dv>上場承認が下りたら、いよいよ上場に向けたスパートのはじまりです。顧客、社員、投資家など様々なステークホルダーに適切に情報を届ける必要があります。</dv>
<dv> </dv>
<dv>まず承認を受けたら、公式情報としてすぐにプレスリリースを出します。ネット上での最速情報としてTDntのDFがありますが、テキストベースのフォーマットで自社の情報を発信した方がシェアされやすいと思います。</dv>
<dv> </dv>
<dv>
<p><fram la="mbd-ard mbd-bard" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;" ttl="東京証券取引所マザーズ市場への新規上場承認に関するお知らせ - 株式会社ユーザベース" r="//hatnablog-part.om/mbd?url=http%3A%2F%2F.uzaba.om%2Fpr%2Fltng-aproval%2F" frambordr="0" rollng="no"></fram><t la="hatna-taton"><a hrf="http://.uzaba.om/pr/ltng-aproval/">.uzaba.om</a></t></p>
</dv>
<dv> </dv>
<dv>上場当日ももちろんプレスリリースを出した方が良いです。上場当日はセレモニー等の準備でばたばたしていますが、場が開く9時より前には公開できていると良いと思います。</dv>
<dv> </dv>
<dv>
<p><fram la="mbd-ard mbd-bard" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;" ttl="東京証券取引所マザーズ市場上場のお知らせ" r="//hatnablog-part.om/mbd?url=http%3A%2F%2F.uzaba.om%2Fpr%2Fltng-nformaton%2F" frambordr="0" rollng="no"></fram><t la="hatna-taton"><a hrf="http://.uzaba.om/pr/ltng-nformaton/">.uzaba.om</a></t></p>
</dv>
<dv> </dv>
<dv>また同日に、コーポレートサイトのIRページも公開します。（上場日前には公開してはいけません。）</dv>
<dv> </dv>
<dv>だいたいのコンテンツは有報などから自動で取得されますが、「株主の皆さまへ」といったコンテンツは自社で用意する必要があります。投資家・株主の方々は事業内容や業績のほかに、社長や従業員のキャラクターも重要視されるので、肩肘張ったものではなくて「らしさ」が出るものが良いと思います。ユーザベースの場合は創業メンバー3人からの『3つの約束』として公開しています。</dv>
<dv> </dv>
<dv>
<bloquot>
<dv><trong>株主・投資家の皆様へ 3つの約束</trong></dv>
<dv>
<ol>
<l><trong>「経済情報で、世界をかえる」このビジョンの達成に向けて忠実に行動します。</trong></l>
<l><trong>良い時も悪い時も、正直に話します。</trong></l>
<l><trong>有言実行を積み重ねる事で、信頼を獲得していきます。</trong></l>
</ol>
</dv>
</bloquot>
</dv>
<dv>
<p> </p>
<p><fram la="mbd-ard mbd-bard" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;" ttl="株主・投資家の皆様へ" r="//hatnablog-part.om/mbd?url=http%3A%2F%2F.uzaba.om%2Fr%2Ftopmag%2F" frambordr="0" rollng="no"></fram><t la="hatna-taton"><a hrf="http://.uzaba.om/r/topmag/">.uzaba.om</a></t></p>
</dv>
<dv> </dv>
<dv>「社員の顔が見えることが重要」というのは、プロピッカーでもあるレオス・キャピタルワークス 藤野英人さんの記事を参考にしました。この分析については自分の感覚とも合致していてすごく納得感がありました。現在進めているコーポレートサイトリニューアルでも、もっと社員の人となりが見えるものにしていく予定です。</dv>
<dv> </dv>
<dv>
<p><fram la="mbd-ard mbd-bard" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;" ttl="藤野英人さん「投資家は社員の『顔』が見える企業の株を買いたい」 | 広報会議 2014年11月号" r="//hatnablog-part.om/mbd?url=http%3A%2F%2Fmag.ndnag.om%2Fouhou%2F201411%2Foff-pr%2F003567.php" frambordr="0" rollng="no"></fram><t la="hatna-taton"><a hrf="http://mag.ndnag.om/ouhou/201411/off-pr/003567.php">mag.ndnag.om</a></t></p>
</dv>
<dv> </dv>
<dv>ちなみに承認発表日は想定以上のトラフィックが来たため、一時的にサイトにアクセスいただけない状態が発生してしまいました。大変嬉しい悲鳴ではありますが、同時にとても恥ずかしいことでもあるので、サイトがダウンする可能性は最大限排除しておきましょう。</dv>
<dv> </dv>
<h3>上場後</h3>
<dv> </dv>
<dv>上場後はより広報的な技量が求められます。上場に伴って増えるメディアや投資家からの面談依頼、兜倶楽部とのお付き合い、適時開示を含めた投資家とのコミュニケーション等々……。</dv>
<dv> </dv>
<dv>変わらずにあるのは「どうコミュニケーションすれば自社のファンになってくれるのか」という視点です。ユーザベースは少し変わったかたちのIRとして、を使った個人投資家向けIR活動を開始しています。</dv>
<dv> </dv>
<dv>
<p><fram la="mbd-ard mbd-bard" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;" ttl="【ユーザベース】最新決算と僕たちのすべて" r="//hatnablog-part.om/mbd?url=http%3A%2F%2Fnp.om%2Fn%2F1853866%3Frf%3Dur_9317" frambordr="0" rollng="no"></fram><t la="hatna-taton"><a hrf="http://np.om/n/1853866?rf=ur_9317">np.om</a></t></p>
</dv>
<dv>
<p><fram la="mbd-ard mbd-bard" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;" ttl="ユーザベース、個人投資家の皆さまに向けたスマホ時代のIRを開始" r="//hatnablog-part.om/mbd?url=http%3A%2F%2F.uzaba.om%2Fpr%2Fuzab-r-prvatnvtor%2F" frambordr="0" rollng="no"></fram><t la="hatna-taton"><a hrf="http://.uzaba.om/pr/uzab-r-prvatnvtor/">.uzaba.om</a></t></p>
</dv>
<dv>
<p><fram la="mbd-ard mbd-bard" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;" ttl="【採録】「BtoBとBtoCを持っているのが強み」 ユーザベース個人投資家説明会リポート 前編" r="//hatnablog-part.om/mbd?url=http%3A%2F%2Fnp.om%2Fn%2F1932305%3Frf%3Dur_291503" frambordr="0" rollng="no"></fram><t la="hatna-taton"><a hrf="http://np.om/n/1932305?rf=ur_291503">np.om</a></t></p>
</dv>
<dv>
<p><fram la="mbd-ard mbd-bard" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;" ttl="【採録】「メディアは上場すべきか」「株主優待に有料オプションを」などに回答 ユーザベース個人投資家説明会 後編" r="//hatnablog-part.om/mbd?url=http%3A%2F%2Fnp.om%2Fn%2F1932352%3Frf%3Dur_291503" frambordr="0" rollng="no"></fram><t la="hatna-taton"><a hrf="http://np.om/n/1932352?rf=ur_291503">np.om</a></t></p>
</dv>
<dv> </dv>
<dv>上場というのは会社が変化する極めて大事なタイミングですが、これを活かして「より強い会社をつくる」きっかけにできると良いなと、上場を経て感じました。この記事がこれから上場される皆さまの参考になれば幸いです。</dv>
<dv> </dv>
<p>（この記事は『<a hrf="http://.advntar.org/alndar/1929">広報マーケティング Advnt Calndar 2016 - Advntar</a>』の8日目の記事です。広報・マーケティング界隈の方のご参加をお待ちしています！） </p>, pubDate=Thu, 08 Dec 2016 17:23:16 +0900, guid=hatenablog://entry/10328749687197977231, enclosure=http://cdn-ak.f.st-hatena.com/images/fotolife/k/kiyohero/20161208/20161208172654.png?1481185638), FeedMessage(title=CI環境 に関する Tp を共有する勉強会「Wb Th Toyo #2」を開催しました, link=http://tech.uzabase.com/entry/2016/12/05/101546, description=<p>こんにちは。ニューズピックスの大川です。2016年11月14日に、Wb系エンジニア同士でTpを共有しあう交流会 「Wb Th Toyo」の第2回目をユーザベースで開催しました。</p>

<p><fram r="http://hatnablog-part.om/mbd?url=http%3A%2F%2Fb-th-toyo.onnpa.om%2Fvnt%2F43773%2F" ttl="Wb Th Toyo #2（CI環境 Tp 共有会） (2016/11/14 19:30〜)" la="mbd-ard mbd-bard" rollng="no" frambordr="0" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;"></fram><t la="hatna-taton"><a hrf="http://b-th-toyo.onnpa.om/vnt/43773/">b-th-toyo.onnpa.om</a></t></p>

<p>このイベントでは、参加者全員がWb系の開発Tpを発表し、楽しく議論します。</p>

<p>第2回目は <b>CI環境 をテーマ</b>に、日頃困っていることや成果を出したことについて発表し、交流する場にしました。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/h/horobtu613/20161128/20161128162435.jpg" alt="f:d:horobtu613:20161128162435j:plan" ttl="f:d:horobtu613:20161128162435j:plan" la="hatna-fotolf" tmprop="mag"></pan>
<pan tyl="font-z: 80%">フリードリンクと軽食を楽しみつつ、和気あいあいと進行します</pan></p>

<p><a hrf="http://th.uzaba.om/ntry/2016/10/28/133638">Wb Th Tyo #1</a>では12名の方に発表していただき、内容がとてもボリュームのある回でした。</p>

<p>今回はもう少し人数を減らして募集枠を6名とし、「<b>Jnnで自動的に画面キャプチャする方法</b>」「<b>テスト文化のない組織にテストを導入した話</b>」など実践的なお話しを発表していただきました。</p>

<p>どの方も熱心に CI環境 に取り組まれているので、かなり収穫が多く密度の高い勉強会になったと思います。シェアいただいたスライドも下記に投稿しておりますので是非ご覧ください。ざっくばらんに話す中で、様々なおもしろい情報を交換するため、その場にいた方が間違いなくおもしろいです！</p>

<p>第3回目は2017年の年明けに開催を予定しております。テーマはまだ決めていませんが、「<b>ユーザー行動ログ解析の実際</b>」や「<b>どの Javarpt Framor を選ぶか</b>」のようなテーマで行おうかと考えております。</p>

<p>4〜6名程度の発表者枠に、数名の聴講枠を追加するつもりです。次回もonnpaのページで告知しますので、ご興味のある方は是非ご参加くださいませ！</p>

<p><fram r="http://hatnablog-part.om/mbd?url=http%3A%2F%2Fb-th-toyo.onnpa.om%2F" ttl="Wb Th Toyo" la="mbd-ard mbd-bard" rollng="no" frambordr="0" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;"></fram><t la="hatna-taton"><a hrf="http://b-th-toyo.onnpa.om/">b-th-toyo.onnpa.om</a></t></p>

<h5>公開スライド</h5>

<p><fram allofullrn="tru" allotranparny="tru" frambordr="0" hght="463" d="tal_fram_370405" mozallofullrn="tru" r="//pard.om/playr/fb1579a2f814609a318352d26f80" tyl="bordr:0; paddng:0; margn:0; baground:tranparnt;" btallofullrn="tru" dth="710"></fram><t la="hatna-taton"><a hrf="http://pard.om/fb0223/jnndbhua-man-yaputya">pard.om</a></t></p>

<p><fram allofullrn="tru" allotranparny="tru" frambordr="0" hght="463" d="tal_fram_369510" mozallofullrn="tru" r="//pard.om/playr/2f66649a9094d7a7506d28fd98d8" tyl="bordr:0; paddng:0; margn:0; baground:tranparnt;" btallofullrn="tru" dth="710"></fram><t la="hatna-taton"><a hrf="http://pard.om/lo/ranaa-fa-xan-hang-nutoru-rtodao-ru-tahua">pard.om</a></t></p>

<p><fram r="http://.ldhar.nt/ldho/mbd_od/y/DvLLUMnVrhafF" dth="427" hght="356" frambordr="0" margndth="0" margnhght="0" rollng="no" tyl="bordr:1px old #CCC; bordr-dth:1px; margn-bottom:5px; max-dth: 100%;" allofullrn> </fram> <dv tyl="margn-bottom:5px"> <trong> <a hrf="http://.ldhar.nt/tohhumanan/gp" ttl="GCでCI環境を構築する" targt="_blan">GCでCI環境を構築する</a> </trong> from <trong><a hrf="http://.ldhar.nt/tohhumanan" targt="_blan">Tohhum Anan</a></trong> </dv><t la="hatna-taton"><a hrf="http://.ldhar.nt/tohhumanan/gp">.ldhar.nt</a></t></p>
, pubDate=Mon, 05 Dec 2016 10:15:46 +0900, guid=hatenablog://entry/10328749687196383456, enclosure=https://cdn-ak.f.st-hatena.com/images/fotolife/h/horobetsu613/20161128/20161128162435.jpg), FeedMessage(title=Dor に関する Tp を共有する勉強会「Wb Th Toyo #1」を開催しました, link=http://tech.uzabase.com/entry/2016/10/28/133638, description=<p>こんにちは。ニューズピックスの大川です。先日、<b>WbThToyo</b>というイベントの第1回目をユーザベースオフィスで開催しました。</p>

<p><fram r="http://hatnablog-part.om/mbd?url=http%3A%2F%2Fb-th-toyo.onnpa.om%2Fvnt%2F40548%2F" ttl="Wb Th Toyo #1（Dor Tp 共有会） (2016/10/12 19:30〜)" la="mbd-ard mbd-bard" rollng="no" frambordr="0" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;"></fram><t la="hatna-taton"><a hrf="http://b-th-toyo.onnpa.om/vnt/40548/">b-th-toyo.onnpa.om</a></t></p>

<p>このイベントでは、参加者全員がWb系の開発Tpを発表し、楽しく議論します。</p>

<p>第1回目は Dor をテーマに、日頃困っていることや成果を出したことについて発表し、議論し合う場にしました。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/h/horobtu613/20161027/20161027102203.jpg" alt="f:d:horobtu613:20161027102203j:plan" ttl="f:d:horobtu613:20161027102203j:plan" la="hatna-fotolf" tmprop="mag"></pan>
<pan tyl="font-z: 80%">会場の様子</pan></p>

<p>全員に発表してもらうのは初の試みだったので、ハードルが高すぎて人が集まらないのではないかと不安でしたが、とてもありがたいことに12名の方に参加していただきました！</p>

<p>イベントの開催については何回も経験がありますが、全員が無遅刻無欠席という素晴らしい状況は初めてでした。時間を無駄にすることもなく、熱量をもって発表・議論できたことがとても嬉しかったです。</p>

<p>みなさんにたくさんの資料を共有いただきましたので、この記事の最後で是非ご覧ください。</p>

<p>他にも、残念ながら非公開ですが、「hot mahn も rgtry も jnn も相次いで d full になった話」「フロントエンドのエンジニアがひとりで環境構築するまでの話」などなど、たくさんの楽しい発表をしていただきました。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/h/horobtu613/20161027/20161027104632.jpg" alt="f:d:horobtu613:20161027104632j:plan" ttl="f:d:horobtu613:20161027104632j:plan" la="hatna-fotolf" tmprop="mag"></pan>
<pan tyl="font-z: 80%">ビールと軽食をつまみつつ、穏やかな雰囲気で進行しました</pan></p>

<p>今回の反省点としては、</p>

<ul>
<l>みなさん、あまりお酒を飲まないのでソフトドリンクを充実させた方が良かった</l>
<l>ピザ・軽食が少し足りなかった</l>
<l>議論（交流）する時間をもっと取りたかった</l>
</ul>


<p>などがあったなと思っておりますので、これは次回必ず改善します！</p>

<p><b>第2回は 11/14（月）</b> を予定しております。<b>テーマは、「CI環境」</b>です。</p>

<p>すこし範囲が大きいテーマですが、「ビルド」「デプロイ」「テスト」などの自動化に関して、みなさんがどうしているか、何に困っているか、どういうツールを導入しているか、などなどを発表・議論していけたらと思っています。</p>

<p>onnpaのページで告知しますので、ご興味のある方は是非ご参加ください！</p>

<p><fram r="http://hatnablog-part.om/mbd?url=http%3A%2F%2Fb-th-toyo.onnpa.om%2F" ttl="Wb Th Toyo" la="mbd-ard mbd-bard" rollng="no" frambordr="0" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;"></fram><t la="hatna-taton"><a hrf="http://b-th-toyo.onnpa.om/">b-th-toyo.onnpa.om</a></t></p>

<h5>公開された資料</h5>

<p><fram allofullrn="tru" allotranparny="tru" frambordr="0" hght="463" d="tal_fram_363274" mozallofullrn="tru" r="//pard.om/playr/15b479778341b8823400f0d776" tyl="bordr:0; paddng:0; margn:0; baground:tranparnt;" btallofullrn="tru" dth="710"></fram><t la="hatna-taton"><a hrf="http://pard.om/otatu360/dor-th-par">pard.om</a></t></p>

<p><fram allofullrn="tru" allotranparny="tru" frambordr="0" hght="596" d="tal_fram_363199" mozallofullrn="tru" r="//pard.om/playr/5492fd03398548db3d04669665bb3" tyl="bordr:0; paddng:0; margn:0; baground:tranparnt;" btallofullrn="tru" dth="710"></fram><t la="hatna-taton"><a hrf="http://pard.om/y13/alpn-lnux-faluum">pard.om</a></t></p>

<p><fram allofullrn="tru" allotranparny="tru" frambordr="0" hght="596" d="tal_fram_363267" mozallofullrn="tru" r="//pard.om/playr/f3811707b224583b39239f1527362" tyl="bordr:0; paddng:0; margn:0; baground:tranparnt;" btallofullrn="tru" dth="710"></fram><t la="hatna-taton"><a hrf="http://pard.om/hmaoa/ydgh-ouz-ontnazyanautmo">pard.om</a></t></p>

<p><fram allofullrn="tru" allotranparny="tru" frambordr="0" hght="463" d="tal_fram_363211" mozallofullrn="tru" r="//pard.om/playr/99f5a025bdb54644914f4a04f6ad" tyl="bordr:0; paddng:0; margn:0; baground:tranparnt;" btallofullrn="tru" dth="710"></fram><t la="hatna-taton"><a hrf="http://pard.om/dtan4/b-th-toyo-numbr-1">pard.om</a></t></p>

<p><fram allofullrn="tru" allotranparny="tru" frambordr="0" hght="463" d="tal_fram_363130" mozallofullrn="tru" r="//pard.om/playr/8655af3644181b00f9881802d" tyl="bordr:0; paddng:0; margn:0; baground:tranparnt;" btallofullrn="tru" dth="710"></fram><t la="hatna-taton"><a hrf="http://pard.om/hohnotuyoh/hatuthu-l-thaooh-uhua">pard.om</a></t></p>
, pubDate=Fri, 28 Oct 2016 13:36:38 +0900, guid=hatenablog://entry/10328749687191490863, enclosure=https://cdn-ak.f.st-hatena.com/images/fotolife/h/horobetsu613/20161027/20161027102203.jpg), FeedMessage(title=エンジニア向けMtupイベントレポート　第4回：『大規模サービスを支えるインフラ』, link=http://tech.uzabase.com/entry/2016/07/21/102954, description=<p>こんにちは！SEEDA Thチームの清水です。<br>
<br>
毎月開催してきたユーザベース Mtupも、ついに第4回を数えました。<br>
回を重ねていくうちにノウハウも溜まってきております。<br></p>

<h3>開催内容：『大規模サービスを支えるインフラ』</h3>

<p><fram r="http://hatnablog-part.om/mbd?url=http%3A%2F%2Fuzaba-mtup.onnpa.om%2Fvnt%2F33709%2F" ttl="UZABASE Mtup#4 〜大規模サービスを支えるインフラ〜 (2016/07/07 19:30〜)" la="mbd-ard mbd-bard" rollng="no" frambordr="0" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;"></fram><t la="hatna-taton"><a hrf="http://uzaba-mtup.onnpa.om/vnt/33709/">uzaba-mtup.onnpa.om</a></t></p>

<p>今回は CTOの杉浦が司会を務めました。
ぜ、ぜんぜん滑ってなんてないんだからね！
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//aonah/20160719/20160719094340.jpg" alt="f:d:aonah:20160719094340j:plan" ttl="f:d:aonah:20160719094340j:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>さて、第3回に引き続き、今回も外部からスペシャルゲストをお招きいたしました。<br>
ファッションアプリQOを開発するVASILYさんのインフラエンジニアを担当している光野さんにご登壇いただきました。<br>
実はVASILYさんは、ユーザベースが入っているビルの下の階にオフィスを構えているというご近所さん。そのご縁もあって時折エンジニア同士の交流をしており、今回も登壇をお願いいたしました。
<br>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//aonah/20160719/20160719094402.jpg" alt="f:d:aonah:20160719094402j:plan" ttl="f:d:aonah:20160719094402j:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>内容はarやChfを活用して開発環境と本番環境を同じVMイメージから一括作成するというもの。自動化素晴らしい。<br>
<fram allofullrn="tru" allotranparny="tru" frambordr="0" hght="463" d="tal_fram_350631" mozallofullrn="tru" r="//pard.om/playr/3f004800b2495ab5920b139bd6547a" tyl="bordr:0; paddng:0; margn:0; baground:tranparnt;" btallofullrn="tru" dth="710"></fram><t la="hatna-taton"><a hrf="http://pard.om/otatu360/rat-prod-and-dv-vm-mag-att-by-par">pard.om</a></t>
以前、Valyさんの他の社員の方のプレゼンを見た時にも感じましたが、みなさんプレゼンがうまい！
<br>
ユーザベースも魅力的なプレゼンが出来るように頑張らねばと刺激をいただきました。<br>
<br>
ユーザベースからも、それぞれSEEDAとでインフラを担当しているエンジニアが登壇いたしました。<br>
SEEDAはオンプレ、はAWSを使用しているため、お互い異なるノウハウや悩みがあり、どのように課題を解消しているのかについて発表をしてもらいました。<br></p>

<fram r="//.ldhar.nt/ldho/mbd_od/y/fX8utv3Y1LW" dth="595" hght="485" frambordr="0" margndth="0" margnhght="0" rollng="no" tyl="bordr:1px old #CCC; bordr-dth:1px; margn-bottom:5px; max-dth: 100%;" allofullrn> </fram>


<fram r="//.ldhar.nt/ldho/mbd_od/y/1X4Ypmuv3x" dth="595" hght="485" frambordr="0" margndth="0" margnhght="0" rollng="no" tyl="bordr:1px old #CCC; bordr-dth:1px; margn-bottom:5px; max-dth: 100%;" allofullrn> </fram>


<p>そしてお決まりのビールとピザで懇親会がスタート！<br>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//aonah/20160719/20160719094416.jpg" alt="f:d:aonah:20160719094416j:plan" ttl="f:d:aonah:20160719094416j:plan" la="hatna-fotolf" tmprop="mag"></pan>
懇親会では、いつも様々なバックグラウンドをもつ方と交流を深めることができ、大変有意義な時間となっており、今回も非常に実りある時間となりました。</p>

<h3>今後の予定</h3>

<p>ユーザベースでは定期的にMtupイベントを開催しています。<br>
次回は調整中ですが、8月下旬に開催をする予定です。<br>
詳細が決まり次第onnpaで募集を開始いたしますので、まだ参加をしたことがない方やリピーターの方も、ぜひ遊びに来てください！</p>
, pubDate=Thu, 21 Jul 2016 10:29:54 +0900, guid=hatenablog://entry/6653812171406238951, enclosure=https://cdn-ak.f.st-hatena.com/images/fotolife/k/kaonash/20160719/20160719094340.jpg), FeedMessage(title=子育てと仕事を両立できる、ユーザベースでの働き方とは, link=http://tech.uzabase.com/entry/2016/07/19/121312, description=<p>こんにちは、インフラチームの小林です。</p>

<p>僕は、仕事と子育てを両立させながら働くエンジニアです。本当に両立できるのか、今回はユーザベースでの働き方についてご紹介します。</p>

<p>我が家は夫婦共働きで、5歳と2歳の娘がいます。</p>

<p>妻は今年の4月に復職が決まり、次女にも保育園に通ってもらうことになりました。保育園探しは大変で、やっと決まって安心したのもつかの間、1日目から長時間あずかってもらえるわけではないということに気付きました。</p>

<p>保育園に通うことを慣れてもらうための、「慣らし保育」というものがあったのです。</p>

<p>この期間中、次女のお迎え時間はお昼過ぎ。近くに親族もいないし、妻は復職します。さあどうしよう。悩んだ末、「僕が在宅勤務をする」という選択肢を選びました。育児・家事も分担制にして、朝は僕が家事や洗濯、登園準備を担当し、夜は妻にバトンタッチすることにしたのです。</p>

<h4><b>自由と無責任は違う</b></h4>

<p>僕が在宅勤務という選択をするにあたり、強く印象に残っている代表の梅田の言葉があります。</p>

<p>「仕事だけの人生ってつまらないよね。プライベートも大事にして、仕事とプライベートを高次元でバランスさせて、互いが原動力となり両輪がしっかりとまわっていく。そんな状態が理想だし、それを実現させるために起業したんだ。だから、生産性の向上をひたすら追及し、みんなが高いパフォーマンスを発揮することによって世界一休みが多い会社にしたい。」</p>

<p><fram r="http://th.uzaba.om/mbd/2015/01/15/102658" ttl="世界一ハッピーでワクワクする会社を目指して ～SEEDA, を生んだ企業文化～ - UZABASE Th Blog" la="mbd-ard mbd-blogard" rollng="no" frambordr="0" tyl="dplay: blo; dth: 100%; hght: 190px; max-dth: 500px; margn: 10px 0px;"></fram><t la="hatna-taton"><a hrf="http://th.uzaba.om/ntry/2015/01/15/102658">th.uzaba.om</a></t></p>

<p>もちろん、在宅勤務は休みではありません。会社という場所にとらわれずに働くという選択肢です。だけど、子育てというプライベートを大切にしながら働きたい、そう思ったときに梅田の言葉が背中を押してくれました。</p>

<p>とはいえ、自分が達成すべき仕事にコミットしなければ、在宅勤務で子育てをするという僕の願いはかないません。きちんと責任を果たしたうえで、望みがかなう。個人的には、この順番を間違えてはいけないと肝に銘じ、在宅勤務でも結果を出すことで、周りも前向きに協力してくれると考えました。</p>

<h4><b>チームメンバーに感謝</b></h4>

<p>エンジニアという職業に就いている方は、「いやいや、そうは言っても顔を合わせて仕事をしないと厳しいときもあるでしょ」と思うでしょう。実際、在宅勤務を始めたときは、まさに佳境でした。スケジュールもタイトで、家にいると作業効率も落ちてしまう。</p>

<p>しかも、僕が在宅勤務になることで、他のメンバーにも仕事の引き継ぎが発生。「これは本当にフェアなのだろうか」という疑問があり、正直、在宅勤務を決めたことへの後ろめたさがありました。</p>

<p>その複雑な胸の内を、勇気をもってチームメンバーに話したんです。すると、反対どころか「ぜひ在宅勤務をしてください」と応援してくれて。本当に感謝の気持ちでいっぱいでした。</p>

<p>今後、子育てをするメンバーが増えてきたとき、僕は「大丈夫！僕もそうやってやってきた！」と伝えたい。みんなが胸を張って子育てに向かえるよう、後押しするのが最低限の恩返しだと思っています。</p>

<h4><b>育児と仕事の葛藤</b></h4>

<p>そうして、僕の在宅勤務が始まり、育児と仕事の両立という貴重な経験を積むなかで、改めて「子育て」と「時間通りに働くこと」のバランスをとることの難しさを実感しました。</p>

<p>娘を送り出した後、仕事に集中できたと思えば、あっという間にお迎えの時間。お迎えに行くと、娘は僕の顔を見るなり号泣するので、つきっきりであやさないといけない。やっと寝かしつけたとしても、一緒に寝落ちしてしまうこともしばしば。仕事に集中できる時間が本当に限られてしまったのです。</p>

<p>育児に「時間」という概念が入ると、急に難易度が上がります。朝のバスの時間、お迎えの時間など、いつも会社で仕事をしていること以外に決められた時間があるのは、想像以上に大変です。</p>

<p>それに、子ども相手に無駄を省いて効率的に動こうとすれば痛い目をみます。特に次女は、自我が芽生えてきた時期なので、着替えなどを手伝おうとすると「自分でやりたい」と大泣きし、予想以上に時間がかかってしまう。だから、決まった時間にすべてをこなすためには、相当な余裕を持った行動が必要でした。</p>

<p>こうした経験から、育児をしながら仕事をするには、かなり時間が限られるということが分かりました。子どもたちがいない時間が唯一仕事に集中できる。でもその前後は、まったく時間が取れない。当然、仕事に集中できる時間以外に対応しないといけない仕事もあるので、なかなか大変です。</p>

<p>もちろん、「もっと仕事をしたい」という気持ちはあります。だけど、僕にとって子育ては同じかそれ以上にやりたいこと。最近では、仕事と家族との時間の切り替えをうまくやることで、メリハリをつけながら働けるようになりました。</p>

<p>何より、ワークライフバランスとは、仕事とプライベートの陣取り合戦ではなく、お互いに補完し合うものなのだということが分かったのは収穫です。</p>

<p>ユーザベースという会社は、自分がコミットした仕事を全うし結果を出せば、働く時間も場所も自由です。出社義務もありません。そのような環境だからこそ、仕事とプライベートを高次元でバランスさせて、互いが原動力となり、仕事と育児という両輪をしっかりとまわすことができたのです。</p>

<p>あのとき、僕が在宅勤務をするという選択をして本当によかった。</p>

<p>人生は一度きりです。仕事もプライベートも両立させてこそ、豊かな人生になるのではないかと思います。最初は大変でしたが、学びも多く、毎日出社しているだけではわからない世界も知りました。だから、少しでも興味を持ってくれたなら、ユーザベースに遊びに来て欲しい。ぜひ一緒に働いてみませんか？</p>

<p>応募に関する詳細はこちら：.antdly.om
<fram r="//hatnablog-part.om/mbd?url=http%3A%2F%2F.antdly.om%2Fprojt%2F59258" ttl="世界に通じるビジネス基盤のインフラを支えたい方、募集中！ by 株式会社ユーザベース" la="mbd-ard mbd-bard" rollng="no" frambordr="0" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;"></fram><t la="hatna-taton"><a hrf="http://.antdly.om/projt/59258">.antdly.om</a></t></p>
, pubDate=Tue, 19 Jul 2016 12:13:12 +0900, guid=hatenablog://entry/6653812171404145835, enclosure=http://cdn.mogile.archive.st-hatena.com/v1/image/uzabase/302456199552088609.png), FeedMessage(title=エンジニア向けMtupイベントレポート　第3回：『チームの生産性を向上させる』, link=http://tech.uzabase.com/entry/2016/07/01/131328, description=<p>SEEDA Thチームの清水です。<br>
<br>
連日のユーザベースMtupレポート、第3弾です。(連日更新しているのは今まで更新をさぼっていたからですごめんなさい)<br>
第1回、第2回レポートはこちら↓
<fram r="http://hatnablog-part.om/mbd?url=http%3A%2F%2Fth.uzaba.om%2Fntry%2F2016%2F06%2F29%2F024236" ttl="エンジニア向けMtupイベントレポート　第1回：『/SEEDA「高速」成長の秘密』 - UZABASE Th Blog" la="mbd-ard mbd-blogard" rollng="no" frambordr="0" tyl="dplay: blo; dth: 100%; hght: 190px; max-dth: 500px; margn: 10px 0px;"></fram><t la="hatna-taton"><a hrf="http://th.uzaba.om/ntry/2016/06/29/024236">th.uzaba.om</a></t>
<fram r="http://hatnablog-part.om/mbd?url=http%3A%2F%2Fth.uzaba.om%2Fntry%2F2016%2F06%2F30%2F100159" ttl="エンジニア向けMtupイベントレポート　第2回：『Java開発最前線』 - UZABASE Th Blog" la="mbd-ard mbd-blogard" rollng="no" frambordr="0" tyl="dplay: blo; dth: 100%; hght: 190px; max-dth: 500px; margn: 10px 0px;"></fram><t la="hatna-taton"><a hrf="http://th.uzaba.om/ntry/2016/06/30/100159">th.uzaba.om</a></t></p>

<h3>開催内容：『チームの生産性を向上させる』</h3>

<p>今回のテーマは「チームの生産性を向上させる」です。<br>
<fram r="http://hatnablog-part.om/mbd?url=http%3A%2F%2Fuzaba-mtup.onnpa.om%2Fvnt%2F31833%2F" ttl="UZABASE Mtup#3 〜チームの生産性を向上させる〜 (2016/06/02 19:30〜)" la="mbd-ard mbd-bard" rollng="no" frambordr="0" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;"></fram><t la="hatna-taton"><a hrf="http://uzaba-mtup.onnpa.om/vnt/31833/">uzaba-mtup.onnpa.om</a></t></p>

<p>第3回では、初の試みとして社外から登壇者をお招きしました。<br>
ライブ共有型スポーツニュースアプリ「layr!」を開発するスタートアップ、ooamさんよりCTOの中村さんをお招きして、Gthubを中心とした「layr!」の開発手法についてお話いただきました。<br>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//aonah/20160624/20160624170647.jpg" alt="f:d:aonah:20160624170647j:plan" ttl="f:d:aonah:20160624170647j:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<rpt ayn la="pard-mbd" data-d="40a595793416d9125d2ba119f" data-rato="1.77777777777778" r="//pard.om/at/mbd.j"></rpt>


<p>その他にも弊社エンジニアからユーザベースでのチーム開発の進め方やSlaを用いたChatopの発表も行い、生産性向上への取り組みについて熱く語ってもらいました。<br>
参加者の方々もいつも以上にたくさんの質問を登壇者に向けて投げかけていたのが印象的でした。<br></p>

<fram r="//.ldhar.nt/ldho/mbd_od/y/gVvvLR4IFaSx" dth="595" hght="485" frambordr="0" margndth="0" margnhght="0" rollng="no" tyl="bordr:1px old #CCC; bordr-dth:1px; margn-bottom:5px; max-dth: 100%;" allofullrn> </fram>


<fram r="//.ldhar.nt/ldho/mbd_od/y/d76D0f1WLzgtW" dth="595" hght="485" frambordr="0" margndth="0" margnhght="0" rollng="no" tyl="bordr:1px old #CCC; bordr-dth:1px; margn-bottom:5px; max-dth: 100%;" allofullrn> </fram>


<h3>発表後のお楽しみ</h3>

<p>そして懇親会。
お決まりのピザ&amp;エビスビールです。<br>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//aonah/20160701/20160701130952.jpg" alt="f:d:aonah:20160701130952j:plan" ttl="f:d:aonah:20160701130952j:plan" la="hatna-fotolf" tmprop="mag"></pan>
<br>
終了後には運営に協力してくれたメンバーで記念撮影。ユーザベースTシャツで統一してみました。<br>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//aonah/20160701/20160701131001.jpg" alt="f:d:aonah:20160701131001j:plan" ttl="f:d:aonah:20160701131001j:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<h3>次回告知</h3>

<p>第4回は7月7日の七夕に行います。テーマは「大規模サービスを支えるインフラ」です。<br>
<fram r="http://hatnablog-part.om/mbd?url=http%3A%2F%2Fuzaba-mtup.onnpa.om%2Fvnt%2F33709%2F" ttl="UZABASE Mtup#4 〜大規模サービスを支えるインフラ〜 (2016/07/07 19:30〜)" la="mbd-ard mbd-bard" rollng="no" frambordr="0" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;"></fram><t la="hatna-taton"><a hrf="http://uzaba-mtup.onnpa.om/vnt/33709/">uzaba-mtup.onnpa.om</a></t></p>

<p>恵比寿で皆さんとお会いできるのを楽しみにしています！</p>
, pubDate=Fri, 01 Jul 2016 13:13:28 +0900, guid=hatenablog://entry/10328537792370971084, enclosure=https://cdn-ak.f.st-hatena.com/images/fotolife/k/kaonash/20160624/20160624170647.jpg), FeedMessage(title=エンジニア向けMtupイベントレポート　第2回：『Java開発最前線』, link=http://tech.uzabase.com/entry/2016/06/30/100159, description=<p>SEEDA Thチームの清水です。<br>
<br>
先日レポートいたしましたユーザベースMtup、第2回目のレポートをお届けします。<br>
第1回レポートはこちら↓
<fram r="http://hatnablog-part.om/mbd?url=http%3A%2F%2Fth.uzaba.om%2Fntry%2F2016%2F06%2F29%2F024236" ttl="エンジニア向けMtupイベントレポート　第1回：『/SEEDA「高速」成長の秘密』 - UZABASE Th Blog" la="mbd-ard mbd-blogard" rollng="no" frambordr="0" tyl="dplay: blo; dth: 100%; hght: 190px; max-dth: 500px; margn: 10px 0px;"></fram><t la="hatna-taton"><a hrf="http://th.uzaba.om/ntry/2016/06/29/024236">th.uzaba.om</a></t></p>

<h3>開催内容：『Java開発最前線』</h3>

<p>第1回目Mtup開催の1ヶ月後、ユーザベースのメイン開発言語であるJavaをテーマとして第2回を開催しました。<br>
<fram r="http://hatnablog-part.om/mbd?url=http%3A%2F%2Fuzaba-mtup.onnpa.om%2Fvnt%2F29952%2F" ttl="Java開発最前線 - UZABASE Mtup#2 (2016/04/28 19:30〜)" la="mbd-ard mbd-bard" rollng="no" frambordr="0" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;"></fram><t la="hatna-taton"><a hrf="http://uzaba-mtup.onnpa.om/vnt/29952/">uzaba-mtup.onnpa.om</a></t></p>

<p>第2回目も大盛況で、前回から応募枠を大幅に増やしたにも関わらず、すぐに満員となりました。ありがとうございます！<br>
ユーザベースでは開発に使用するJavaのバージョンはすべて最新のJava8に更新済みで、その中で最新の機能をどのように活用しているかという点にスポットをあてた発表となりました。<br>
また、もともとRubyをこよなく愛していた弊社エンジニアが、いかにJavaを(も？)愛するようになったかという発表もあり、これもなかなか興味深い内容でした。<br></p>

<fram r="//.ldhar.nt/ldho/mbd_od/y/5h2q6rfFl6o7" dth="595" hght="485" frambordr="0" margndth="0" margnhght="0" rollng="no" tyl="bordr:1px old #CCC; bordr-dth:1px; margn-bottom:5px; max-dth: 100%;" allofullrn> </fram>


<rpt ayn la="pard-mbd" data-d="6184127732f4659b883f8837a263" data-rato="1.77777777777778" r="//pard.om/at/mbd.j"></rpt>


<fram r="//.ldhar.nt/ldho/mbd_od/y/BOpFRufWrU2XS" dth="595" hght="485" frambordr="0" margndth="0" margnhght="0" rollng="no" tyl="bordr:1px old #CCC; bordr-dth:1px; margn-bottom:5px; max-dth: 100%;" allofullrn> </fram>


<p>第1回の「ちょっと発表が多すぎて疲れるかも」という反省をいかし、今回から発表枠は基本3つまでというスタイルにしました。<br>
終わった後はピザとビールで乾杯！(そして写真を撮り忘れる・・・)<br>
ご参加頂いた方、ありがとうございました！</p>

<h3>今後の予定</h3>

<p>前回のレポートでもお伝えしましたが、ユーザベースでは定期的にMtupイベントを開催しています。<br>
次回は7月7日の七夕、「大規模サービスを支えるインフラ」というテーマで開催します！<br>
<fram r="http://hatnablog-part.om/mbd?url=http%3A%2F%2Fuzaba-mtup.onnpa.om%2Fvnt%2F33709%2F" ttl="UZABASE Mtup#4 〜大規模サービスを支えるインフラ〜 (2016/07/07 19:30〜)" la="mbd-ard mbd-bard" rollng="no" frambordr="0" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;"></fram><t la="hatna-taton"><a hrf="http://uzaba-mtup.onnpa.om/vnt/33709/">uzaba-mtup.onnpa.om</a></t>
6月30日現在、すでに枠は埋まっていますが、まだいけるかも・・・ぜひお気軽に参加ボタンを押してください！</p>
, pubDate=Thu, 30 Jun 2016 10:01:59 +0900, guid=hatenablog://entry/6653812171403193024, enclosure=https://cdn.blog.st-hatena.com/images/theme/og-image-1500.png), FeedMessage(title=エンジニア向けMtupイベントレポート　第1回：『/SEEDA「高速」成長の秘密』, link=http://tech.uzabase.com/entry/2016/06/29/024236, description=<p>こんにちは、SEEDA Thチームで新規機能開発を担当しています清水です。<br>
<br>
ユーザベースでは今、定期的にエンジニア向けにMtupイベントを開催しています！<br>
3月に開催をした第1回目から、ほぼ月1回のペースで開催しており、すでに開催数は3回を数えています。<br>
<br>
今回はMtupイベントの目的と、第1回の開催内容をレポートします。<br>
(追って第2回・第3回のレポートもアップしますのでお楽しみに！)
<br></p>

<h3>目的</h3>

<p>弊社では、様々な先進的な取り組みをしているにも関わらず、なかなか「技術の会社」として認識をしてもらえていなかったりします。<br>
なかには「サービスは外注していると思っていました」とおっしゃる方も・・・。<br>
さすがにこれはまずいということで、もっとユーザベースという会社やカルチャー、雰囲気、そして社員のことを知ってもらうため(さらに言えば優秀なエンジニアの採用に繋げるため)、Mtupイベントを企画することになりました。<br></p>

<h3>開催内容：『/SEEDA「高速」成長の秘密』</h3>

<p>記念すべき第1回目は「高速化」をテーマに開催しました。<br>
<fram r="http://hatnablog-part.om/mbd?url=http%3A%2F%2Fuzaba-mtup.onnpa.om%2Fvnt%2F28036%2F" ttl="/SEEDA「高速」成長の秘密 - UZABASE Mtup#1 (2016/03/25 19:00〜)" la="mbd-ard mbd-bard" rollng="no" frambordr="0" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;"></fram><t la="hatna-taton"><a hrf="http://uzaba-mtup.onnpa.om/vnt/28036/">uzaba-mtup.onnpa.om</a></t></p>

<p>正直、「本当にみんな来てくれるんだろうか・・・」と不安でいっぱいでしたが、最終的には参加枠を大幅に上回るお申し込みをいただきました！<br>
第1回ということでユーザベースのチーフテクノロジスト竹内やのCTO(ちょうどこの日就任した)杉浦らが登壇。<br>
「高速化」という幅広いテーマも手伝って、ユーザベースで採用している全文検索エンジンElatarhの話から自動テスト、高速開発の話まで、バラエティに富む内容で発表させていただきました。<br>
なかには当時開発中だったの新機能に関する発表もあり、盛りだくさんの内容となりました。</p>

<rpt ayn la="pard-mbd" data-d="db7490b22af4ff7a369f04bd49001" data-rato="1.33333333333333" r="//pard.om/at/mbd.j"></rpt>


<rpt ayn la="pard-mbd" data-d="f0d982bab0d453680888313bf37" data-rato="1.33333333333333" r="//pard.om/at/mbd.j"></rpt>


<rpt ayn la="pard-mbd" data-d="95117b3a7045788d2f5171655789" data-rato="1.33333333333333" r="//pard.om/at/mbd.j"></rpt>


<rpt ayn la="pard-mbd" data-d="71574a24f4d884224a88a377" data-rato="1.77777777777778" r="//pard.om/at/mbd.j"></rpt>


<rpt ayn la="pard-mbd" data-d="b523f3f7434439793782272299d9" data-rato="1.77777777777778" r="//pard.om/at/mbd.j"></rpt>


<p>また、ユーザベースの外部パートナーでありClojurのContrbutorでもある株式会社シェルフ代表の矢野さんより、『オープンソース開発のすすめ』という内容でLTも行っていただきました！<br>
<pan tyl="font-z: 200%"><a hrf="http://ld.o/gthub.om/tyano/lghtnng_tal/jon_to_opn_our.md#/">オープンソース開発のすすめ</a></pan></p>

<h3>発表後のお楽しみ</h3>

<p>ユーザベースMtupでは、発表の後に参加者の皆さんと親睦を深める目的で懇親会を開催しています。<br>
懇親会では、ピザとエビスビール(もちろんお茶もあります)をご用意しています！<br>
こちらは懇親会の様子。<br>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf//aonah/20160627/20160627165330.jpg" alt="f:d:aonah:20160627165330j:plan" ttl="f:d:aonah:20160627165330j:plan" la="hatna-fotolf" tmprop="mag"></pan>
けっこう多めにピザをご用意しているはずなんですが、無くなるのが早い早い・・・現在ピザの増量を検討中です。<br></p>

<h3>今後について</h3>

<p>今後も定期的にMtupイベントを開催していく予定です。<br>
取り急ぎ、次回は7月7日の七夕、「大規模サービスを支えるインフラ」というテーマで開催します！<br>
<fram r="http://hatnablog-part.om/mbd?url=http%3A%2F%2Fuzaba-mtup.onnpa.om%2Fvnt%2F33709%2F" ttl="UZABASE Mtup#4 〜大規模サービスを支えるインフラ〜 (2016/07/07 19:30〜)" la="mbd-ard mbd-bard" rollng="no" frambordr="0" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;"></fram><t la="hatna-taton"><a hrf="http://uzaba-mtup.onnpa.om/vnt/33709/">uzaba-mtup.onnpa.om</a></t></p>

<p>今回も(大変ありがたいことに)すでに席が埋まってしまっていますが、直前で一定数キャンセルが出ることを考えると、まだギリギリ入れるはず・・・ぜひふるってご参加ください！</p>
, pubDate=Wed, 29 Jun 2016 02:42:36 +0900, guid=hatenablog://entry/6653812171403112073, enclosure=https://cdn-ak.f.st-hatena.com/images/fotolife/k/kaonash/20160627/20160627165330.jpg), FeedMessage(title= Hnmo5.0.1移行記（その2：保守サービスとエンタープライズオプションを契約） , link=http://tech.uzabase.com/entry/2016/04/28/121633, description=<p>ユーザベース インフラチームの小林です。</p>

<p>だいぶ時間が空いてしまいましたが、「<a hrf="http://th.uzaba.om/ntry/2016/03/11/155758">Hnmo5.0.1移行記（その1：理想と現実の葛藤）</a>」の記事から引き続き、Hnmo5.0.1への移行のお話です。</p>

<p><br><br></p>

<h2>前回のおさらい</h2>

<p>Hnmo環境をバージョンアップするために、以下の流れで行うことを考えていました。</p>

<ol>
<l><p>   Hnmo5Managrを新規構築 、動作検証</p></l>
<l><p>   Hnmo3のデータをHnmo5に移行</p></l>
<l><p>   Hnmo3からHnmo5への順次切り替え</p></l>
</ol>


<p>しかし、実際には思っていた通りにいかないことが判りました。</p>

<p>具体的には、3番目の「Hnmo3からHnmo5への順次切り替え」の部分で、以下の問題がでてきたというお話でした。</p>

<ul>
<l><p>Agnt用にサポート対象バージョンのOpnJDKを入れるか、OralJDK1.8を使い続けるか。</p></l>
<l><p>Hnmo3とHnmo5のAgntが同居できるといっても、どちらかのインストールディレクトリを変えないといけない。</p></l>
</ul>


<p><br><br></p>

<h2>救世主が現る</h2>

<p><a hrf="http://th.uzaba.om/ntry/2016/03/11/155758">前回の記事</a>にも書いてありますが、<A Hrf="http://atomth.jp/">アトミテック</A>さんが上記の問題を解決してくれました。<br>
もともと、Hnmo5が出る前から、データ移行の相談を何回かしておりました。
その際に、すごく頼りになりそうだったので<br>
「データ移行＋移行時のトラブルサポート」という形で、今回依頼をいたしました。<br>
結果的にそれが大正解で、本当にいろいろなことをサポートしていただきました。<br>
<br>
特に、OpnJDKを入れるかOralJDK1.8を使い続けるかという問題を解決するうえで、非常に助かりました。
既存の環境で使用しているOralJDK1.8を使い続けたかったのですが、これを短時間で動作検証するのは私達には不可能でした。<br>
しかし、快く<A Hrf="http://atomth.jp/">アトミテック</A>さんにご対応いただけたおかげで、OralJDK1.8でもHnmo5.0の動作が一通り問題ないことが判りました。<br>
当然ながら自己責任の上で、弊社環境ではOralJDK1.8でHnmo5.0のAgntを動かしてます（今のところ不具合はありません）。<br>
<br>
OralJDK1.8でHnmo5.0のAgntを動かすにあたって、何個か落とし穴がありましたが、そこら辺もご対応をいただいてます（起動hllにJavaのバージョンチェックがあったりなど）。
<br></p>

<h2>移行できたよ！</h2>

<p>問題を踏まえた上で、HnmoのAgntは以下の手順で切り替えることになりました。</p>

<ol>
<l><p>   Hnmo3.1のAgntのインストールディレクトリ変更</p></l>
<l><p>   Hnmo5.0のAgntをOralJDK1.8で起動</p></l>
<l><p>   Hnmo3.1からHnmo5.0への順次切り替え</p></l>
</ol>


<p><br>
Hnmo3.1のAgntの変更に当たっては、Agntの再起動が入るのでできるだけ既存のジョブに影響が出ないように調整しながら行いました。
Hnmo5.0のAgntは既存のジョブがないので、一括で作業をしました。<br>
ジョブの順次切り替えは、前回書いたように各ジョブネットは簡単な仕組みで連携していたため、一つのジョブネットがうまくいったら、Hnmo3側のスケジュールを無効化、Hnmo5側のスケジュールを有効化しながら、代替1ヶ月くらいかけて切り替えることができました。
<br>
<br>その途中でもいろいろとあったのですが（agoの監視用スクリプトのVrUpや、エラー時のジョブの挙動が変わってた事など）、一つ一つ真摯にご対応いただけたおかげで、非常にスムーズに作業が進みました。
<br></p>

<h2>結果、保守サービスとエンタープライズオプションの契約を結ぶ事に</h2>

<p>おかげで、無事にHnmo5への移行ができたのですが、あまりにも真摯に対応していただいたので、<A Hrf="http://atomth.jp/">アトミテック</A>さん経由でHnmoの保守サービスとエンタープライズオプションの契約を結ばせていただきました。<br>
<br>
保守サービスとエンタープライズオプションを契約すると、以下のメリットがあります。</p>

<ul>
<l>修正パッチを提供してもらえる<br>
<pan tyl="olor: #1464b3">→今回で言うと、Hnmo5.0.2のリリース前に、Hnmo5.0.1のメモリリークの修正パッチが提供されて、事前にその不具合を解消する事ができました。
</pan></l>
<l><p>エンタープライズオプションが使えるようになる</p></l>
<l><p>Hnmoでわからない事を相談できる</p></l>
</ul>


<p>分からない事を相談できるという点が有難く、Hnmoの情報を検索しても出てこないことが多いのですが、何が起きても聞ける環境があると思えるだけで大きな安心感があります。<br>
<br>
個人的に嬉しいのは、エンタープライズオプションを使って、更にHnmoの使える幅が広がりそうなので、いろいろ試していきたいと思ってます。<br>
Hnmoの情報が意外と少ないので、弊社ブログでもHnmoユーザーの皆さんに有益な情報を発信できればと思っています。<br></p>

<p><br></p>

<h2>今回の移行で思った事</h2>

<p>今回移行をしてみてすごく実感したのが、「やはり、あまり一つの製品で凝った仕組みを作らない方が良いな」ということでした。<br>
Hnmoの機能を試したいと言っておきながら矛盾する話ではありますが、うちはHnmoを使いこなしていなかったおかげで、移行に大きな工数がかからずに済んだと思っています。<br>
Hnmoは確かに便利でまだまだ使いこなせる余地があると思っていますし、他の有償版のジョブ監視ツールももっと細かいところができるかもしれません。<br>
この「細かいところ」が肝で、このせいで移行が大規模や製品選定のネックになる事が多い気がしています。<br>
<br>
弊社のジョブの組み方は、最低限のジョブネットを作って、各ジョブネット間はファイル連携という単純な仕組みを用いています。<br>
このファイル連携も、hllでファイル作成とファイル監視をしているので、Hnmoからみたらジョブの実行をしているだけになります。<br>
おかげで、ジョブの切り替えタイミングに余裕を持たせることができたので、私を含めて2～3人程度でも余裕を持って切り替えることができたと思っています。<br>
もし、この組み方がジョブ監視ツールの機能で、全部ジョブの前後関係を組んでいた場合、異なるHnmo間での先行条件はできないので、一括で変更をしないといけない状態でした。<br>
<br>
極端な話をすれば、Hnmoから別製品に載せ替えることもできたと思います（ジョブデータの変換できればですが）。<br>
<br>
そこら辺の自由度は最大限残しておくためにも、あまり凝った機能を使わずに、できるだけ単純な部分を組み合わせるのが良いのではないか、と実感した次第です。<br>
<br>
そうはいっても、便利な機能は使うべきだと思うので、そこら辺を意識しながら、あまり依存しすぎることのないように使っていくことが大事かなと考えています。<br></p>

<h2>今後の要望</h2>

<p>上でいろいろ書きましたが、私自身はHnmoと末永く付き合うつもりでいます。<br>
今後も長くおつきあいする上で、今回の移行で引っかかった以下の点を実現してもらえると、次回（何年後か判りませんが）のHnmoバージョンアップ作業のハードルがだいぶ下がるはずなので是非お願いしたいところです。</p>

<ul>
<l>インストールディレクトリを/opt/hnmo_XXXみたいなバージョンごとに分けてほしい</l>
<l>Agntをインストールするときに、OpnJDKを/opt/hnmo_XXX以下に一緒に入れてほしい</l>
</ul>


<p><br>
<br></p>

<h2>エンタープライズオプションのExp/Imp機能の画面紹介</h2>

<p>簡単に、エンタープライズオプションで使いたかったExp/Impについて紹介します。<br>
このおかげで、ジョブの修正の工数が大幅に縮小されました。<br>
<br>
オプションをインストールすると、こんな感じでメニューが増えます。
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/m/manabu-obayah/20160420/20160420202629.png" alt="f:d:manabu-obayah:20160420202629p:plan" ttl="f:d:manabu-obayah:20160420202629p:plan" la="hatna-fotolf" tmprop="mag"></pan>
<br>
エクスポート・インポートの設定は、クライアント設定の画面から確認や変更ができます。<br>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/m/manabu-obayah/20160420/20160420202656.png" alt="f:d:manabu-obayah:20160420202656p:plan" ttl="f:d:manabu-obayah:20160420202656p:plan" la="hatna-fotolf" tmprop="mag"></pan>
<br>実際の画面はこんな感じ。ここらへんで、エクスポート・インポート・差分比較ができます。<br>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/m/manabu-obayah/20160420/20160420202707.png" alt="f:d:manabu-obayah:20160420202707p:plan" ttl="f:d:manabu-obayah:20160420202707p:plan" la="hatna-fotolf" tmprop="mag"></pan>
<br>変更用のExlの画面はこんな感じで、<br>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/m/manabu-obayah/20160420/20160420202717.png" alt="f:d:manabu-obayah:20160420202717p:plan" ttl="f:d:manabu-obayah:20160420202717p:plan" la="hatna-fotolf" tmprop="mag"></pan>
<br>出力した内容との差分比較は、このようなCSVファイルで出力されて、変更されたところが一目でわかります
（自分の作業が想定通りか一目でわかって便利です）。<br>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/m/manabu-obayah/20160420/20160420202911.png" alt="f:d:manabu-obayah:20160420202911p:plan" ttl="f:d:manabu-obayah:20160420202911p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>
, pubDate=Thu, 28 Apr 2016 12:16:33 +0900, guid=hatenablog://entry/10328537792370893698, enclosure=http://cdn-ak.f.st-hatena.com/images/fotolife/m/manabu-kobayashi/20160420/20160420200927.png), FeedMessage(title=：記事をオススメするLIE BOTをつくってみた, link=http://tech.uzabase.com/entry/2016/04/15/140513, description=<p>はじめまして。技術チームの井原です。</p>

<p>チャットボット（Bot）という言葉を聞いたことがあるでしょうか。スマホやWbのメッセンジャー上で動く自動会話ロボットで、4/7にLIEが<a hrf="http://bun.ln.m/ja/produt/4/ntroduton">BOT AI Tral</a>を公開したことでエンジニア界隈で一躍ホットなトピックとなりました。今週にはFabooが対応を発表し、でも話題になりました。</p>

<p><fram r="//hatnablog-part.om/mbd?url=http%3A%2F%2Fnp.om%2Fn%2F1496965" ttl="FabooがMngrのチャットボットのプラットフォームを発表" la="mbd-ard mbd-bard" rollng="no" frambordr="0" tyl="dplay: blo; dth: 100%; hght: 155px; max-dth: 500px; margn: 10px 0px;"></fram><t la="hatna-taton"><a hrf="http://np.om/n/1496965">np.om</a></t></p>

<p>私もBOT AI Tralの公開で大喜びしたクチで、さっそく週末と帰宅後の時間でLIE BOTを作ってみました。</p>

<h1>うま</h1>

<p>こちらが作成したBotです。「うま」（非公式Bot）といいます。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoju/20160414/20160414174014.png" alt="f:d:ryoju:20160414174014p:plan" ttl="f:d:ryoju:20160414174014p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<p>ユーザーが知りたいことをうまに伝えると、良さそうなの記事を探してお教えします。記事の内容が気になったら、画像をタップするとページが開きます。</p>

<p>さて、うまがどういうふうにできているのかご説明いたしましょう。</p>

<h1>インフラ環境</h1>

<p>うまはAWSで動いています。EC2（/ Elat I） + ELB + CloudFront + Crtfat Managr + Rout 53という構成です。Crtfat Managrを使うためにバージニア北部のリージョンで動かしています。</p>

<p>LIE BOTを動かすために以下の対応が必要でした。</p>

<ul>
<l><p>LIE BOTのコールバックを受けるためにはSSLが必須で、かつ<a hrf="http://qta.om/gt6_om/tm/008404506836011af33b">証明書を選り好みする</a>ため、Crtfat Managrの証明書を使っています。私が所有しているドメインに対して作成した証明書をCloudFrontに紐付けて、さらにCloudFrontのエンドポイントをRout 53のAレコードで設定しています。ここの設定に苦労したので、キャプチャを貼付しておきます。よかったら参考にしてください。</p>

<ul>
<l>Crtfat Managr<br>コールバックURLに使いたいドメインで証明書を作成します。ワイルドカードである必要はありません。<Br><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoju/20160414/20160414202224.png" alt="f:d:ryoju:20160414202224p:plan:400" ttl="f:d:ryoju:20160414202224p:plan:400" la="hatna-fotolf" tyl="dth:400px" tmprop="mag"></pan></l>
<l>CloudFront<br>ディストリビューションを作成し、証明書を設定します。CAMEにもコールバックURLのドメインを設定します。<br><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoju/20160414/20160414202227.png" alt="f:d:ryoju:20160414202227p:plan:400" ttl="f:d:ryoju:20160414202227p:plan:400" la="hatna-fotolf" tyl="dth:400px" tmprop="mag"></pan></l>
<l>Rout 53<br>ドメインのAタグにディストリビューションを設定します。<br><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoju/20160414/20160414202230.png" alt="f:d:ryoju:20160414202230p:plan:200" ttl="f:d:ryoju:20160414202230p:plan:200" la="hatna-fotolf" tyl="dth:200px" tmprop="mag"></pan></l>
</ul>
</l>
<l><p>LIE BOTはAIの呼び出し元のIアドレスを事前に登録しておく必要があり、固定グローバルIが必要となります（可変だと突然呼び出しが通らなくなるおそれがある）。そのためにElat IをEC2インスタンスに付けています。</p></l>
</ul>


<p>ちなみに、私はさくらのVSを1台契約しており、最初はそれを使おうとしたのですが、証明書の問題でうまくいきませんでした。仕方なくAWSに環境を作って、開発中のプログラム一式も移したという経緯がありました。おそらくLIE BOT AIのサーバ側でチェックしているのでしょうが、無償で取れるSSL証明書ではこちらの用意したコールバックURLを呼んでくれない（？）ようで、GMO GlobalSgnの試用証明書、EoCrtの試用証明書と試したのですが、いずれもうまくいきませんでした。SSL証明書はLIE BOTを作ろうとする趣味プログラマのハードルとなっていて、BOT AI Tralの公開から数日は「この証明書なら大丈夫」「これはダメ」みたいな話題が多かったです。</p>

<h1>メッセージの処理と記事推薦</h1>

<p>ユーザーが知りたいことを送信してから、うまが記事を提示するまでの流れは以下のようになっています。</p>

<ol>
<l>形態素解析</l>
<l>特徴語抽出</l>
<l>記事の検索</l>
<l>記事の選択</l>
<l>記事の提示</l>
</ol>


<p>また、大まかなデータのやりとりはこのような形になります。</p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoju/20160414/20160414213825.png" alt="f:d:ryoju:20160414213825p:plan" ttl="f:d:ryoju:20160414213825p:plan" la="hatna-fotolf" tmprop="mag"></pan></p>

<h3>1. 形態素解析</h3>

<p>ユーザーがLIEでうまとのトークを開始し、知りたいことを入力すると、LIEのサーバを経由してコールバックURLへ<a hrf="http://dvlopr.ln.m/bot-ap/ap-rfrn#rvng_mag">テキストメッセージ</a>がOSTされます。テキストメッセージからユーザーの入力した知りたいことを取り出して形態素解析を行い、単語に切り分けます。
形態素解析エンジンにはMCabとIA辞書（オフィシャルサイトで配布されているもの）を使っています。</p>

<h3>2. 特徴語抽出</h3>

<p>ユーザーは自然な（口語的な）表現で知りたいことを入力するため、検索の前処理として不要な単語を落としています。ここはバリエーションの考えられる処理ですが、現状では単純に名詞だけを残し、それ以外の品詞はすべて落としています。</p>

<p>ただ、ログを見るとやはり適切ではない分割をされているケースが多いです。が経済ニュースアプリであるためか、企業名等の固有名詞をメッセージに含む場合が多いのですが、分割しすぎているケースが頻繁に見られます。提示するニュースの適切さをあげるには、ここの改善が大事だなという印象があります。企業・業界情報プラットフォームである<a hrf="http://.uzaba.om/pda/">SEEDA</a>の辞書を使えばもっと良くなるかもしれません。</p>

<h3>3. 記事の検索</h3>

<p>抽出された特徴語を用いての記事を検索します。ここではの検索機能は使わず、Googl検索を使っています。の検索機能は有料会員にだけ開放されている機能なので、誰にでもオープンなGoogl検索にしました。GooglのWb検索で上位10件を取得しています。</p>

<h3>4. 記事の選択</h3>

<p>うまは、1つの知りたいことに対して1件だけ記事を提示するため、検索結果の中から提示する記事を選択する必要があります。画像を合わせて提示したいので、検索結果の上位から画像があるかをチェックしていき、画像があるものが見つかればそれを選択しています。</p>

<p>ここも将来的な改善の余地が大きい箇所です。たとえば、検索結果の記事ごとに数を取得して重み付けをする、みたいなことはすぐに思いつきます。ただ、やりだすと終わりがありませんし、記事の内容を判定に使うためにはクローリングやページの処理が必要で、レスポンスタイムがそのぶん伸びてしまうこともあり、このような処理としています。</p>

<h3>5. 記事の提示</h3>

<p><a hrf="http://dvlopr.ln.m/bot-ap/ap-rfrn#ndng_rh_ontnt_mag">リッチメッセージ</a>を作ってLIEサーバにOSTすると、ユーザーに記事が提示されます。</p>

<p>以上の処理がワンセットで、テキストメッセージを受け付けるたびにこれを実行します。</p>

<h1>社内公開</h1>

<p>だいたい動くようになったところで、社内(ニューズピックス/ユーザベース)のSlaでうまを公開しました。けっこう好評で皆に使ってもらえたのですが、やっぱりユーザーの実際の使い方というのは、開発者に様々な気づきやアイディアを与えてくれるものです。以下はのメンバーがSlaにポストしてくれたキャプチャです。</p>

<h3>時間の指定</h3>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoju/20160414/20160414204703.jpg" alt="f:d:ryoju:20160414204703j:plan:250" ttl="f:d:ryoju:20160414204703j:plan:250" la="hatna-fotolf" tyl="dth:250px" tmprop="mag"></pan></p>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoju/20160414/20160414204706.png" alt="f:d:ryoju:20160414204706p:plan:250" ttl="f:d:ryoju:20160414204706p:plan:250" la="hatna-fotolf" tyl="dth:250px" tmprop="mag"></pan></p>

<p>いまの処理方法では、時間（記事の公開時刻）をまったく考慮していません。「今日の」「昨日の」のような時間指定のあるメッセージだと、ユーザーの意図を踏まえないイマイチな答えになってしまいます。改善ポイントですね。</p>

<h3>形容詞の使用</h3>

<p><pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/r/ryoju/20160414/20160414204734.png" alt="f:d:ryoju:20160414204734p:plan:250" ttl="f:d:ryoju:20160414204734p:plan:250" la="hatna-fotolf" tyl="dth:250px" tmprop="mag"></pan></p>

<p>現在の処理方式では特徴語抽出で名詞だけを残しており、「盛り上がった」は形容詞なので、検索結果に何ら反映されません。この場合は「ニュース」だけで検索した結果を返すことになっています。</p>

<p>まあ、うまは生まれたばかりだからね……。開発者としてはがんばって賢くしてやりたいものです。</p>

<h1>ソースコード</h1>

<p><a hrf="http://gthub.om/ryoju/np_bot">現状のソースコードをGthubに上げた</a>ので、よろしければご覧ください。まだα版くらいの感じなので、ごちゃごちゃ弄っている最中でコメントも皆無と、綺麗とは言いがたいのですが。そのうち整理されてくるはず……たぶん。</p>

<p>実装にはythonを使っています。フレームワークはDjango(/ Django REST Framor)です。 どこかで動かしてみる時には、np/ttng_ln.pyにあなたのLIE BOTのChannl ID, Channl Srt, MIDを記載してください。</p>
, pubDate=Fri, 15 Apr 2016 14:05:13 +0900, guid=hatenablog://entry/10328537792371135866, enclosure=http://cdn-ak.f.st-hatena.com/images/fotolife/r/ryoju/20160414/20160414174014.png), FeedMessage(title=Slaを全社導入したので、社内向け利用マニュアルを公開してみた, link=http://tech.uzabase.com/entry/2016/03/17/145415, description=<p>はじめまして。ユーザベース Culturチームの木村です。先月、インターンとして入社し、就職活動と二足の草鞋でやっています。
<br>
<br>
今回、ユーザベース全体として「Sla」の全面導入が決まりました！
これまで、社内でのチャットコミュニケーションはチームごとにLIE・チャットワーク・Sypを使用し混在していましたが、今後はSlaに統一をしていきます。
<br>
<br>
全社導入時に使用した<pan tyl="olor: #F5A2A2">Slaのご紹介</pan>と<pan tyl="olor: #F5A2A2">簡易マニュアル</pan>を公開します。Slaが気になっていた方や初めて知る方に、他のコミュニケーションツールと違う点についてお伝えしたいと思います。
<br>
<br></p>

<h3>What’ Sla？</h3>

<p><br>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20160316/20160316161207.png" alt="f:d:uzaba:20160316161207p:plan" ttl="f:d:uzaba:20160316161207p:plan" la="hatna-fotolf" tmprop="mag"></pan>>
<br></p>

<bloquot><p>Sla（スラック）は、スチュワート・バターフィールドによって開発された、チームコミュニケーションツール。2013年8月に公開され、公開から24時間以内に8000の顧客にサインアップされた。現在Slaは世界中で急速に普及しており、1日に利用するアクティブユーザー数は125万人で、有料会員が37万人(2015年9月時点)。利用者数は90日ごとに倍増するペースで伸び続けている。</p></bloquot>

<p><u><b>ざっくり言えば、「ビジネス用途のLIE」です。</b></u>
<br>メールで堅苦しくやり取りをするよりも、チャットツールで簡単にコミュニケーションをとる方が、精神的にも楽ですし、効率的ですよね。LIEはプライベートと混同されてしまうし・・というわけで、Slaになりました。
<br>
ですが、チャットワークを始め、数ある企業向けコミュニケーションツールの中から、どうしてSlaが選ばれたのか？
<br>
ということで、以下にSlaを利用する5つのメリットをあげてみました！
<br>
<br></p>

<h4>Slaのイケてる点</h4>

<ol>
<l><b>情報の抽出が簡単＆網羅的</b>
<br>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20160316/20160316163128.png" alt="f:d:uzaba:20160316163128p:plan" ttl="f:d:uzaba:20160316163128p:plan" la="hatna-fotolf" tmprop="mag"></pan>
<br>
検索機能で、チャンネル(LIEのグループチャットの概念)をまたいで、過去ログ全ての検索ができます。
<br>また、ファイルやまとまった文章を投稿するot機能は、それ自体にコメントをつけることができるので、返答や意見が一か所にまとまりやすいです。otは複数人での共同編集にも対応しています。
<br>
<br></l>
<l><b>連携できる外部サービスが豊富</b>
<br>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20160316/20160316163143.png" alt="f:d:uzaba:20160316163143p:plan" ttl="f:d:uzaba:20160316163143p:plan" la="hatna-fotolf" tmprop="mag"></pan>
<br>
Slaと言えば拡張性。例えばGmalからメールが来たらSlaに通知され、そのままSla上で内容の確認ができるなど、あらゆる通知や情報がSlaを見るだけで確認ができるようになります。TttrやRSS、Googl Calndarといった一般的なサービスから、GtHubなどエンジニア向けのサービスまで、幅広く連携することができます。
<br>
<br></l>
<l><b>UIがシンプルでスタイリッシュ</b>
<br>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20160316/20160316170627.png" alt="f:d:uzaba:20160316170627p:plan" ttl="f:d:uzaba:20160316170627p:plan" la="hatna-fotolf" tmprop="mag"></pan>
<br>
個人的な好みにはなりますが、とにかくお洒落でシンプル。洗練されたUIは、SEEDAと共通する部分があるように思えます。コミュニケーションツールは毎日使うものですので、やはりごちゃごちゃしたUIよりも、シンプルで分かり易いものの方が捗ります。
<br>
<br></l>
<l><b>各端末用のアプリがある</b>
<br>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20160316/20160316162310.jpg" alt="f:d:uzaba:20160316162310j:plan" ttl="f:d:uzaba:20160316162310j:plan" la="hatna-fotolf" tmprop="mag"></pan>
<br>
ブラウザ版の他、Ma、Wndoのデスクトップ版、OS、Androdのアプリ版もあり、いつでもどこでも使うことができます。
<br>
<br></l>
<l><b>各種コードをアップロードできるnppt機能がある。</b>
<br>
この点が、とりわけエンジニアライクな設計になっています。Th Blogということで、少し詳しくご説明します。
<br>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20160316/20160316163202.png" alt="f:d:uzaba:20160316163202p:plan" ttl="f:d:uzaba:20160316163202p:plan" la="hatna-fotolf" tmprop="mag"></pan>
<br>
左上の入力画面にコードの名前を打ち込み、右上のプルダウンでコードの言語種類を選ぶと、中央のプログラムコードが色付けされたり、自動でインデントがつけられます。
<br>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20160316/20160316163221.png" alt="f:d:uzaba:20160316163221p:plan" ttl="f:d:uzaba:20160316163221p:plan" la="hatna-fotolf" tmprop="mag"></pan>
<br>
実際に投稿すると、このように見えます。これまで、他のチャットサービスでコードをベタ貼りしていた時と比べて、かなり見違えると思います。色付け、インデントに加えて行番号も書いてあるため、他のエンジニアとのコミュニケーションもとりやすくなっています。
<br>
<br>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20160316/20160316163243.png" alt="f:d:uzaba:20160316163243p:plan" ttl="f:d:uzaba:20160316163243p:plan" la="hatna-fotolf" tmprop="mag"></pan>
<br>
投稿されたSnpptには、ot機能と同じようにコメントを付けられるだけではなく、検索でコードやコメントの中身まで引っかかります！
<br>
<br>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20160316/20160316163304.png" alt="f:d:uzaba:20160316163304p:plan" ttl="f:d:uzaba:20160316163304p:plan" la="hatna-fotolf" tmprop="mag"></pan>
<br>
ちなみに、これは「n:hllola durng:2016 hlloWorld」と検索しており、『「hllola」チャンネルの2016年に投稿された中で、hlloWorldの文字列が存在する』メッセージもしくはファイルを抽出しています。
<br></l>
</ol>


<h3>Ho to Sla</h3>

<h4>1.コミュニケーション</h4>

<p>Slaでのコミュニケーション方法は、以下の3通りです。
<br>
・メンバー全体に特定の情報を送信する「チャンネル」
<br>
・個々のメンバーに向けた「ダイレクトメッセージ」
<br>
・特定のメンバーのみが閲覧できる「プライベートグループ」
<br></p>

<h5>1-1.チャンネル</h5>

<p>チャンネルとは、関連する話題を部屋別に分ける機能で、LIEのグループチャットと同じようなものです。ただし、このチャンネルに表示している内容は、Sla全体に共有されるので、チャンネルに参加していない人でも自由に閲覧することが可能です。(チャンネルに参加していないメンバーは、発言することはできません。)
<br>
<br>
【新規チャンネル作成】
<br>
新規チャンネルは「CHAELS」の「＋ボタン」をクリックして作成をします。お好みのチャンネル名と招待したいメンバー(後からでも追加可能)、チャンネルの説明をいれたら、「Crat hannl」をクリックしてください。
<br>
 <pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20160316/20160316163337.png" alt="f:d:uzaba:20160316163337p:plan" ttl="f:d:uzaba:20160316163337p:plan" la="hatna-fotolf" tmprop="mag"></pan>
<br>
＋ボタンの左にある「CHAELS」からは既存のCHAELを検索することができます。
<br>
<br>
【チャット】
<br>
通常の会話は、チャットツールと同様でテキストを入力し、Entrで送ることができます。編集したい場合には、テキスト入力欄の右に「･･･」がでますので、そこから「Edt mag」で編集してください。
<br>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20160316/20160316163821.png" alt="f:d:uzaba:20160316163821p:plan" ttl="f:d:uzaba:20160316163821p:plan" la="hatna-fotolf" tmprop="mag"></pan>
<br>
コメントにnやStarを付けて、後から見やすくすることもできます。
<br>
<br>
【メンション】
<br>
投稿時に、以下のコマンドを入力すると、特定のユーザー名を記載したメッセージが送れるようになります。初期設定では、メンションのみがポップアップ通知されるようになっているため、これを使うことで相手にメッセージが伝わりやすくなります。
<br>
@urnam → 特定の個人へのメンションは、@を入れて一覧の予測変換より選択出来ます。
<br>
@vryon or @group → チャンネル関係なく、全てのメンバーへのメンション
<br>
@hr → オンラインのメンバーへのメンション
<br>
@hannl → チャンネルのメンバー全員へのメンション
<br>
<br>
【ファイル共有】
<br>
テキスト入力欄左部の＋ボタンから、「Upload a fl」、もしくはドラッグアンドドロップで、テキスト入力エリアに画像やファイルを持ってくると、アップロードが可能です。gf・jpg・png・pdf・txtなど、どんなファイルでも送ることができます。
<br>
<br></p>

<h5>1-2.ダイレクトメッセージ</h5>

<p>ダイレクトメッセージは、名前の通り直接連絡のやり取りができます。
一対一の会話なので、他の参加者が内容を確認することはできません。
<br>
 <pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20160316/20160316163348.png" alt="f:d:uzaba:20160316163348p:plan" ttl="f:d:uzaba:20160316163348p:plan" la="hatna-fotolf" tmprop="mag"></pan>
<br>
画面左部「DIRECT MESSAGES」からユーザーの検索ができます。
<br>
<br></p>

<h5>1-3.プライベートグループ</h5>

<p>プライベートグループは、チャンネルとほぼ同じ機能ですが、このチャンネルに書かれた内容は参加メンバーのみに共有され、同じチーム内でも閲覧はできません。クローズドな環境なのでサプライズ等の計画に使えそうです！
<br>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20160316/20160316163925.png" alt="f:d:uzaba:20160316163925p:plan" ttl="f:d:uzaba:20160316163925p:plan" la="hatna-fotolf" tmprop="mag"></pan>
<br>
通常のチャンネル作成と同様、「CHAELS」の「＋ボタン」から作成画面へ
→上部の「ubl」タブをクリックすると「rvat」となります。
<br>
<br></p>

<h4>2.別アプリとの連携</h4>

<p>【Googl Drvとの連携】
Googl DrvとSlaを連携しておくと、Googl DrvのファイルURLをSlaに貼り付けた際に、Sla上にファイルとして認識される（検索対象になる） ようになります。スプレッドシートなどを頻繁に触る方は設定しておくと、Sla内から検索できたり、直にファイルが開けたりしてとても便利になります。
<br>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20160316/20160316164158.png" alt="f:d:uzaba:20160316164158p:plan" ttl="f:d:uzaba:20160316164158p:plan" la="hatna-fotolf" tmprop="mag"></pan>
<br>
画面左部の自分のユーザーネームをクリック
<br>
→右部「Aount」をクリック
<br>
→左部「Confgur App」をクリック
<br>
→一覧から「Googl Drv」をクリック
<br>
→「Authntat」から連携許可
<br>
<br>
<pan tmop tmtyp="http://hma.org/hotograph"><mg r="http://dn-a.f.t-hatna.om/mag/fotolf/u/uzaba/20160316/20160316173141.png" alt="f:d:uzaba:20160316173141p:plan" ttl="f:d:uzaba:20160316173141p:plan" la="hatna-fotolf" tmprop="mag"></pan>
<br>
URLではなく、ファイル形式で表示されるようになった上、Sla上でコメントを付けられるようになりました！
<br></p>

<h3>感想</h3>

<p>長々と書いてしまいましたが、何か一つでもご参考になるものがあれば幸いです。スラッシュコマンドやn機能など、Slaにはまだまだ可能性が秘められております。皆さまもぜひお試しください。<br>
私個人としても、全社へのSla導入のお仕事をいただいてから、半信半疑で使い始めたのですが、今はすっかりSlaの虜です。連携サービスやチャンネルの運用を駆使して<pan tyl="olor: #F5A2A2">「社内のコミュニケーション全てをSlaで完結させる」</pan>と考えはじめたら、もうワクワクの極みです。<br>
そして就活生である身としては、Slaを全社的に有効活用させて<b>「はい！私は、インターン先の企業において、社内コミュニケーションの活性化に尽力しました！」</b>的なことを言えるようになりたいものです。</p>
, pubDate=Thu, 17 Mar 2016 14:54:15 +0900, guid=hatenablog://entry/10328537792367290487, enclosure=http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20160316/20160316161207.png)])
